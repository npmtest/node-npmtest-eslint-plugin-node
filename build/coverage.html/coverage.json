{"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_eslint_plugin_node */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - init-after","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - init-after","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/lib.npmtest_eslint_plugin_node.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/lib.npmtest_eslint_plugin_node.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":63}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":69}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_eslint_plugin_node */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_eslint_plugin_node = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_eslint_plugin_node = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":62}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":76},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-eslint-plugin-node && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_eslint_plugin_node */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_eslint_plugin_node","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // init-after","    // run browser js-env code - init-after","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_eslint_plugin_node.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_eslint_plugin_node.rollup.js'] =","            local.assetsDict['/assets.npmtest_eslint_plugin_node.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_eslint_plugin_node.__dirname + '/lib.npmtest_eslint_plugin_node.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":36,"column":1}}},"branchMap":{},"code":["/**"," * @author Toru Nagashima"," * @copyright 2015 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","module.exports = {","    rules: {","        \"exports-style\": require(\"./lib/rules/exports-style\"),","        \"no-deprecated-api\": require(\"./lib/rules/no-deprecated-api\"),","        \"no-hide-core-modules\": require(\"./lib/rules/no-hide-core-modules\"),","        \"no-missing-import\": require(\"./lib/rules/no-missing-import\"),","        \"no-missing-require\": require(\"./lib/rules/no-missing-require\"),","        \"no-unpublished-bin\": require(\"./lib/rules/no-unpublished-bin\"),","        \"no-unpublished-import\": require(\"./lib/rules/no-unpublished-import\"),","        \"no-unpublished-require\": require(\"./lib/rules/no-unpublished-require\"),","        \"no-unsupported-features\": require(\"./lib/rules/no-unsupported-features\"),","        \"process-exit-as-throw\": require(\"./lib/rules/process-exit-as-throw\"),","        \"shebang\": require(\"./lib/rules/shebang\"),","    },","    rulesConfig: {","        \"exports-style\": \"off\",","        \"no-deprecated-api\": \"off\",","        \"no-hide-core-modules\": \"off\",","        \"no-missing-import\": \"off\",","        \"no-missing-require\": \"off\",","        \"no-unpublished-bin\": \"off\",","        \"no-unpublished-import\": \"off\",","        \"no-unpublished-require\": \"off\",","        \"no-unsupported-features\": \"off\",","        \"process-exit-as-throw\": \"off\",","        \"shebang\": \"off\",","    },","    configs: {recommended: require(\"./conf/recommended.json\")},","}",""],"l":{"8":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/exports-style.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/exports-style.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"getStaticPropertyName","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}},"skip":true},"2":{"name":"isAssignee","line":64,"loc":{"start":{"line":64,"column":0},"end":{"line":64,"column":26}}},"3":{"name":"getTopAssignment","line":80,"loc":{"start":{"line":80,"column":0},"end":{"line":80,"column":36}}},"4":{"name":"createAssignmentList","line":107,"loc":{"start":{"line":107,"column":0},"end":{"line":107,"column":37}}},"5":{"name":"getModuleExportsNodes","line":117,"loc":{"start":{"line":117,"column":0},"end":{"line":117,"column":38}}},"6":{"name":"getExportsNodes","line":136,"loc":{"start":{"line":136,"column":0},"end":{"line":136,"column":32}}},"7":{"name":"create","line":150,"loc":{"start":{"line":150,"column":0},"end":{"line":150,"column":25}}},"8":{"name":"getLocation","line":170,"loc":{"start":{"line":170,"column":4},"end":{"line":170,"column":31}}},"9":{"name":"enforceModuleExports","line":184,"loc":{"start":{"line":184,"column":4},"end":{"line":184,"column":36}}},"10":{"name":"enforceExports","line":216,"loc":{"start":{"line":216,"column":4},"end":{"line":216,"column":30}}},"11":{"name":"(anonymous_11)","line":270,"loc":{"start":{"line":270,"column":22},"end":{"line":270,"column":25}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":56,"column":1},"skip":true},"2":{"start":{"line":21,"column":4},"end":{"line":21,"column":19},"skip":true},"3":{"start":{"line":23,"column":4},"end":{"line":34,"column":5},"skip":true},"4":{"start":{"line":26,"column":12},"end":{"line":26,"column":27},"skip":true},"5":{"start":{"line":27,"column":12},"end":{"line":27,"column":17},"skip":true},"6":{"start":{"line":30,"column":12},"end":{"line":30,"column":32},"skip":true},"7":{"start":{"line":31,"column":12},"end":{"line":31,"column":17},"skip":true},"8":{"start":{"line":36,"column":4},"end":{"line":53,"column":5},"skip":true},"9":{"start":{"line":38,"column":12},"end":{"line":38,"column":37},"skip":true},"10":{"start":{"line":41,"column":12},"end":{"line":43,"column":13},"skip":true},"11":{"start":{"line":42,"column":16},"end":{"line":42,"column":50},"skip":true},"12":{"start":{"line":44,"column":12},"end":{"line":44,"column":17},"skip":true},"13":{"start":{"line":47,"column":12},"end":{"line":49,"column":13},"skip":true},"14":{"start":{"line":48,"column":16},"end":{"line":48,"column":32},"skip":true},"15":{"start":{"line":50,"column":12},"end":{"line":50,"column":17},"skip":true},"16":{"start":{"line":55,"column":4},"end":{"line":55,"column":15},"skip":true},"17":{"start":{"line":64,"column":0},"end":{"line":69,"column":1}},"18":{"start":{"line":65,"column":4},"end":{"line":68,"column":5}},"19":{"start":{"line":80,"column":0},"end":{"line":99,"column":1}},"20":{"start":{"line":81,"column":4},"end":{"line":81,"column":23}},"21":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"22":{"start":{"line":85,"column":8},"end":{"line":85,"column":26}},"23":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"24":{"start":{"line":90,"column":8},"end":{"line":90,"column":19}},"25":{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},"26":{"start":{"line":95,"column":8},"end":{"line":95,"column":26}},"27":{"start":{"line":98,"column":4},"end":{"line":98,"column":15}},"28":{"start":{"line":107,"column":0},"end":{"line":109,"column":1}},"29":{"start":{"line":108,"column":4},"end":{"line":108,"column":54}},"30":{"start":{"line":117,"column":0},"end":{"line":128,"column":1}},"31":{"start":{"line":118,"column":4},"end":{"line":118,"column":44}},"32":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"33":{"start":{"line":120,"column":8},"end":{"line":120,"column":17}},"34":{"start":{"line":122,"column":4},"end":{"line":127,"column":10}},"35":{"start":{"line":123,"column":26},"end":{"line":123,"column":53}},"36":{"start":{"line":125,"column":12},"end":{"line":126,"column":53}},"37":{"start":{"line":136,"column":0},"end":{"line":142,"column":1}},"38":{"start":{"line":137,"column":4},"end":{"line":137,"column":45}},"39":{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},"40":{"start":{"line":139,"column":8},"end":{"line":139,"column":17}},"41":{"start":{"line":141,"column":4},"end":{"line":141,"column":69}},"42":{"start":{"line":141,"column":48},"end":{"line":141,"column":68}},"43":{"start":{"line":150,"column":0},"end":{"line":283,"column":1}},"44":{"start":{"line":151,"column":4},"end":{"line":151,"column":55}},"45":{"start":{"line":152,"column":4},"end":{"line":155,"column":5}},"46":{"start":{"line":156,"column":4},"end":{"line":156,"column":46}},"47":{"start":{"line":170,"column":4},"end":{"line":176,"column":5}},"48":{"start":{"line":171,"column":8},"end":{"line":171,"column":52}},"49":{"start":{"line":172,"column":8},"end":{"line":175,"column":9}},"50":{"start":{"line":184,"column":4},"end":{"line":208,"column":5}},"51":{"start":{"line":185,"column":8},"end":{"line":185,"column":46}},"52":{"start":{"line":186,"column":8},"end":{"line":186,"column":57}},"53":{"start":{"line":187,"column":8},"end":{"line":189,"column":16}},"54":{"start":{"line":191,"column":8},"end":{"line":207,"column":9}},"55":{"start":{"line":193,"column":12},"end":{"line":197,"column":13}},"56":{"start":{"line":196,"column":16},"end":{"line":196,"column":24}},"57":{"start":{"line":200,"column":12},"end":{"line":206,"column":14}},"58":{"start":{"line":216,"column":4},"end":{"line":267,"column":5}},"59":{"start":{"line":217,"column":8},"end":{"line":217,"column":46}},"60":{"start":{"line":218,"column":8},"end":{"line":218,"column":57}},"61":{"start":{"line":219,"column":8},"end":{"line":219,"column":69}},"62":{"start":{"line":220,"column":8},"end":{"line":222,"column":16}},"63":{"start":{"line":223,"column":8},"end":{"line":223,"column":34}},"64":{"start":{"line":225,"column":8},"end":{"line":244,"column":9}},"65":{"start":{"line":227,"column":12},"end":{"line":234,"column":13}},"66":{"start":{"line":228,"column":16},"end":{"line":228,"column":72}},"67":{"start":{"line":229,"column":16},"end":{"line":233,"column":17}},"68":{"start":{"line":230,"column":20},"end":{"line":230,"column":59}},"69":{"start":{"line":231,"column":20},"end":{"line":231,"column":47}},"70":{"start":{"line":232,"column":20},"end":{"line":232,"column":28}},"71":{"start":{"line":237,"column":12},"end":{"line":243,"column":14}},"72":{"start":{"line":247,"column":8},"end":{"line":266,"column":9}},"73":{"start":{"line":249,"column":12},"end":{"line":251,"column":13}},"74":{"start":{"line":250,"column":16},"end":{"line":250,"column":24}},"75":{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},"76":{"start":{"line":255,"column":16},"end":{"line":255,"column":24}},"77":{"start":{"line":259,"column":12},"end":{"line":265,"column":14}},"78":{"start":{"line":269,"column":4},"end":{"line":282,"column":5}},"79":{"start":{"line":271,"column":12},"end":{"line":280,"column":13}},"80":{"start":{"line":273,"column":20},"end":{"line":273,"column":42}},"81":{"start":{"line":274,"column":20},"end":{"line":274,"column":25}},"82":{"start":{"line":276,"column":20},"end":{"line":276,"column":36}},"83":{"start":{"line":277,"column":20},"end":{"line":277,"column":25}},"84":{"start":{"line":289,"column":0},"end":{"line":309,"column":1}}},"branchMap":{"1":{"line":23,"type":"switch","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":24},"skip":true},{"start":{"line":25,"column":8},"end":{"line":27,"column":17},"skip":true},{"start":{"line":29,"column":8},"end":{"line":31,"column":17},"skip":true}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":12},"end":{"line":23,"column":16},"skip":true},{"start":{"line":23,"column":20},"end":{"line":23,"column":29},"skip":true}]},"3":{"line":36,"type":"switch","locations":[{"start":{"line":37,"column":8},"end":{"line":38,"column":37},"skip":true},{"start":{"line":40,"column":8},"end":{"line":44,"column":17},"skip":true},{"start":{"line":46,"column":8},"end":{"line":50,"column":17},"skip":true}]},"4":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":16},"skip":true},{"start":{"line":36,"column":20},"end":{"line":36,"column":29},"skip":true}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":12},"end":{"line":41,"column":12},"skip":true},{"start":{"line":41,"column":12},"end":{"line":41,"column":12},"skip":true}]},"6":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":45},"skip":true},{"start":{"line":41,"column":49},"end":{"line":41,"column":73},"skip":true}]},"7":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":47,"column":12},"skip":true},{"start":{"line":47,"column":12},"end":{"line":47,"column":12},"skip":true}]},"8":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":8},"end":{"line":66,"column":51}},{"start":{"line":67,"column":8},"end":{"line":67,"column":33}}]},"9":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":11},"end":{"line":84,"column":50}},{"start":{"line":84,"column":54},"end":{"line":84,"column":81}}]},"10":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]},"11":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4}},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"12":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":12},"end":{"line":125,"column":44}},{"start":{"line":126,"column":12},"end":{"line":126,"column":53}}]},"13":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]},"14":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":17},"end":{"line":151,"column":35}},{"start":{"line":151,"column":39},"end":{"line":151,"column":55}}]},"15":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":8},"end":{"line":153,"column":34}},{"start":{"line":154,"column":8},"end":{"line":154,"column":43}}]},"16":{"line":187,"type":"cond-expr","locations":[{"start":{"line":188,"column":14},"end":{"line":188,"column":70}},{"start":{"line":189,"column":14},"end":{"line":189,"column":16}}]},"17":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":12},"end":{"line":193,"column":12}},{"start":{"line":193,"column":12},"end":{"line":193,"column":12}}]},"18":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":16},"end":{"line":193,"column":37}},{"start":{"line":194,"column":16},"end":{"line":194,"column":65}}]},"19":{"line":220,"type":"cond-expr","locations":[{"start":{"line":221,"column":14},"end":{"line":221,"column":48}},{"start":{"line":222,"column":14},"end":{"line":222,"column":16}}]},"20":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":12},"end":{"line":227,"column":12}},{"start":{"line":227,"column":12},"end":{"line":227,"column":12}}]},"21":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":16},"end":{"line":229,"column":16}},{"start":{"line":229,"column":16},"end":{"line":229,"column":16}}]},"22":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":12},"end":{"line":249,"column":12}},{"start":{"line":249,"column":12},"end":{"line":249,"column":12}}]},"23":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":12},"end":{"line":254,"column":12}},{"start":{"line":254,"column":12},"end":{"line":254,"column":12}}]},"24":{"line":271,"type":"switch","locations":[{"start":{"line":272,"column":16},"end":{"line":274,"column":25}},{"start":{"line":275,"column":16},"end":{"line":277,"column":25}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","/*istanbul ignore next */","/**"," * This function is copied from https://github.com/eslint/eslint/blob/2355f8d0de1d6732605420d15ddd4f1eee3c37b6/lib/ast-utils.js#L648-L684"," *"," * @param {ASTNode} node - The node to get."," * @returns {string|null} The property name if static. Otherwise, null."," * @private"," */","function getStaticPropertyName(node) {","    let prop = null","","    switch (node && node.type) {","        case \"Property\":","        case \"MethodDefinition\":","            prop = node.key","            break","","        case \"MemberExpression\":","            prop = node.property","            break","","        // no default","    }","","    switch (prop && prop.type) {","        case \"Literal\":","            return String(prop.value)","","        case \"TemplateLiteral\":","            if (prop.expressions.length === 0 && prop.quasis.length === 1) {","                return prop.quasis[0].value.cooked","            }","            break","","        case \"Identifier\":","            if (!node.computed) {","                return prop.name","            }","            break","","        // no default","    }","","    return null","}","","/**"," * Checks whether the given node is assignee or not."," *"," * @param {ASTNode} node - The node to check."," * @returns {boolean} `true` if the node is assignee."," */","function isAssignee(node) {","    return (","        node.parent.type === \"AssignmentExpression\" &&","        node.parent.left === node","    )","}","","/**"," * Gets the top assignment expression node if the given node is an assignee."," *"," * This is used to distinguish 2 assignees belong to the same assignment."," * If the node is not an assignee, this returns null."," *"," * @param {ASTNode} leafNode - The node to get."," * @returns {ASTNode|null} The top assignment expression node, or null."," */","function getTopAssignment(leafNode) {","    let node = leafNode","","    // Skip MemberExpressions.","    while (node.parent.type === \"MemberExpression\" && node.parent.object === node) {","        node = node.parent","    }","","    // Check assignments.","    if (!isAssignee(node)) {","        return null","    }","","    // Find the top.","    while (node.parent.type === \"AssignmentExpression\") {","        node = node.parent","    }","","    return node","}","","/**"," * Gets top assignment nodes of the given node list."," *"," * @param {ASTNode[]} nodes - The node list to get."," * @returns {ASTNode[]} Gotten top assignment nodes."," */","function createAssignmentList(nodes) {","    return nodes.map(getTopAssignment).filter(Boolean)","}","","/**"," * Gets the reference of `module.exports` from the given scope."," *"," * @param {escope.Scope} scope - The scope to get."," * @returns {ASTNode[]} Gotten MemberExpression node list."," */","function getModuleExportsNodes(scope) {","    const variable = scope.set.get(\"module\")","    if (variable == null) {","        return []","    }","    return variable.references","        .map(reference => reference.identifier.parent)","        .filter(node => (","            node.type === \"MemberExpression\" &&","            getStaticPropertyName(node) === \"exports\"","        ))","}","","/**"," * Gets the reference of `exports` from the given scope."," *"," * @param {escope.Scope} scope - The scope to get."," * @returns {ASTNode[]} Gotten Identifier node list."," */","function getExportsNodes(scope) {","    const variable = scope.set.get(\"exports\")","    if (variable == null) {","        return []","    }","    return variable.references.map(reference => reference.identifier)","}","","/**"," * The definition of this rule."," *"," * @param {RuleContext} context - The rule context to check."," * @returns {object} The definition of this rule."," */","function create(context) {","    const mode = context.options[0] || \"module.exports\"","    const batchAssignAllowed = Boolean(","        context.options[1] != null &&","        context.options[1].allowBatchAssign","    )","    const sourceCode = context.getSourceCode()","","    /**","     * Gets the location info of reports.","     *","     * exports = foo","     * ^^^^^^^^^","     *","     * module.exports = foo","     * ^^^^^^^^^^^^^^^^","     *","     * @param {ASTNode} node - The node of `exports`/`module.exports`.","     * @returns {Location} The location info of reports.","     */","    function getLocation(node) {","        const token = sourceCode.getTokenAfter(node)","        return {","            start: node.loc.start,","            end: token.loc.end,","        }","    }","","    /**","     * Enforces `module.exports`.","     * This warns references of `exports`.","     *","     * @returns {void}","     */","    function enforceModuleExports() {","        const globalScope = context.getScope()","        const exportsNodes = getExportsNodes(globalScope)","        const assignList = batchAssignAllowed","            ? createAssignmentList(getModuleExportsNodes(globalScope))","            : []","","        for (const node of exportsNodes) {","            // Skip if it's a batch assignment.","            if (assignList.length > 0 &&","                assignList.indexOf(getTopAssignment(node)) !== -1","            ) {","                continue","            }","","            // Report.","            context.report({","                node,","                loc: getLocation(node),","                message:","                    \"Unexpected access to 'exports'. \" +","                    \"Use 'module.exports' instead.\",","            })","        }","    }","","    /**","     * Enforces `exports`.","     * This warns references of `module.exports`.","     *","     * @returns {void}","     */","    function enforceExports() {","        const globalScope = context.getScope()","        const exportsNodes = getExportsNodes(globalScope)","        const moduleExportsNodes = getModuleExportsNodes(globalScope)","        const assignList = batchAssignAllowed","            ? createAssignmentList(exportsNodes)","            : []","        const batchAssignList = []","","        for (const node of moduleExportsNodes) {","            // Skip if it's a batch assignment.","            if (assignList.length > 0) {","                const found = assignList.indexOf(getTopAssignment(node))","                if (found !== -1) {","                    batchAssignList.push(assignList[found])","                    assignList.splice(found, 1)","                    continue","                }","            }","","            // Report.","            context.report({","                node,","                loc: getLocation(node),","                message:","                    \"Unexpected access to 'module.exports'. \" +","                    \"Use 'exports' instead.\",","            })","        }","","        // Disallow direct assignment to `exports`.","        for (const node of exportsNodes) {","            // Skip if it's not assignee.","            if (!isAssignee(node)) {","                continue","            }","","            // Check if it's a batch assignment.","            if (batchAssignList.indexOf(getTopAssignment(node)) !== -1) {","                continue","            }","","            // Report.","            context.report({","                node,","                loc: getLocation(node),","                message:","                    \"Unexpected assignment to 'exports'. \" +","                    \"Don't modify 'exports' itself.\",","            })","        }","    }","","    return {","        \"Program:exit\"() {","            switch (mode) {","                case \"module.exports\":","                    enforceModuleExports()","                    break","                case \"exports\":","                    enforceExports()","                    break","","                // no default","            }","        },","    }","}","","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create,","    meta: {","        docs: {","            description: \"enforce either `module.exports` or `exports`\",","            category: \"Stylistic Issues\",","            recommended: false,","        },","        fixable: false,","        schema: [","            { //","                enum: [\"module.exports\", \"exports\"],","            },","            {","                type: \"object\",","                properties: {allowBatchAssign: {type: \"boolean\"}},","                additionalProperties: false,","            },","        ],","    },","}",""],"l":{"20":1,"21":1,"23":1,"26":1,"27":1,"30":1,"31":1,"36":1,"38":1,"41":1,"42":1,"44":1,"47":1,"48":1,"50":1,"55":1,"64":1,"65":0,"80":1,"81":0,"84":0,"85":0,"89":0,"90":0,"94":0,"95":0,"98":0,"107":1,"108":0,"117":1,"118":0,"119":0,"120":0,"122":0,"123":0,"125":0,"136":1,"137":0,"138":0,"139":0,"141":0,"150":1,"151":0,"152":0,"156":0,"170":1,"171":0,"172":0,"184":1,"185":0,"186":0,"187":0,"191":0,"193":0,"196":0,"200":0,"216":1,"217":0,"218":0,"219":0,"220":0,"223":0,"225":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"237":0,"247":0,"249":0,"250":0,"254":0,"255":0,"259":0,"269":0,"271":0,"273":0,"274":0,"276":0,"277":0,"289":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/no-deprecated-api.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/no-deprecated-api.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":21,"9":69,"10":69,"11":2,"12":67,"13":2,"14":65,"15":65,"16":46,"17":19,"18":65,"19":21,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":1,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":1,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":1,"140":0,"141":0,"142":0,"143":1,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":1,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":1,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":1},"b":{"1":[2,67],"2":[2,65],"3":[46,19],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0,0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0]},"f":{"1":21,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"getDeprecatedItems","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":55}}},"2":{"name":"toVersionText","line":69,"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":30}}},"3":{"name":"toReplaceMessage","line":85,"loc":{"start":{"line":85,"column":0},"end":{"line":85,"column":38}}},"4":{"name":"getPropertyName","line":95,"loc":{"start":{"line":95,"column":0},"end":{"line":95,"column":31}}},"5":{"name":"isImportDeclaration","line":125,"loc":{"start":{"line":125,"column":0},"end":{"line":125,"column":35}}},"6":{"name":"findVariable","line":136,"loc":{"start":{"line":136,"column":0},"end":{"line":136,"column":42}}},"7":{"name":"getTopMemberExpression","line":172,"loc":{"start":{"line":172,"column":0},"end":{"line":172,"column":44}}},"8":{"name":"create","line":191,"loc":{"start":{"line":191,"column":0},"end":{"line":191,"column":25}}},"9":{"name":"report","line":205,"loc":{"start":{"line":205,"column":4},"end":{"line":205,"column":38}}},"10":{"name":"reportModule","line":226,"loc":{"start":{"line":226,"column":4},"end":{"line":226,"column":44}}},"11":{"name":"reportCall","line":240,"loc":{"start":{"line":240,"column":4},"end":{"line":240,"column":42}}},"12":{"name":"reportConstructor","line":257,"loc":{"start":{"line":257,"column":4},"end":{"line":257,"column":49}}},"13":{"name":"reportProperty","line":275,"loc":{"start":{"line":275,"column":4},"end":{"line":275,"column":51}}},"14":{"name":"checkDestructuring","line":292,"loc":{"start":{"line":292,"column":4},"end":{"line":292,"column":53}}},"15":{"name":"checkProperties","line":334,"loc":{"start":{"line":334,"column":4},"end":{"line":334,"column":50}}},"16":{"name":"checkVariable","line":402,"loc":{"start":{"line":402,"column":4},"end":{"line":402,"column":52}}},"17":{"name":"checkImportSpecifier","line":416,"loc":{"start":{"line":416,"column":4},"end":{"line":416,"column":55}}},"18":{"name":"checkCommonJsModules","line":461,"loc":{"start":{"line":461,"column":4},"end":{"line":461,"column":36}}},"19":{"name":"checkES2015Modules","line":493,"loc":{"start":{"line":493,"column":4},"end":{"line":493,"column":45}}},"20":{"name":"checkGlobals","line":516,"loc":{"start":{"line":516,"column":4},"end":{"line":516,"column":28}}},"21":{"name":"(anonymous_21)","line":530,"loc":{"start":{"line":530,"column":22},"end":{"line":530,"column":29}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":39}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":57}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":63}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":185}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":71}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":71}},"7":{"start":{"line":36,"column":0},"end":{"line":61,"column":1}},"8":{"start":{"line":37,"column":4},"end":{"line":58,"column":5}},"9":{"start":{"line":38,"column":8},"end":{"line":38,"column":36}},"10":{"start":{"line":40,"column":8},"end":{"line":57,"column":9}},"11":{"start":{"line":41,"column":12},"end":{"line":41,"column":47}},"12":{"start":{"line":43,"column":13},"end":{"line":57,"column":9}},"13":{"start":{"line":44,"column":12},"end":{"line":44,"column":51}},"14":{"start":{"line":47,"column":12},"end":{"line":47,"column":27}},"15":{"start":{"line":49,"column":12},"end":{"line":54,"column":13}},"16":{"start":{"line":50,"column":16},"end":{"line":50,"column":44}},"17":{"start":{"line":53,"column":16},"end":{"line":53,"column":55}},"18":{"start":{"line":56,"column":12},"end":{"line":56,"column":23}},"19":{"start":{"line":60,"column":4},"end":{"line":60,"column":17}},"20":{"start":{"line":69,"column":0},"end":{"line":77,"column":1}},"21":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"22":{"start":{"line":71,"column":8},"end":{"line":71,"column":31}},"23":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"24":{"start":{"line":74,"column":8},"end":{"line":74,"column":31}},"25":{"start":{"line":76,"column":4},"end":{"line":76,"column":24}},"26":{"start":{"line":85,"column":0},"end":{"line":87,"column":1}},"27":{"start":{"line":86,"column":4},"end":{"line":86,"column":58}},"28":{"start":{"line":95,"column":0},"end":{"line":117,"column":1}},"29":{"start":{"line":96,"column":4},"end":{"line":113,"column":5}},"30":{"start":{"line":98,"column":12},"end":{"line":100,"column":13}},"31":{"start":{"line":99,"column":16},"end":{"line":99,"column":54}},"32":{"start":{"line":101,"column":12},"end":{"line":101,"column":37}},"33":{"start":{"line":104,"column":12},"end":{"line":106,"column":13}},"34":{"start":{"line":105,"column":16},"end":{"line":105,"column":49}},"35":{"start":{"line":107,"column":12},"end":{"line":109,"column":13}},"36":{"start":{"line":108,"column":16},"end":{"line":108,"column":45}},"37":{"start":{"line":110,"column":12},"end":{"line":110,"column":32}},"38":{"start":{"line":116,"column":4},"end":{"line":116,"column":15},"skip":true},"39":{"start":{"line":125,"column":0},"end":{"line":127,"column":1}},"40":{"start":{"line":126,"column":4},"end":{"line":126,"column":44}},"41":{"start":{"line":136,"column":0},"end":{"line":164,"column":1}},"42":{"start":{"line":137,"column":4},"end":{"line":137,"column":34}},"43":{"start":{"line":138,"column":4},"end":{"line":138,"column":23}},"44":{"start":{"line":141,"column":4},"end":{"line":150,"column":5}},"45":{"start":{"line":142,"column":8},"end":{"line":142,"column":44}},"46":{"start":{"line":144,"column":8},"end":{"line":149,"column":9}},"47":{"start":{"line":145,"column":12},"end":{"line":145,"column":53}},"48":{"start":{"line":146,"column":12},"end":{"line":148,"column":13}},"49":{"start":{"line":147,"column":16},"end":{"line":147,"column":31}},"50":{"start":{"line":153,"column":4},"end":{"line":153,"column":28}},"51":{"start":{"line":154,"column":4},"end":{"line":161,"column":5}},"52":{"start":{"line":155,"column":8},"end":{"line":155,"column":43}},"53":{"start":{"line":156,"column":8},"end":{"line":158,"column":9}},"54":{"start":{"line":157,"column":12},"end":{"line":157,"column":27}},"55":{"start":{"line":160,"column":8},"end":{"line":160,"column":27}},"56":{"start":{"line":163,"column":4},"end":{"line":163,"column":15}},"57":{"start":{"line":172,"column":0},"end":{"line":183,"column":1}},"58":{"start":{"line":173,"column":4},"end":{"line":175,"column":5}},"59":{"start":{"line":174,"column":8},"end":{"line":174,"column":25}},"60":{"start":{"line":177,"column":4},"end":{"line":177,"column":25}},"61":{"start":{"line":178,"column":4},"end":{"line":180,"column":5}},"62":{"start":{"line":179,"column":8},"end":{"line":179,"column":26}},"63":{"start":{"line":182,"column":4},"end":{"line":182,"column":15}},"64":{"start":{"line":191,"column":0},"end":{"line":538,"column":1}},"65":{"start":{"line":192,"column":4},"end":{"line":192,"column":44}},"66":{"start":{"line":193,"column":4},"end":{"line":193,"column":62}},"67":{"start":{"line":194,"column":4},"end":{"line":194,"column":62}},"68":{"start":{"line":195,"column":4},"end":{"line":195,"column":26}},"69":{"start":{"line":205,"column":4},"end":{"line":216,"column":5}},"70":{"start":{"line":206,"column":8},"end":{"line":215,"column":10}},"71":{"start":{"line":226,"column":4},"end":{"line":230,"column":5}},"72":{"start":{"line":227,"column":8},"end":{"line":229,"column":9}},"73":{"start":{"line":228,"column":12},"end":{"line":228,"column":50}},"74":{"start":{"line":240,"column":4},"end":{"line":247,"column":5}},"75":{"start":{"line":241,"column":8},"end":{"line":241,"column":77}},"76":{"start":{"line":242,"column":8},"end":{"line":242,"column":42}},"77":{"start":{"line":244,"column":8},"end":{"line":246,"column":9}},"78":{"start":{"line":245,"column":12},"end":{"line":245,"column":43}},"79":{"start":{"line":257,"column":4},"end":{"line":264,"column":5}},"80":{"start":{"line":258,"column":8},"end":{"line":258,"column":77}},"81":{"start":{"line":259,"column":8},"end":{"line":259,"column":46}},"82":{"start":{"line":261,"column":8},"end":{"line":263,"column":9}},"83":{"start":{"line":262,"column":12},"end":{"line":262,"column":43}},"84":{"start":{"line":275,"column":4},"end":{"line":282,"column":5}},"85":{"start":{"line":276,"column":8},"end":{"line":276,"column":77}},"86":{"start":{"line":277,"column":8},"end":{"line":277,"column":47}},"87":{"start":{"line":279,"column":8},"end":{"line":281,"column":9}},"88":{"start":{"line":280,"column":12},"end":{"line":280,"column":43}},"89":{"start":{"line":292,"column":4},"end":{"line":324,"column":5}},"90":{"start":{"line":293,"column":8},"end":{"line":323,"column":9}},"91":{"start":{"line":295,"column":16},"end":{"line":295,"column":60}},"92":{"start":{"line":296,"column":16},"end":{"line":296,"column":21}},"93":{"start":{"line":299,"column":16},"end":{"line":299,"column":64}},"94":{"start":{"line":300,"column":16},"end":{"line":302,"column":17}},"95":{"start":{"line":301,"column":20},"end":{"line":301,"column":58}},"96":{"start":{"line":303,"column":16},"end":{"line":303,"column":21}},"97":{"start":{"line":306,"column":16},"end":{"line":319,"column":17}},"98":{"start":{"line":307,"column":20},"end":{"line":307,"column":57}},"99":{"start":{"line":308,"column":20},"end":{"line":318,"column":21}},"100":{"start":{"line":309,"column":24},"end":{"line":309,"column":52}},"101":{"start":{"line":310,"column":24},"end":{"line":317,"column":25}},"102":{"start":{"line":311,"column":28},"end":{"line":311,"column":76}},"103":{"start":{"line":314,"column":28},"end":{"line":314,"column":42}},"104":{"start":{"line":315,"column":28},"end":{"line":315,"column":77}},"105":{"start":{"line":316,"column":28},"end":{"line":316,"column":38}},"106":{"start":{"line":320,"column":16},"end":{"line":320,"column":21}},"107":{"start":{"line":334,"column":4},"end":{"line":392,"column":5}},"108":{"start":{"line":335,"column":8},"end":{"line":335,"column":23}},"109":{"start":{"line":336,"column":8},"end":{"line":338,"column":9}},"110":{"start":{"line":337,"column":12},"end":{"line":337,"column":30}},"111":{"start":{"line":340,"column":8},"end":{"line":340,"column":34}},"112":{"start":{"line":341,"column":8},"end":{"line":391,"column":9}},"113":{"start":{"line":343,"column":16},"end":{"line":345,"column":17}},"114":{"start":{"line":344,"column":20},"end":{"line":344,"column":59}},"115":{"start":{"line":346,"column":16},"end":{"line":346,"column":21}},"116":{"start":{"line":349,"column":16},"end":{"line":351,"column":17}},"117":{"start":{"line":350,"column":20},"end":{"line":350,"column":73}},"118":{"start":{"line":352,"column":16},"end":{"line":352,"column":21}},"119":{"start":{"line":355,"column":16},"end":{"line":368,"column":17}},"120":{"start":{"line":356,"column":20},"end":{"line":356,"column":55}},"121":{"start":{"line":357,"column":20},"end":{"line":367,"column":21}},"122":{"start":{"line":358,"column":24},"end":{"line":358,"column":52}},"123":{"start":{"line":359,"column":24},"end":{"line":366,"column":25}},"124":{"start":{"line":360,"column":28},"end":{"line":360,"column":79}},"125":{"start":{"line":363,"column":28},"end":{"line":363,"column":42}},"126":{"start":{"line":364,"column":28},"end":{"line":364,"column":66}},"127":{"start":{"line":365,"column":28},"end":{"line":365,"column":38}},"128":{"start":{"line":369,"column":16},"end":{"line":369,"column":21}},"129":{"start":{"line":372,"column":16},"end":{"line":375,"column":17}},"130":{"start":{"line":373,"column":20},"end":{"line":373,"column":66}},"131":{"start":{"line":374,"column":20},"end":{"line":374,"column":58}},"132":{"start":{"line":376,"column":16},"end":{"line":376,"column":21}},"133":{"start":{"line":379,"column":16},"end":{"line":381,"column":17}},"134":{"start":{"line":380,"column":20},"end":{"line":380,"column":66}},"135":{"start":{"line":382,"column":16},"end":{"line":382,"column":21}},"136":{"start":{"line":385,"column":16},"end":{"line":387,"column":17}},"137":{"start":{"line":386,"column":20},"end":{"line":386,"column":64}},"138":{"start":{"line":388,"column":16},"end":{"line":388,"column":21}},"139":{"start":{"line":402,"column":4},"end":{"line":406,"column":5}},"140":{"start":{"line":403,"column":8},"end":{"line":405,"column":9}},"141":{"start":{"line":403,"column":64},"end":{"line":403,"column":74}},"142":{"start":{"line":404,"column":12},"end":{"line":404,"column":64}},"143":{"start":{"line":416,"column":4},"end":{"line":455,"column":5}},"144":{"start":{"line":417,"column":8},"end":{"line":454,"column":9}},"145":{"start":{"line":419,"column":16},"end":{"line":419,"column":46}},"146":{"start":{"line":420,"column":16},"end":{"line":434,"column":17}},"147":{"start":{"line":421,"column":20},"end":{"line":421,"column":48}},"148":{"start":{"line":422,"column":20},"end":{"line":433,"column":21}},"149":{"start":{"line":423,"column":24},"end":{"line":423,"column":73}},"150":{"start":{"line":426,"column":24},"end":{"line":426,"column":38}},"151":{"start":{"line":427,"column":24},"end":{"line":431,"column":25}},"152":{"start":{"line":432,"column":24},"end":{"line":432,"column":34}},"153":{"start":{"line":435,"column":16},"end":{"line":435,"column":21}},"154":{"start":{"line":438,"column":16},"end":{"line":442,"column":17}},"155":{"start":{"line":443,"column":16},"end":{"line":443,"column":21}},"156":{"start":{"line":446,"column":16},"end":{"line":450,"column":17}},"157":{"start":{"line":451,"column":16},"end":{"line":451,"column":21}},"158":{"start":{"line":461,"column":4},"end":{"line":486,"column":5}},"159":{"start":{"line":462,"column":8},"end":{"line":462,"column":46}},"160":{"start":{"line":463,"column":8},"end":{"line":463,"column":55}},"161":{"start":{"line":465,"column":8},"end":{"line":467,"column":9}},"162":{"start":{"line":466,"column":12},"end":{"line":466,"column":18}},"163":{"start":{"line":469,"column":8},"end":{"line":485,"column":9}},"164":{"start":{"line":469,"column":64},"end":{"line":469,"column":74}},"165":{"start":{"line":470,"column":12},"end":{"line":470,"column":43}},"166":{"start":{"line":471,"column":12},"end":{"line":471,"column":34}},"167":{"start":{"line":473,"column":12},"end":{"line":484,"column":13}},"168":{"start":{"line":474,"column":16},"end":{"line":474,"column":63}},"169":{"start":{"line":475,"column":16},"end":{"line":483,"column":17}},"170":{"start":{"line":476,"column":20},"end":{"line":476,"column":51}},"171":{"start":{"line":477,"column":20},"end":{"line":482,"column":21}},"172":{"start":{"line":478,"column":24},"end":{"line":478,"column":59}},"173":{"start":{"line":481,"column":24},"end":{"line":481,"column":64}},"174":{"start":{"line":493,"column":4},"end":{"line":510,"column":5}},"175":{"start":{"line":494,"column":8},"end":{"line":494,"column":46}},"176":{"start":{"line":496,"column":8},"end":{"line":509,"column":9}},"177":{"start":{"line":497,"column":12},"end":{"line":497,"column":41}},"178":{"start":{"line":498,"column":12},"end":{"line":508,"column":13}},"179":{"start":{"line":499,"column":16},"end":{"line":499,"column":47}},"180":{"start":{"line":500,"column":16},"end":{"line":507,"column":17}},"181":{"start":{"line":501,"column":20},"end":{"line":501,"column":55}},"182":{"start":{"line":504,"column":20},"end":{"line":506,"column":21}},"183":{"start":{"line":505,"column":24},"end":{"line":505,"column":74}},"184":{"start":{"line":516,"column":4},"end":{"line":527,"column":5}},"185":{"start":{"line":517,"column":8},"end":{"line":517,"column":46}},"186":{"start":{"line":519,"column":8},"end":{"line":526,"column":9}},"187":{"start":{"line":520,"column":12},"end":{"line":520,"column":40}},"188":{"start":{"line":521,"column":12},"end":{"line":521,"column":53}},"189":{"start":{"line":523,"column":12},"end":{"line":525,"column":13}},"190":{"start":{"line":524,"column":16},"end":{"line":524,"column":55}},"191":{"start":{"line":529,"column":4},"end":{"line":537,"column":5}},"192":{"start":{"line":531,"column":12},"end":{"line":531,"column":44}},"193":{"start":{"line":533,"column":12},"end":{"line":533,"column":34}},"194":{"start":{"line":534,"column":12},"end":{"line":534,"column":36}},"195":{"start":{"line":535,"column":12},"end":{"line":535,"column":26}},"196":{"start":{"line":544,"column":0},"end":{"line":577,"column":1}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":8}},{"start":{"line":40,"column":8},"end":{"line":40,"column":8}}]},"2":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":13},"end":{"line":43,"column":13}},{"start":{"line":43,"column":13},"end":{"line":43,"column":13}}]},"3":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":12},"end":{"line":49,"column":12}},{"start":{"line":49,"column":12},"end":{"line":49,"column":12}}]},"4":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"5":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"6":{"line":86,"type":"cond-expr","locations":[{"start":{"line":86,"column":24},"end":{"line":86,"column":53}},{"start":{"line":86,"column":56},"end":{"line":86,"column":58}}]},"7":{"line":96,"type":"switch","locations":[{"start":{"line":97,"column":8},"end":{"line":101,"column":37}},{"start":{"line":103,"column":8},"end":{"line":110,"column":32}}]},"8":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":12},"end":{"line":98,"column":12}},{"start":{"line":98,"column":12},"end":{"line":98,"column":12}}]},"9":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":12},"end":{"line":104,"column":12}},{"start":{"line":104,"column":12},"end":{"line":104,"column":12}}]},"10":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":12},"end":{"line":107,"column":12}},{"start":{"line":107,"column":12},"end":{"line":107,"column":12}}]},"11":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":8},"end":{"line":144,"column":8}},{"start":{"line":144,"column":8},"end":{"line":144,"column":8}}]},"12":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":12},"end":{"line":144,"column":32}},{"start":{"line":144,"column":36},"end":{"line":144,"column":55}}]},"13":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":12},"end":{"line":146,"column":12}},{"start":{"line":146,"column":12},"end":{"line":146,"column":12}}]},"14":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":156,"column":8}},{"start":{"line":156,"column":8},"end":{"line":156,"column":8}}]},"15":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]},"16":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":8},"end":{"line":173,"column":40}},{"start":{"line":173,"column":44},"end":{"line":173,"column":73}}]},"17":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":20},"end":{"line":192,"column":38}},{"start":{"line":192,"column":42},"end":{"line":192,"column":44}}]},"18":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":31},"end":{"line":193,"column":56}},{"start":{"line":193,"column":60},"end":{"line":193,"column":62}}]},"19":{"line":194,"type":"binary-expr","locations":[{"start":{"line":194,"column":31},"end":{"line":194,"column":56}},{"start":{"line":194,"column":60},"end":{"line":194,"column":62}}]},"20":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":8},"end":{"line":227,"column":8}},{"start":{"line":227,"column":8},"end":{"line":227,"column":8}}]},"21":{"line":241,"type":"cond-expr","locations":[{"start":{"line":241,"column":38},"end":{"line":241,"column":56}},{"start":{"line":241,"column":59},"end":{"line":241,"column":77}}]},"22":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":8},"end":{"line":244,"column":8}},{"start":{"line":244,"column":8},"end":{"line":244,"column":8}}]},"23":{"line":258,"type":"cond-expr","locations":[{"start":{"line":258,"column":38},"end":{"line":258,"column":56}},{"start":{"line":258,"column":59},"end":{"line":258,"column":77}}]},"24":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":8},"end":{"line":261,"column":8}},{"start":{"line":261,"column":8},"end":{"line":261,"column":8}}]},"25":{"line":276,"type":"cond-expr","locations":[{"start":{"line":276,"column":38},"end":{"line":276,"column":56}},{"start":{"line":276,"column":59},"end":{"line":276,"column":77}}]},"26":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":8},"end":{"line":279,"column":8}},{"start":{"line":279,"column":8},"end":{"line":279,"column":8}}]},"27":{"line":293,"type":"switch","locations":[{"start":{"line":294,"column":12},"end":{"line":296,"column":21}},{"start":{"line":298,"column":12},"end":{"line":304,"column":13}},{"start":{"line":305,"column":12},"end":{"line":320,"column":21}}]},"28":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":16},"end":{"line":300,"column":16}},{"start":{"line":300,"column":16},"end":{"line":300,"column":16}}]},"29":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":20},"end":{"line":308,"column":20}},{"start":{"line":308,"column":20},"end":{"line":308,"column":20}}]},"30":{"line":308,"type":"binary-expr","locations":[{"start":{"line":308,"column":24},"end":{"line":308,"column":35}},{"start":{"line":308,"column":39},"end":{"line":308,"column":72}}]},"31":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":24},"end":{"line":310,"column":24}},{"start":{"line":310,"column":24},"end":{"line":310,"column":24}}]},"32":{"line":341,"type":"switch","locations":[{"start":{"line":342,"column":12},"end":{"line":346,"column":21}},{"start":{"line":348,"column":12},"end":{"line":352,"column":21}},{"start":{"line":354,"column":12},"end":{"line":369,"column":21}},{"start":{"line":371,"column":12},"end":{"line":376,"column":21}},{"start":{"line":378,"column":12},"end":{"line":382,"column":21}},{"start":{"line":384,"column":12},"end":{"line":388,"column":21}}]},"33":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":16},"end":{"line":343,"column":16}},{"start":{"line":343,"column":16},"end":{"line":343,"column":16}}]},"34":{"line":343,"type":"binary-expr","locations":[{"start":{"line":343,"column":20},"end":{"line":343,"column":42}},{"start":{"line":343,"column":46},"end":{"line":343,"column":67}}]},"35":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":16},"end":{"line":349,"column":16}},{"start":{"line":349,"column":16},"end":{"line":349,"column":16}}]},"36":{"line":349,"type":"binary-expr","locations":[{"start":{"line":349,"column":20},"end":{"line":349,"column":42}},{"start":{"line":349,"column":46},"end":{"line":349,"column":74}}]},"37":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":16},"end":{"line":355,"column":16}},{"start":{"line":355,"column":16},"end":{"line":355,"column":16}}]},"38":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":20},"end":{"line":357,"column":20}},{"start":{"line":357,"column":20},"end":{"line":357,"column":20}}]},"39":{"line":357,"type":"binary-expr","locations":[{"start":{"line":357,"column":24},"end":{"line":357,"column":35}},{"start":{"line":357,"column":39},"end":{"line":357,"column":72}}]},"40":{"line":359,"type":"if","locations":[{"start":{"line":359,"column":24},"end":{"line":359,"column":24}},{"start":{"line":359,"column":24},"end":{"line":359,"column":24}}]},"41":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":16},"end":{"line":372,"column":16}},{"start":{"line":372,"column":16},"end":{"line":372,"column":16}}]},"42":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":16},"end":{"line":379,"column":16}},{"start":{"line":379,"column":16},"end":{"line":379,"column":16}}]},"43":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":16},"end":{"line":385,"column":16}},{"start":{"line":385,"column":16},"end":{"line":385,"column":16}}]},"44":{"line":417,"type":"switch","locations":[{"start":{"line":418,"column":12},"end":{"line":436,"column":13}},{"start":{"line":437,"column":12},"end":{"line":443,"column":21}},{"start":{"line":445,"column":12},"end":{"line":451,"column":21}}]},"45":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":16},"end":{"line":420,"column":16}},{"start":{"line":420,"column":16},"end":{"line":420,"column":16}}]},"46":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":20},"end":{"line":422,"column":20}},{"start":{"line":422,"column":20},"end":{"line":422,"column":20}}]},"47":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":8},"end":{"line":465,"column":8}},{"start":{"line":465,"column":8},"end":{"line":465,"column":8}}]},"48":{"line":465,"type":"binary-expr","locations":[{"start":{"line":465,"column":12},"end":{"line":465,"column":28}},{"start":{"line":465,"column":32},"end":{"line":465,"column":58}}]},"49":{"line":473,"type":"if","locations":[{"start":{"line":473,"column":12},"end":{"line":473,"column":12}},{"start":{"line":473,"column":12},"end":{"line":473,"column":12}}]},"50":{"line":473,"type":"binary-expr","locations":[{"start":{"line":473,"column":16},"end":{"line":473,"column":46}},{"start":{"line":473,"column":50},"end":{"line":473,"column":68}}]},"51":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":16},"end":{"line":475,"column":16}},{"start":{"line":475,"column":16},"end":{"line":475,"column":16}}]},"52":{"line":475,"type":"binary-expr","locations":[{"start":{"line":475,"column":20},"end":{"line":475,"column":31}},{"start":{"line":475,"column":35},"end":{"line":475,"column":68}}]},"53":{"line":477,"type":"if","locations":[{"start":{"line":477,"column":20},"end":{"line":477,"column":20}},{"start":{"line":477,"column":20},"end":{"line":477,"column":20}}]},"54":{"line":498,"type":"if","locations":[{"start":{"line":498,"column":12},"end":{"line":498,"column":12}},{"start":{"line":498,"column":12},"end":{"line":498,"column":12}}]},"55":{"line":500,"type":"if","locations":[{"start":{"line":500,"column":16},"end":{"line":500,"column":16}},{"start":{"line":500,"column":16},"end":{"line":500,"column":16}}]},"56":{"line":523,"type":"if","locations":[{"start":{"line":523,"column":12},"end":{"line":523,"column":12}},{"start":{"line":523,"column":12},"end":{"line":523,"column":12}}]},"57":{"line":523,"type":"binary-expr","locations":[{"start":{"line":523,"column":16},"end":{"line":523,"column":32}},{"start":{"line":523,"column":36},"end":{"line":523,"column":62}}]}},"code":["/**"," * @fileoverview Rule to disallow deprecated API."," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const assign = require(\"object-assign\")","const deprecatedApis = require(\"../util/deprecated-apis\")","const getValueIfString = require(\"../util/get-value-if-string\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","const SENTINEL_TYPE = /^(?:.+?Statement|.+?Declaration|(?:Array|ArrowFunction|Assignment|Call|Class|Function|Member|New|Object)Expression|AssignmentPattern|Program|VariableDeclarator)$/","const MODULE_ITEMS = getDeprecatedItems(deprecatedApis.modules, [], [])","const GLOBAL_ITEMS = getDeprecatedItems(deprecatedApis.globals, [], [])","","/**"," * Gets the array of deprecated items."," *"," * It's the paths which are separated by dots."," * E.g. `buffer.Buffer`, `events.EventEmitter.listenerCount`"," *"," * @param {object} definition - The definition of deprecated APIs."," * @param {string[]} result - The array of the result."," * @param {string[]} stack - The array to manage the stack of paths."," * @returns {string[]} `result`."," */","function getDeprecatedItems(definition, result, stack) {","    for (const key of Object.keys(definition)) {","        const item = definition[key]","","        if (key === \"$call\") {","            result.push(`${stack.join(\".\")}()`)","        }","        else if (key === \"$constructor\") {","            result.push(`new ${stack.join(\".\")}()`)","        }","        else {","            stack.push(key)","","            if (item.$deprecated) {","                result.push(stack.join(\".\"))","            }","            else {","                getDeprecatedItems(item, result, stack)","            }","","            stack.pop()","        }","    }","","    return result","}","","/**"," * Converts from a version number to a version text to display."," *"," * @param {number} value - A version number to convert."," * @returns {string} Covnerted text."," */","function toVersionText(value) {","    if (value <= 0.12) {","        return value.toFixed(2)","    }","    if (value < 1) {","        return value.toFixed(1)","    }","    return String(value)","}","","/**"," * Makes a replacement message."," *"," * @param {string|null} replacedBy - The text of substitute way."," * @returns {string} Replacement message."," */","function toReplaceMessage(replacedBy) {","    return replacedBy ? ` Use ${replacedBy} instead.` : \"\"","}","","/**"," * Gets the property name from a MemberExpression node or a Property node."," *"," * @param {ASTNode} node - A node to get."," * @returns {string|null} The property name of the node."," */","function getPropertyName(node) {","    switch (node.type) {","        case \"MemberExpression\":","            if (node.computed) {","                return getValueIfString(node.property)","            }","            return node.property.name","","        case \"Property\":","            if (node.computed) {","                return getValueIfString(node.key)","            }","            if (node.key.type === \"Literal\") {","                return String(node.key.value)","            }","            return node.key.name","","        // no default","    }","","    /* istanbul ignore next: unreachable */","    return null","}","","/**"," * Checks a given node is a ImportDeclaration node."," *"," * @param {ASTNode} node - A node to check."," * @returns {boolean} `true` if the node is a ImportDeclaration node."," */","function isImportDeclaration(node) {","    return node.type === \"ImportDeclaration\"","}","","/**"," * Finds the variable object of a given Identifier node."," *"," * @param {ASTNode} node - An Identifier node to find."," * @param {escope.Scope} initialScope - A scope to start searching."," * @returns {escope.Variable} Found variable object."," */","function findVariable(node, initialScope) {","    const location = node.range[0]","    let variable = null","","    // Dive into the scope that the node exists.","    for (const childScope of initialScope.childScopes) {","        const range = childScope.block.range","","        if (range[0] <= location && location < range[1]) {","            variable = findVariable(node, childScope)","            if (variable != null) {","                return variable","            }","        }","    }","","    // Find the variable of that name in this scope or ancestor scopes.","    let scope = initialScope","    while (scope != null) {","        variable = scope.set.get(node.name)","        if (variable != null) {","            return variable","        }","","        scope = scope.upper","    }","","    return null","}","","/**"," * Gets the top member expression node."," *"," * @param {ASTNode} identifier - The node to get."," * @returns {ASTNode} The top member expression node."," */","function getTopMemberExpression(identifier) {","    if (identifier.type !== \"Identifier\" && identifier.type !== \"Literal\") {","        return identifier","    }","","    let node = identifier","    while (node.parent.type === \"MemberExpression\") {","        node = node.parent","    }","","    return node","}","","/**"," * The definition of this rule."," *"," * @param {RuleContext} context - The rule context to check."," * @returns {object} The definition of this rule."," */","function create(context) {","    const options = context.options[0] || {}","    const ignoredModuleItems = options.ignoreModuleItems || []","    const ignoredGlobalItems = options.ignoreGlobalItems || []","    let globalScope = null","","    /**","     * Reports a use of a deprecated API.","     *","     * @param {ASTNode} node - A node to report.","     * @param {string} name - The name of a deprecated API.","     * @param {{since: number, replacedBy: string}} info - Information of the API.","     * @returns {void}","     */","    function report(node, name, info) {","        context.report({","            node,","            loc: getTopMemberExpression(node).loc,","            message: \"{{name}} was deprecated since v{{version}}.{{replace}}\",","            data: {","                name,","                version: toVersionText(info.since),","                replace: toReplaceMessage(info.replacedBy),","            },","        })","    }","","    /**","     * Reports a use of a deprecated module.","     *","     * @param {ASTNode} node - A node to report.","     * @param {string} name - The name of a deprecated module.","     * @param {{since: number, replacedBy: string, global: boolean}} info - Information of the module.","     * @returns {void}","     */","    function reportModule(node, name, info) {","        if (ignoredModuleItems.indexOf(name) === -1) {","            report(node, `'${name}' module`, info)","        }","    }","","    /**","     * Reports a use of a deprecated property.","     *","     * @param {ASTNode} node - A node to report.","     * @param {string[]} path - The path to a deprecated property.","     * @param {{since: number, replacedBy: string, global: boolean}} info - Information of the property.","     * @returns {void}","     */","    function reportCall(node, path, info) {","        const ignored = info.global ? ignoredGlobalItems : ignoredModuleItems","        const name = `${path.join(\".\")}()`","","        if (ignored.indexOf(name) === -1) {","            report(node, `'${name}'`, info)","        }","    }","","    /**","     * Reports a use of a deprecated property.","     *","     * @param {ASTNode} node - A node to report.","     * @param {string[]} path - The path to a deprecated property.","     * @param {{since: number, replacedBy: string, global: boolean}} info - Information of the property.","     * @returns {void}","     */","    function reportConstructor(node, path, info) {","        const ignored = info.global ? ignoredGlobalItems : ignoredModuleItems","        const name = `new ${path.join(\".\")}()`","","        if (ignored.indexOf(name) === -1) {","            report(node, `'${name}'`, info)","        }","    }","","    /**","     * Reports a use of a deprecated property.","     *","     * @param {ASTNode} node - A node to report.","     * @param {string[]} path - The path to a deprecated property.","     * @param {string} key - The name of the property.","     * @param {{since: number, replacedBy: string, global: boolean}} info - Information of the property.","     * @returns {void}","     */","    function reportProperty(node, path, key, info) {","        const ignored = info.global ? ignoredGlobalItems : ignoredModuleItems","        const name = `${path.join(\".\")}.${key}`","","        if (ignored.indexOf(name) === -1) {","            report(node, `'${name}'`, info)","        }","    }","","    /**","     * Checks violations in destructuring assignments.","     *","     * @param {ASTNode} node - A pattern node to check.","     * @param {string[]} path - The path to a deprecated property.","     * @param {object} infoMap - A map of properties' information.","     * @returns {void}","     */","    function checkDestructuring(node, path, infoMap) {","        switch (node.type) {","            case \"AssignmentPattern\":","                checkDestructuring(node.left, path, infoMap)","                break","","            case \"Identifier\": {","                const variable = findVariable(node, globalScope)","                if (variable != null) {","                    checkVariable(variable, path, infoMap)","                }","                break","            }","            case \"ObjectPattern\":","                for (const property of node.properties) {","                    const key = getPropertyName(property)","                    if (key != null && hasOwnProperty.call(infoMap, key)) {","                        const keyInfo = infoMap[key]","                        if (keyInfo.$deprecated) {","                            reportProperty(property.key, path, key, keyInfo)","                        }","                        else {","                            path.push(key)","                            checkDestructuring(property.value, path, keyInfo)","                            path.pop()","                        }","                    }","                }","                break","","            // no default","        }","    }","","    /**","     * Checks violations in properties.","     *","     * @param {ASTNode} root - A node to check.","     * @param {string[]} path - The path to a deprecated property.","     * @param {object} infoMap - A map of properties' information.","     * @returns {void}","     */","    function checkProperties(root, path, infoMap) { //eslint-disable-line complexity","        let node = root","        while (!SENTINEL_TYPE.test(node.parent.type)) {","            node = node.parent","        }","","        const parent = node.parent","        switch (parent.type) {","            case \"CallExpression\":","                if (parent.callee === node && infoMap.$call != null) {","                    reportCall(parent, path, infoMap.$call)","                }","                break","","            case \"NewExpression\":","                if (parent.callee === node && infoMap.$constructor != null) {","                    reportConstructor(parent, path, infoMap.$constructor)","                }","                break","","            case \"MemberExpression\":","                if (parent.object === node) {","                    const key = getPropertyName(parent)","                    if (key != null && hasOwnProperty.call(infoMap, key)) {","                        const keyInfo = infoMap[key]","                        if (keyInfo.$deprecated) {","                            reportProperty(parent.property, path, key, keyInfo)","                        }","                        else {","                            path.push(key)","                            checkProperties(parent, path, keyInfo)","                            path.pop()","                        }","                    }","                }","                break","","            case \"AssignmentExpression\":","                if (parent.right === node) {","                    checkDestructuring(parent.left, path, infoMap)","                    checkProperties(parent, path, infoMap)","                }","                break","","            case \"AssignmentPattern\":","                if (parent.right === node) {","                    checkDestructuring(parent.left, path, infoMap)","                }","                break","","            case \"VariableDeclarator\":","                if (parent.init === node) {","                    checkDestructuring(parent.id, path, infoMap)","                }","                break","","            // no default","        }","    }","","    /**","     * Checks violations in the references of a given variable.","     *","     * @param {escope.Variable} variable - A variable to check.","     * @param {string[]} path - The path to a deprecated property.","     * @param {object} infoMap - A map of properties' information.","     * @returns {void}","     */","    function checkVariable(variable, path, infoMap) {","        for (const reference of variable.references.filter(r => r.isRead())) {","            checkProperties(reference.identifier, path, infoMap)","        }","    }","","    /**","     * Checks violations in a ModuleSpecifier node.","     *","     * @param {ASTNode} node - A ModuleSpecifier node to check.","     * @param {string[]} path - The path to a deprecated property.","     * @param {object} infoMap - A map of properties' information.","     * @returns {void}","     */","    function checkImportSpecifier(node, path, infoMap) {","        switch (node.type) {","            case \"ImportSpecifier\": {","                const key = node.imported.name","                if (hasOwnProperty.call(infoMap, key)) {","                    const keyInfo = infoMap[key]","                    if (keyInfo.$deprecated) {","                        reportProperty(node.imported, path, key, keyInfo)","                    }","                    else {","                        path.push(key)","                        checkVariable(","                            findVariable(node.local, globalScope),","                            path,","                            keyInfo","                        )","                        path.pop()","                    }","                }","                break","            }","            case \"ImportDefaultSpecifier\":","                checkVariable(","                    findVariable(node.local, globalScope),","                    path,","                    infoMap","                )","                break","","            case \"ImportNamespaceSpecifier\":","                checkVariable(","                    findVariable(node.local, globalScope),","                    path,","                    assign({}, infoMap, {default: infoMap})","                )","                break","","            // no default","        }","    }","","    /**","     * Checks violations for CommonJS modules.","     * @returns {void}","     */","    function checkCommonJsModules() {","        const infoMap = deprecatedApis.modules","        const variable = globalScope.set.get(\"require\")","","        if (variable == null || variable.defs.length !== 0) {","            return","        }","","        for (const reference of variable.references.filter(r => r.isRead())) {","            const id = reference.identifier","            const node = id.parent","","            if (node.type === \"CallExpression\" && node.callee === id) {","                const key = getValueIfString(node.arguments[0])","                if (key != null && hasOwnProperty.call(infoMap, key)) {","                    const moduleInfo = infoMap[key]","                    if (moduleInfo.$deprecated) {","                        reportModule(node, key, moduleInfo)","                    }","                    else {","                        checkProperties(node, [key], moduleInfo)","                    }","                }","            }","        }","    }","","    /**","     * Checks violations for ES2015 modules.","     * @param {ASTNode} programNode - A program node to check.","     * @returns {void}","     */","    function checkES2015Modules(programNode) {","        const infoMap = deprecatedApis.modules","","        for (const node of programNode.body.filter(isImportDeclaration)) {","            const key = node.source.value","            if (hasOwnProperty.call(infoMap, key)) {","                const moduleInfo = infoMap[key]","                if (moduleInfo.$deprecated) {","                    reportModule(node, key, moduleInfo)","                }","                else {","                    for (const specifier of node.specifiers) {","                        checkImportSpecifier(specifier, [key], moduleInfo)","                    }","                }","            }","        }","    }","","    /**","     * Checks violations for global variables.","     * @returns {void}","     */","    function checkGlobals() {","        const infoMap = deprecatedApis.globals","","        for (const key of Object.keys(infoMap)) {","            const keyInfo = infoMap[key]","            const variable = globalScope.set.get(key)","","            if (variable != null && variable.defs.length === 0) {","                checkVariable(variable, [key], keyInfo)","            }","        }","    }","","    return {","        \"Program:exit\"(node) {","            globalScope = context.getScope()","","            checkCommonJsModules()","            checkES2015Modules(node)","            checkGlobals()","        },","    }","}","","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create,","    meta: {","        docs: {","            description: \"disallow deprecated APIs\",","            category: \"Best Practices\",","            recommended: false,","        },","        fixable: false,","        schema: [","            {","                type: \"object\",","                properties: {","                    ignoreModuleItems: {","                        type: \"array\",","                        items: {enum: MODULE_ITEMS},","                        additionalItems: false,","                        uniqueItems: true,","                    },","                    ignoreGlobalItems: {","                        type: \"array\",","                        items: {enum: GLOBAL_ITEMS},","                        additionalItems: false,","                        uniqueItems: true,","                    },","","                    // Deprecated since v4.2.0","                    ignoreIndirectDependencies: {type: \"boolean\"},","                },","                additionalProperties: false,","            },","        ],","    },","}",""],"l":{"13":1,"14":1,"15":1,"21":1,"22":1,"23":1,"36":1,"37":21,"38":69,"40":69,"41":2,"43":67,"44":2,"47":65,"49":65,"50":46,"53":19,"56":65,"60":21,"69":1,"70":0,"71":0,"73":0,"74":0,"76":0,"85":1,"86":0,"95":1,"96":0,"98":0,"99":0,"101":0,"104":0,"105":0,"107":0,"108":0,"110":0,"116":1,"125":1,"126":0,"136":1,"137":0,"138":0,"141":0,"142":0,"144":0,"145":0,"146":0,"147":0,"153":0,"154":0,"155":0,"156":0,"157":0,"160":0,"163":0,"172":1,"173":0,"174":0,"177":0,"178":0,"179":0,"182":0,"191":1,"192":0,"193":0,"194":0,"195":0,"205":1,"206":0,"226":1,"227":0,"228":0,"240":1,"241":0,"242":0,"244":0,"245":0,"257":1,"258":0,"259":0,"261":0,"262":0,"275":1,"276":0,"277":0,"279":0,"280":0,"292":1,"293":0,"295":0,"296":0,"299":0,"300":0,"301":0,"303":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"314":0,"315":0,"316":0,"320":0,"334":1,"335":0,"336":0,"337":0,"340":0,"341":0,"343":0,"344":0,"346":0,"349":0,"350":0,"352":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"363":0,"364":0,"365":0,"369":0,"372":0,"373":0,"374":0,"376":0,"379":0,"380":0,"382":0,"385":0,"386":0,"388":0,"402":1,"403":0,"404":0,"416":1,"417":0,"419":0,"420":0,"421":0,"422":0,"423":0,"426":0,"427":0,"432":0,"435":0,"438":0,"443":0,"446":0,"451":0,"461":1,"462":0,"463":0,"465":0,"466":0,"469":0,"470":0,"471":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"481":0,"493":1,"494":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"504":0,"505":0,"516":1,"517":0,"519":0,"520":0,"521":0,"523":0,"524":0,"529":0,"531":0,"533":0,"534":0,"535":0,"544":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/deprecated-apis.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/deprecated-apis.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":311,"column":1}}},"branchMap":{},"code":["/**"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","module.exports = {","    modules: {","        buffer: {","            Buffer: {","                $constructor: {","                    $deprecated: true,","                    since: 6,","                    replacedBy: \"'buffer.Buffer.alloc()' or 'buffer.Buffer.from()' (use 'https://www.npmjs.com/package/safe-buffer' for '<4.5.0')\",","                },","                $call: {","                    $deprecated: true,","                    since: 6,","                    replacedBy: \"'buffer.Buffer.alloc()' or 'buffer.Buffer.from()' (use 'https://www.npmjs.com/package/safe-buffer' for '<4.5.0')\",","                },","            },","            SlowBuffer: {","                $deprecated: true,","                since: 6,","                replacedBy: \"'buffer.Buffer.allocUnsafeSlow()'\",","            },","        },","        crypto: {","            createCredentials: {","                $deprecated: true,","                since: 0.12,","                replacedBy: \"'tls.createSecureContext()'\",","            },","        },","        domain: {","            $deprecated: true,","            since: 4,","            replacedBy: null,","        },","        events: {","            EventEmitter: {","                listenerCount: {","                    $deprecated: true,","                    since: 4,","                    replacedBy: \"'events.EventEmitter#listenerCount()'\",","                },","            },","            listenerCount: {","                $deprecated: true,","                since: 4,","                replacedBy: \"'events.EventEmitter#listenerCount()'\",","            },","        },","        fs: {","            exists: {","                $deprecated: true,","                since: 4,","                replacedBy: \"'fs.stat()' or 'fs.access()'\",","            },","        },","        http: {","            createClient: {","                $deprecated: true,","                since: 0.10,","                replacedBy: \"'http.request()'\",","            },","        },","        module: {","            Module: {","                requireRepl: {","                    $deprecated: true,","                    since: 6,","                    replacedBy: \"'require(\\\"repl\\\")'\",","                },","            },","            requireRepl: {","                $deprecated: true,","                since: 6,","                replacedBy: \"'require(\\\"repl\\\")'\",","            },","        },","        os: {","            tmpDir: {","                $deprecated: true,","                since: 7,","                replacedBy: \"'os.tmpdir()'\",","            },","        },","        punycode: {","            $deprecated: true,","            since: 7,","            replacedBy: \"'https://www.npmjs.com/package/punycode'\",","        },","        readline: {","            codePointAt: {","                $deprecated: true,","                since: 4,","                replacedBy: null,","            },","            getStringWidth: {","                $deprecated: true,","                since: 6,","                replacedBy: null,","            },","            isFullWidthCodePoint: {","                $deprecated: true,","                since: 6,","                replacedBy: null,","            },","            stripVTControlCharacters: {","                $deprecated: true,","                since: 6,","                replacedBy: null,","            },","        },","        tls: {","            CleartextStream: {","                $deprecated: true,","                since: 0.10,","                replacedBy: null,","            },","            CryptoStream: {","                $deprecated: true,","                since: 0.12,","                replacedBy: \"'tls.TLSSocket'\",","            },","            SecurePair: {","                $deprecated: true,","                since: 6,","                replacedBy: \"'tls.TLSSocket'\",","            },","            createSecurePair: {","                $deprecated: true,","                since: 6,","                replacedBy: \"'tls.TLSSocket'\",","            },","        },","        tty: {","            setRawMode: {","                $deprecated: true,","                since: 0.10,","                replacedBy: \"'tty.ReadStream#setRawMode()' (e.g. 'process.stdin.setRawMode()')\",","            },","        },","        util: {","            debug: {","                $deprecated: true,","                since: 0.12,","                replacedBy: \"'console.error()'\",","            },","            error: {","                $deprecated: true,","                since: 0.12,","                replacedBy: \"'console.error()'\",","            },","            isArray: {","                $deprecated: true,","                since: 4,","                replacedBy: \"'Array.isArray()'\",","            },","            isBoolean: {","                $deprecated: true,","                since: 4,","                replacedBy: null,","            },","            isBuffer: {","                $deprecated: true,","                since: 4,","                replacedBy: \"'Buffer.isBuffer()'\",","            },","            isDate: {","                $deprecated: true,","                since: 4,","                replacedBy: null,","            },","            isError: {","                $deprecated: true,","                since: 4,","                replacedBy: null,","            },","            isFunction: {","                $deprecated: true,","                since: 4,","                replacedBy: null,","            },","            isNull: {","                $deprecated: true,","                since: 4,","                replacedBy: null,","            },","            isNullOrUndefined: {","                $deprecated: true,","                since: 4,","                replacedBy: null,","            },","            isNumber: {","                $deprecated: true,","                since: 4,","                replacedBy: null,","            },","            isObject: {","                $deprecated: true,","                since: 4,","                replacedBy: null,","            },","            isPrimitive: {","                $deprecated: true,","                since: 4,","                replacedBy: null,","            },","            isRegExp: {","                $deprecated: true,","                since: 4,","                replacedBy: null,","            },","            isString: {","                $deprecated: true,","                since: 4,","                replacedBy: null,","            },","            isSymbol: {","                $deprecated: true,","                since: 4,","                replacedBy: null,","            },","            isUndefined: {","                $deprecated: true,","                since: 4,","                replacedBy: null,","            },","            log: {","                $deprecated: true,","                since: 6,","                replacedBy: \"a third party module\",","            },","            print: {","                $deprecated: true,","                since: 0.12,","                replacedBy: \"'console.log()'\",","            },","            pump: {","                $deprecated: true,","                since: 0.10,","                replacedBy: \"'stream.Readable#pipe()'\",","            },","            puts: {","                $deprecated: true,","                since: 0.12,","                replacedBy: \"'console.log()'\",","            },","            _extend: {","                $deprecated: true,","                since: 6,","                replacedBy: \"'Object.assign()'\",","            },","        },","    },","    globals: {","        Buffer: {","            $constructor: {","                $deprecated: true,","                global: true,","                since: 6,","                replacedBy: \"'Buffer.alloc()' or 'Buffer.from()' (use 'https://www.npmjs.com/package/safe-buffer' for '<4.5.0')\",","            },","            $call: {","                $deprecated: true,","                global: true,","                since: 6,","                replacedBy: \"'Buffer.alloc()' or 'Buffer.from()' (use 'https://www.npmjs.com/package/safe-buffer' for '<4.5.0')\",","            },","        },","        Intl: {","            v8BreakIterator: {","                $deprecated: true,","                global: true,","                since: 7,","                replacedBy: null,","            },","        },","        require: {","            extensions: {","                $deprecated: true,","                global: true,","                since: 0.12,","                replacedBy: \"compiling them ahead of time\",","            },","        },","        process: {","            EventEmitter: {","                $deprecated: true,","                global: true,","                since: 0.6,","                replacedBy: \"'require(\\\"events\\\")'\",","            },","            env: {","                NODE_REPL_HISTORY_FILE: {","                    $deprecated: true,","                    global: true,","                    since: 4,","                    replacedBy: \"'NODE_REPL_HISTORY'\",","                },","            },","        },","    },","}",""],"l":{"12":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/get-value-if-string.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/get-value-if-string.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"getValueIfString","line":18,"loc":{"start":{"line":18,"column":17},"end":{"line":18,"column":49}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":40,"column":1}},"2":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"3":{"start":{"line":20,"column":8},"end":{"line":20,"column":19}},"4":{"start":{"line":23,"column":4},"end":{"line":37,"column":5}},"5":{"start":{"line":25,"column":12},"end":{"line":27,"column":13}},"6":{"start":{"line":26,"column":16},"end":{"line":26,"column":33}},"7":{"start":{"line":28,"column":12},"end":{"line":28,"column":17}},"8":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"9":{"start":{"line":32,"column":16},"end":{"line":32,"column":50}},"10":{"start":{"line":34,"column":12},"end":{"line":34,"column":17}},"11":{"start":{"line":39,"column":4},"end":{"line":39,"column":15}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"2":{"line":23,"type":"switch","locations":[{"start":{"line":24,"column":8},"end":{"line":28,"column":17}},{"start":{"line":30,"column":8},"end":{"line":34,"column":17}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":12},"end":{"line":25,"column":12}},{"start":{"line":25,"column":12},"end":{"line":25,"column":12}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":31,"column":12}},{"start":{"line":31,"column":12},"end":{"line":31,"column":12}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * Gets the value of a given node if it's a literal or a template literal."," *"," * @param {ASTNode} node - A node to get."," * @returns {string|null} The value of the node, or `null`."," */","module.exports = function getValueIfString(node) {","    if (!node) {","        return null","    }","","    switch (node.type) {","        case \"Literal\":","            if (typeof node.value === \"string\") {","                return node.value","            }","            break","","        case \"TemplateLiteral\":","            if (node.expressions.length === 0) {","                return node.quasis[0].value.cooked","            }","            break","","        // no default","    }","","    return null","}",""],"l":{"18":1,"19":0,"20":0,"23":0,"25":0,"26":0,"28":0,"31":0,"32":0,"34":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/no-hide-core-modules.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/no-hide-core-modules.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"create","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":25}}},"2":{"name":"(anonymous_2)","line":58,"loc":{"start":{"line":58,"column":22},"end":{"line":58,"column":29}}}},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":28}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":34}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":58}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":64}},"5":{"start":{"line":20,"column":0},"end":{"line":20,"column":75}},"6":{"start":{"line":26,"column":0},"end":{"line":32,"column":2}},"7":{"start":{"line":33,"column":0},"end":{"line":33,"column":24}},"8":{"start":{"line":41,"column":0},"end":{"line":97,"column":1}},"9":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"10":{"start":{"line":43,"column":8},"end":{"line":43,"column":17}},"11":{"start":{"line":45,"column":4},"end":{"line":45,"column":56}},"12":{"start":{"line":46,"column":4},"end":{"line":46,"column":42}},"13":{"start":{"line":47,"column":4},"end":{"line":47,"column":48}},"14":{"start":{"line":48,"column":4},"end":{"line":51,"column":6}},"15":{"start":{"line":52,"column":4},"end":{"line":52,"column":44}},"16":{"start":{"line":53,"column":4},"end":{"line":53,"column":37}},"17":{"start":{"line":54,"column":4},"end":{"line":54,"column":78}},"18":{"start":{"line":55,"column":4},"end":{"line":55,"column":82}},"19":{"start":{"line":57,"column":4},"end":{"line":96,"column":5}},"20":{"start":{"line":59,"column":12},"end":{"line":64,"column":60}},"21":{"start":{"line":64,"column":29},"end":{"line":64,"column":59}},"22":{"start":{"line":66,"column":12},"end":{"line":94,"column":13}},"23":{"start":{"line":67,"column":16},"end":{"line":67,"column":46}},"24":{"start":{"line":68,"column":16},"end":{"line":71,"column":67}},"25":{"start":{"line":73,"column":16},"end":{"line":75,"column":17}},"26":{"start":{"line":74,"column":20},"end":{"line":74,"column":28}},"27":{"start":{"line":77,"column":16},"end":{"line":77,"column":71}},"28":{"start":{"line":78,"column":16},"end":{"line":78,"column":48}},"29":{"start":{"line":80,"column":16},"end":{"line":82,"column":17}},"30":{"start":{"line":81,"column":20},"end":{"line":81,"column":28}},"31":{"start":{"line":84,"column":16},"end":{"line":93,"column":18}},"32":{"start":{"line":103,"column":0},"end":{"line":130,"column":1}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"2":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":21},"end":{"line":49,"column":32}},{"start":{"line":49,"column":36},"end":{"line":49,"column":60}},{"start":{"line":49,"column":65},"end":{"line":49,"column":67}}]},"3":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":32}},{"start":{"line":50,"column":36},"end":{"line":50,"column":63}},{"start":{"line":50,"column":68},"end":{"line":50,"column":70}}]},"4":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":20},"end":{"line":52,"column":38}},{"start":{"line":52,"column":42},"end":{"line":52,"column":44}}]},"5":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":18},"end":{"line":53,"column":31}},{"start":{"line":53,"column":35},"end":{"line":53,"column":37}}]},"6":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":20},"end":{"line":69,"column":46}},{"start":{"line":70,"column":21},"end":{"line":70,"column":45}},{"start":{"line":70,"column":49},"end":{"line":70,"column":63}},{"start":{"line":71,"column":21},"end":{"line":71,"column":47}},{"start":{"line":71,"column":51},"end":{"line":71,"column":66}}]},"7":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":16},"end":{"line":73,"column":16}},{"start":{"line":73,"column":16},"end":{"line":73,"column":16}}]},"8":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":16},"end":{"line":80,"column":16}},{"start":{"line":80,"column":16},"end":{"line":80,"column":16}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," *"," * @deprecated since v4.2.0"," * This rule was based on an invalid assumption."," * No meaning."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const path = require(\"path\")","const resolve = require(\"resolve\")","const getPackageJson = require(\"../util/get-package-json\")","const getRequireTargets = require(\"../util/get-require-targets\")","const getImportExportTargets = require(\"../util/get-import-export-targets\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","const CORE_MODULES = new Set([","    \"assert\", \"buffer\", \"child_process\", \"cluster\", \"console\", \"constants\",","    \"crypto\", \"dgram\", \"dns\", /* \"domain\", */ \"events\", \"fs\", \"http\", \"https\",","    \"module\", \"net\", \"os\", \"path\", /* \"punycode\", */ \"querystring\", \"readline\",","    \"repl\", \"stream\", \"string_decoder\", \"timers\", \"tls\", \"tty\", \"url\", \"util\",","    \"vm\", \"zlib\",","])","const BACK_SLASH = /\\\\/g","","/**"," * Creates AST event handlers for no-hide-core-modules."," *"," * @param {RuleContext} context - The rule context."," * @returns {object} AST event handlers."," */","function create(context) {","    if (context.getFilename() === \"<input>\") {","        return {}","    }","    const filePath = path.resolve(context.getFilename())","    const dirPath = path.dirname(filePath)","    const packageJson = getPackageJson(filePath)","    const deps = new Set([].concat(","        Object.keys((packageJson && packageJson.dependencies) || {}),","        Object.keys((packageJson && packageJson.devDependencies) || {})","    ))","    const options = context.options[0] || {}","    const allow = options.allow || []","    const ignoreDirectDependencies = Boolean(options.ignoreDirectDependencies)","    const ignoreIndirectDependencies = Boolean(options.ignoreIndirectDependencies)","","    return {","        \"Program:exit\"(node) {","            const targets =","                [].concat(","                    getRequireTargets(context, true),","                    getImportExportTargets(context, node, true)","                )","                .filter(t => CORE_MODULES.has(t.moduleName))","","            for (const target of targets) {","                const name = target.moduleName","                const allowed =","                    allow.indexOf(name) !== -1 ||","                    (ignoreDirectDependencies && deps.has(name)) ||","                    (ignoreIndirectDependencies && !deps.has(name))","","                if (allowed) {","                    continue","                }","","                const resolved = resolve.sync(name, {basedir: dirPath})","                const isCore = resolved === name","","                if (isCore) {","                    continue","                }","","                context.report({","                    node: target.node,","                    loc: target.node.loc,","                    message: \"Unexpected import of third-party module '{{name}}'.\",","                    data: {","                        name: path","                            .relative(dirPath, resolved)","                            .replace(BACK_SLASH, \"/\"),","                    },","                })","            }","        },","    }","}","","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create,","    meta: {","        docs: {","            description: \"disallow third-party modules which are hiding core modules\",","            category: \"Possible Errors\",","            recommended: false,","        },","        deprecated: true,","        fixable: false,","        schema: [","            {","                type: \"object\",","                properties: {","                    allow: {","                        type: \"array\",","                        items: {enum: Array.from(CORE_MODULES)},","                        additionalItems: false,","                        uniqueItems: true,","                    },","                    ignoreDirectDependencies: {type: \"boolean\"},","                    ignoreIndirectDependencies: {type: \"boolean\"},","                },","                additionalProperties: false,","            },","        ],","    },","}",""],"l":{"16":1,"17":1,"18":1,"19":1,"20":1,"26":1,"33":1,"41":1,"42":0,"43":0,"45":0,"46":0,"47":0,"48":0,"52":0,"53":0,"54":0,"55":0,"57":0,"59":0,"64":0,"66":0,"67":0,"68":0,"73":0,"74":0,"77":0,"78":0,"80":0,"81":0,"84":0,"103":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/get-package-json.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/get-package-json.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"readPackageJson","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":30}}},"2":{"name":"getPackageJson","line":60,"loc":{"start":{"line":60,"column":17},"end":{"line":60,"column":52}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":24}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":32}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":25}},"5":{"start":{"line":30,"column":0},"end":{"line":46,"column":1}},"6":{"start":{"line":31,"column":4},"end":{"line":31,"column":51}},"7":{"start":{"line":32,"column":4},"end":{"line":43,"column":5}},"8":{"start":{"line":33,"column":8},"end":{"line":33,"column":54}},"9":{"start":{"line":34,"column":8},"end":{"line":34,"column":37}},"10":{"start":{"line":36,"column":8},"end":{"line":39,"column":9}},"11":{"start":{"line":37,"column":12},"end":{"line":37,"column":36}},"12":{"start":{"line":38,"column":12},"end":{"line":38,"column":23}},"13":{"start":{"line":45,"column":4},"end":{"line":45,"column":15}},"14":{"start":{"line":60,"column":0},"end":{"line":90,"column":1}},"15":{"start":{"line":61,"column":4},"end":{"line":61,"column":58}},"16":{"start":{"line":62,"column":4},"end":{"line":62,"column":22}},"17":{"start":{"line":63,"column":4},"end":{"line":63,"column":20}},"18":{"start":{"line":64,"column":4},"end":{"line":64,"column":19}},"19":{"start":{"line":66,"column":4},"end":{"line":86,"column":27}},"20":{"start":{"line":67,"column":8},"end":{"line":67,"column":29}},"21":{"start":{"line":68,"column":8},"end":{"line":73,"column":9}},"22":{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},"23":{"start":{"line":70,"column":16},"end":{"line":70,"column":41}},"24":{"start":{"line":72,"column":12},"end":{"line":72,"column":23}},"25":{"start":{"line":75,"column":8},"end":{"line":75,"column":35}},"26":{"start":{"line":76,"column":8},"end":{"line":80,"column":9}},"27":{"start":{"line":77,"column":12},"end":{"line":77,"column":32}},"28":{"start":{"line":78,"column":12},"end":{"line":78,"column":37}},"29":{"start":{"line":79,"column":12},"end":{"line":79,"column":23}},"30":{"start":{"line":83,"column":8},"end":{"line":83,"column":21}},"31":{"start":{"line":84,"column":8},"end":{"line":84,"column":37}},"32":{"start":{"line":88,"column":4},"end":{"line":88,"column":29}},"33":{"start":{"line":89,"column":4},"end":{"line":89,"column":15}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":8}},{"start":{"line":36,"column":8},"end":{"line":36,"column":8}}]},"2":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":36}},{"start":{"line":36,"column":40},"end":{"line":36,"column":53}}]},"3":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":8}},{"start":{"line":68,"column":8},"end":{"line":68,"column":8}}]},"4":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":69,"column":12}},{"start":{"line":69,"column":12},"end":{"line":69,"column":12}}]},"5":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":76,"column":8}},{"start":{"line":76,"column":8},"end":{"line":76,"column":8}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2015 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const fs = require(\"fs\")","const path = require(\"path\")","const Cache = require(\"./cache\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","const cache = new Cache()","","/**"," * Reads the `package.json` data in a given path."," *"," * Don't cache the data."," *"," * @param {string} dir - The path to a directory to read."," * @returns {object|null} The read `package.json` data, or null."," */","function readPackageJson(dir) {","    const filePath = path.join(dir, \"package.json\")","    try {","        const text = fs.readFileSync(filePath, \"utf8\")","        const data = JSON.parse(text)","","        if (typeof data === \"object\" && data !== null) {","            data.filePath = filePath","            return data","        }","    }","    catch (_err) {","        // do nothing.","    }","","    return null","}","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * Gets a `package.json` data."," * The data is cached if found, then it's used after."," *"," * @param {string} startPath - A file path to lookup."," * @returns {object|null} A found `package.json` data or `null`."," *      This object have additional property `filePath`."," */","module.exports = function getPackageJson(startPath) {","    const startDir = path.dirname(path.resolve(startPath))","    let dir = startDir","    let prevDir = \"\"","    let data = null","","    do {","        data = cache.get(dir)","        if (data) {","            if (dir !== startDir) {","                cache.put(startDir, data)","            }","            return data","        }","","        data = readPackageJson(dir)","        if (data) {","            cache.put(dir, data)","            cache.put(startDir, data)","            return data","        }","","        // Go to next.","        prevDir = dir","        dir = path.resolve(dir, \"..\")","    }","    while (dir !== prevDir)","","    cache.put(startDir, null)","    return null","}",""],"l":{"12":1,"13":1,"14":1,"20":1,"30":1,"31":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"45":0,"60":1,"61":0,"62":0,"63":0,"64":0,"66":0,"67":0,"68":0,"69":0,"70":0,"72":0,"75":0,"76":0,"77":0,"78":0,"79":0,"83":0,"84":0,"88":0,"89":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/cache.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/cache.js","s":{"1":1,"2":1,"3":2,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":2,"2":0,"3":0},"fnMap":{"1":{"name":"Cache","line":25,"loc":{"start":{"line":25,"column":31},"end":{"line":25,"column":48}}},"2":{"name":"get","line":31,"loc":{"start":{"line":31,"column":15},"end":{"line":31,"column":33}}},"3":{"name":"put","line":46,"loc":{"start":{"line":46,"column":15},"end":{"line":46,"column":40}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":22}},"2":{"start":{"line":25,"column":0},"end":{"line":27,"column":1}},"3":{"start":{"line":26,"column":4},"end":{"line":26,"column":34}},"4":{"start":{"line":29,"column":0},"end":{"line":64,"column":2}},"5":{"start":{"line":32,"column":12},"end":{"line":32,"column":39}},"6":{"start":{"line":33,"column":12},"end":{"line":33,"column":34}},"7":{"start":{"line":35,"column":12},"end":{"line":38,"column":13}},"8":{"start":{"line":36,"column":16},"end":{"line":36,"column":46}},"9":{"start":{"line":37,"column":16},"end":{"line":37,"column":34}},"10":{"start":{"line":39,"column":12},"end":{"line":39,"column":23}},"11":{"start":{"line":47,"column":12},"end":{"line":47,"column":39}},"12":{"start":{"line":48,"column":12},"end":{"line":48,"column":34}},"13":{"start":{"line":50,"column":12},"end":{"line":59,"column":13}},"14":{"start":{"line":51,"column":16},"end":{"line":51,"column":35}},"15":{"start":{"line":52,"column":16},"end":{"line":52,"column":46}},"16":{"start":{"line":55,"column":16},"end":{"line":58,"column":17}}},"branchMap":{"1":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":12},"end":{"line":35,"column":12}},{"start":{"line":35,"column":12},"end":{"line":35,"column":12}}]},"2":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":16},"end":{"line":35,"column":21}},{"start":{"line":35,"column":25},"end":{"line":35,"column":47}}]},"3":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":12}},{"start":{"line":50,"column":12},"end":{"line":50,"column":12}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","const SKIP_TIME = 5000","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * A class of cache."," * The cache will dispose of each value if the value has not been accessed"," * during 5 seconds."," *"," * @constructor"," */","const Cache = module.exports = function Cache() {","    this.map = Object.create(null)","}","","Object.defineProperties(Cache.prototype, {","    get: {","        value: function get(key) {","            const entry = this.map[key]","            const now = Date.now()","","            if (entry && entry.expire - now > 0) {","                entry.expire = now + SKIP_TIME","                return entry.value","            }","            return null","        },","        configurable: true,","        writable: true,","    },","","    put: {","        value: function put(key, value) {","            const entry = this.map[key]","            const now = Date.now()","","            if (entry) {","                entry.value = value","                entry.expire = now + SKIP_TIME","            }","            else {","                this.map[key] = {","                    value,","                    expire: now + SKIP_TIME,","                }","            }","        },","        configurable: true,","        writable: true,","    },","})",""],"l":{"12":1,"25":1,"26":2,"29":1,"32":0,"33":0,"35":0,"36":0,"37":0,"39":0,"47":0,"48":0,"50":0,"51":0,"52":0,"55":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/get-require-targets.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/get-require-targets.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"isCallee","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":24}}},"2":{"name":"getReferencesOfRequire","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":39}}},"3":{"name":"getRequireTargets","line":61,"loc":{"start":{"line":61,"column":17},"end":{"line":61,"column":66}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":28}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":34}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":56}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":57}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":47}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":67}},"7":{"start":{"line":29,"column":0},"end":{"line":31,"column":1}},"8":{"start":{"line":30,"column":4},"end":{"line":30,"column":79}},"9":{"start":{"line":39,"column":0},"end":{"line":46,"column":1}},"10":{"start":{"line":40,"column":4},"end":{"line":40,"column":45}},"11":{"start":{"line":41,"column":4},"end":{"line":44,"column":5}},"12":{"start":{"line":43,"column":8},"end":{"line":43,"column":17}},"13":{"start":{"line":45,"column":4},"end":{"line":45,"column":30}},"14":{"start":{"line":61,"column":0},"end":{"line":85,"column":1}},"15":{"start":{"line":62,"column":4},"end":{"line":62,"column":19}},"16":{"start":{"line":63,"column":4},"end":{"line":63,"column":69}},"17":{"start":{"line":64,"column":4},"end":{"line":64,"column":65}},"18":{"start":{"line":65,"column":4},"end":{"line":65,"column":48}},"19":{"start":{"line":67,"column":4},"end":{"line":82,"column":5}},"20":{"start":{"line":68,"column":8},"end":{"line":68,"column":41}},"21":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"22":{"start":{"line":72,"column":12},"end":{"line":72,"column":20}},"23":{"start":{"line":76,"column":8},"end":{"line":76,"column":51}},"24":{"start":{"line":77,"column":8},"end":{"line":77,"column":52}},"25":{"start":{"line":78,"column":8},"end":{"line":78,"column":62}},"26":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"27":{"start":{"line":80,"column":12},"end":{"line":80,"column":78}},"28":{"start":{"line":84,"column":4},"end":{"line":84,"column":15}}},"branchMap":{"1":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":11},"end":{"line":30,"column":48}},{"start":{"line":30,"column":52},"end":{"line":30,"column":79}}]},"2":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"3":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":8}},{"start":{"line":71,"column":8},"end":{"line":71,"column":8}}]},"4":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":21},"end":{"line":78,"column":28}},{"start":{"line":78,"column":32},"end":{"line":78,"column":62}}]},"5":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":79,"column":8}},{"start":{"line":79,"column":8},"end":{"line":79,"column":8}}]},"6":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":12},"end":{"line":79,"column":16}},{"start":{"line":79,"column":21},"end":{"line":79,"column":32}},{"start":{"line":79,"column":36},"end":{"line":79,"column":57}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const path = require(\"path\")","const resolve = require(\"resolve\")","const getTryExtensions = require(\"./get-try-extensions\")","const getValueIfString = require(\"./get-value-if-string\")","const ImportTarget = require(\"./import-target\")","const stripImportPathParams = require(\"./strip-import-path-params\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","/**"," * Checks whether or not a given node is a callee."," *"," * @param {ASTNode} node - A node to check."," * @returns {boolean} `true` if the node is a callee."," */","function isCallee(node) {","    return node.parent.type === \"CallExpression\" && node.parent.callee === node","}","","/**"," * Gets references of \"require\"."," *"," * @param {escope.Scope} scope - The global scope."," * @returns {escope.Reference[]} References of \"require\"."," */","function getReferencesOfRequire(scope) {","    const variable = scope.set.get(\"require\")","    if (!variable) {","        // Not found.","        return []","    }","    return variable.references","}","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * Gets a list of `require()` targets."," *"," * Core modules of Node.js (e.g. `fs`, `http`) are excluded."," *"," * @param {RuleContext} context - The rule context."," * @param {boolean} includeCore - The flag to include core modules."," * @returns {ImportTarget[]} A list of found target's information."," */","module.exports = function getRequireTargets(context, includeCore) {","    const retv = []","    const basedir = path.dirname(path.resolve(context.getFilename()))","    const references = getReferencesOfRequire(context.getScope())","    const extensions = getTryExtensions(context)","","    for (const reference of references) {","        const node = reference.identifier","","        // Skips if it's not a call of `require`.","        if (!isCallee(node)) {","            continue","        }","","        // Gets the target module.","        const targetNode = node.parent.arguments[0]","        const rawName = getValueIfString(targetNode)","        const name = rawName && stripImportPathParams(rawName)","        if (name && (includeCore || !resolve.isCore(name))) {","            retv.push(new ImportTarget(targetNode, name, basedir, extensions))","        }","    }","","    return retv","}",""],"l":{"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"29":1,"30":0,"39":1,"40":0,"41":0,"43":0,"45":0,"61":1,"62":0,"63":0,"64":0,"65":0,"67":0,"68":0,"71":0,"72":0,"76":0,"77":0,"78":0,"79":0,"80":0,"84":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/get-try-extensions.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/get-try-extensions.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"get","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":21}}},"2":{"name":"getTryExtensions","line":41,"loc":{"start":{"line":41,"column":17},"end":{"line":41,"column":52}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":62}},"2":{"start":{"line":20,"column":0},"end":{"line":25,"column":1}},"3":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"4":{"start":{"line":22,"column":8},"end":{"line":22,"column":47}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":15}},"6":{"start":{"line":41,"column":0},"end":{"line":47,"column":1}},"7":{"start":{"line":42,"column":4},"end":{"line":46,"column":5}},"8":{"start":{"line":49,"column":0},"end":{"line":56,"column":1}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":14}},{"start":{"line":21,"column":18},"end":{"line":21,"column":38}},{"start":{"line":21,"column":42},"end":{"line":21,"column":77}}]},"3":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":50}},{"start":{"line":44,"column":8},"end":{"line":44,"column":54}},{"start":{"line":45,"column":8},"end":{"line":45,"column":21}}]},"4":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":12},"end":{"line":43,"column":27}},{"start":{"line":43,"column":31},"end":{"line":43,"column":49}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":12},"end":{"line":44,"column":28}},{"start":{"line":44,"column":32},"end":{"line":44,"column":53}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","const DEFAULT_VALUE = Object.freeze([\".js\", \".json\", \".node\"])","","/**"," * Gets `tryExtensions` property from a given option object."," *"," * @param {object|undefined} option - An option object to get."," * @returns {string[]|null} The `tryExtensions` value, or `null`."," */","function get(option) {","    if (option && option.tryExtensions && Array.isArray(option.tryExtensions)) {","        return option.tryExtensions.map(String)","    }","    return null","}","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * Gets \"tryExtensions\" setting."," *"," * 1. This checks `options` property, then returns it if exists."," * 2. This checks `settings.node` property, then returns it if exists."," * 3. This returns `[\".js\", \".json\", \".node\"]`."," *"," * @param {RuleContext} context - The rule context."," * @returns {string[]} A list of extensions."," */","module.exports = function getTryExtensions(context) {","    return (","        get(context.options && context.options[0]) ||","        get(context.settings && context.settings.node) ||","        DEFAULT_VALUE","    )","}","","module.exports.schema = {","    type: \"array\",","    items: {","        type: \"string\",","        pattern: \"^\\\\.\",","    },","    uniqueItems: true,","}",""],"l":{"12":1,"20":1,"21":0,"22":0,"24":0,"41":1,"42":0,"49":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/import-target.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/import-target.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"isDirectory","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":31}}},"2":{"name":"tryExtentions","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":39}}},"3":{"name":"resolveAsFile","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":39}}},"4":{"name":"resolveAsDirectory","line":74,"loc":{"start":{"line":74,"column":0},"end":{"line":74,"column":44}}},"5":{"name":"resolve","line":94,"loc":{"start":{"line":94,"column":0},"end":{"line":94,"column":38}}},"6":{"name":"getModuleName","line":111,"loc":{"start":{"line":111,"column":0},"end":{"line":111,"column":35}}},"7":{"name":"ImportTarget","line":133,"loc":{"start":{"line":133,"column":17},"end":{"line":133,"column":66}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":24}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":52}},"5":{"start":{"line":27,"column":0},"end":{"line":34,"column":1}},"6":{"start":{"line":28,"column":4},"end":{"line":33,"column":5}},"7":{"start":{"line":29,"column":8},"end":{"line":29,"column":50}},"8":{"start":{"line":32,"column":8},"end":{"line":32,"column":20}},"9":{"start":{"line":43,"column":0},"end":{"line":51,"column":1}},"10":{"start":{"line":44,"column":4},"end":{"line":48,"column":5}},"11":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"12":{"start":{"line":46,"column":12},"end":{"line":46,"column":33}},"13":{"start":{"line":50,"column":4},"end":{"line":50,"column":15}},"14":{"start":{"line":60,"column":0},"end":{"line":65,"column":1}},"15":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"16":{"start":{"line":62,"column":8},"end":{"line":62,"column":23}},"17":{"start":{"line":64,"column":4},"end":{"line":64,"column":40}},"18":{"start":{"line":74,"column":0},"end":{"line":84,"column":1}},"19":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":19}},"21":{"start":{"line":79,"column":4},"end":{"line":79,"column":65}},"22":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"23":{"start":{"line":81,"column":8},"end":{"line":81,"column":63}},"24":{"start":{"line":83,"column":4},"end":{"line":83,"column":60}},"25":{"start":{"line":94,"column":0},"end":{"line":101,"column":1}},"26":{"start":{"line":95,"column":4},"end":{"line":95,"column":52}},"27":{"start":{"line":96,"column":4},"end":{"line":100,"column":5}},"28":{"start":{"line":111,"column":0},"end":{"line":118,"column":1}},"29":{"start":{"line":112,"column":4},"end":{"line":112,"column":37}},"30":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"31":{"start":{"line":114,"column":8},"end":{"line":114,"column":46}},"32":{"start":{"line":117,"column":4},"end":{"line":117,"column":61}},"33":{"start":{"line":133,"column":0},"end":{"line":161,"column":1}},"34":{"start":{"line":134,"column":4},"end":{"line":134,"column":37}},"35":{"start":{"line":140,"column":4},"end":{"line":140,"column":20}},"36":{"start":{"line":146,"column":4},"end":{"line":146,"column":20}},"37":{"start":{"line":153,"column":4},"end":{"line":153,"column":66}},"38":{"start":{"line":160,"column":4},"end":{"line":160,"column":59}}},"branchMap":{"1":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"2":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"3":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"4":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"5":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":8},"end":{"line":80,"column":9}},{"start":{"line":80,"column":13},"end":{"line":80,"column":50}},{"start":{"line":80,"column":54},"end":{"line":80,"column":60}}]},"6":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":8},"end":{"line":97,"column":41}},{"start":{"line":98,"column":8},"end":{"line":98,"column":46}},{"start":{"line":99,"column":8},"end":{"line":99,"column":20}}]},"7":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"8":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":8},"end":{"line":113,"column":18}},{"start":{"line":113,"column":22},"end":{"line":113,"column":43}}]},"9":{"line":117,"type":"cond-expr","locations":[{"start":{"line":117,"column":24},"end":{"line":117,"column":34}},{"start":{"line":117,"column":37},"end":{"line":117,"column":61}}]},"10":{"line":153,"type":"cond-expr","locations":[{"start":{"line":153,"column":31},"end":{"line":153,"column":59}},{"start":{"line":153,"column":62},"end":{"line":153,"column":66}}]},"11":{"line":160,"type":"cond-expr","locations":[{"start":{"line":160,"column":33},"end":{"line":160,"column":37}},{"start":{"line":160,"column":40},"end":{"line":160,"column":59}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const fs = require(\"fs\")","const path = require(\"path\")","const exists = require(\"./exists\")","const getPackageJson = require(\"./get-package-json\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","/**"," * Checks whether or not a given path is a directory."," *"," * @param {string} filePath - A file path to check."," * @returns {boolean} `true` if the path is a directory."," */","function isDirectory(filePath) {","    try {","        return fs.statSync(filePath).isDirectory()","    }","    catch (_err) {","        return false","    }","}","","/**"," * Resolve a given path as a file with given extensions."," *"," * @param {string} filePath - A path to resolve."," * @param {string[]} exts - Extensions that it checks whether or not the file exists."," * @returns {string|null} The resolved path. Or `null` if failed to resolve."," */","function tryExtentions(filePath, exts) {","    for (const ext of exts) {","        if (exists(filePath + ext)) {","            return filePath + ext","        }","    }","","    return null","}","","/**"," * Resolve a given path as a file."," *"," * @param {string} filePath - A path to resolve."," * @param {string[]} exts - Extensions that it checks whether or not the file exists."," * @returns {string|null} The resolved path. Or `null` if failed to resolve."," */","function resolveAsFile(filePath, exts) {","    if (exists(filePath)) {","        return filePath","    }","    return tryExtentions(filePath, exts)","}","","/**"," * Resolve a given path as a directory."," *"," * @param {string} filePath - A path to resolve."," * @param {string[]} exts - Extensions that it checks whether or not the file exists."," * @returns {string|null} The resolved path. Or `null` if failed to resolve."," */","function resolveAsDirectory(filePath, exts) {","    if (!isDirectory(filePath)) {","        return null","    }","","    const p = getPackageJson(path.join(filePath, \"package.json\"))","    if (p && path.dirname(p.filePath) === filePath && p.main) {","        return resolveAsFile(path.join(filePath, p.main), exts)","    }","    return tryExtentions(path.join(filePath, \"index\"), exts)","}","","/**"," * Resolves the file."," *"," * @param {string} basedir - The path of base directory to resolve relative path."," * @param {string} name - The name of an import target."," * @param {string[]} exts - Extensions that it checks whether or not the file exists."," * @returns {string} The resolved path."," */","function resolve(basedir, name, exts) {","    const resolvedPath = path.resolve(basedir, name)","    return (","        resolveAsFile(resolvedPath, exts) ||","        resolveAsDirectory(resolvedPath, exts) ||","        resolvedPath","    )","}","","/**"," * Gets the module name of a given path."," *"," * e.g. `eslint/lib/ast-utils` -> `eslint`"," *"," * @param {string} nameOrPath - A path to get."," * @returns {string} The module name of the path."," */","function getModuleName(nameOrPath) {","    let end = nameOrPath.indexOf(\"/\")","    if (end !== -1 && nameOrPath[0] === \"@\") {","        end = nameOrPath.indexOf(\"/\", 1 + end)","    }","","    return end === -1 ? nameOrPath : nameOrPath.slice(0, end)","}","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * Information of an import target."," *"," * @constructor"," * @param {ASTNode} node - The node of a `require()` or a module declaraiton."," * @param {string} name - The name of an import target."," * @param {string} basedir - The path of base directory to resolve relative path."," * @param {string[]} exts - Extensions that it checks whether or not the file exists."," */","module.exports = function ImportTarget(node, name, basedir, exts) {","    const relative = /^\\./.test(name)","","    /**","     * The node of a `require()` or a module declaraiton.","     * @type {ASTNode}","     */","    this.node = node","","    /**","     * The name of this import target.","     * @type {string}","     */","    this.name = name","","    /**","     * The full path of this import target.","     * If the target is a module then this is `null`.","     * @type {string|null}","     */","    this.filePath = relative ? resolve(basedir, name, exts) : null","","    /**","     * The module name of this import target.","     * If the target is a relative path then this is `null`.","     * @type {string|null}","     */","    this.moduleName = relative ? null : getModuleName(name)","}",""],"l":{"12":1,"13":1,"14":1,"15":1,"27":1,"28":0,"29":0,"32":0,"43":1,"44":0,"45":0,"46":0,"50":0,"60":1,"61":0,"62":0,"64":0,"74":1,"75":0,"76":0,"79":0,"80":0,"81":0,"83":0,"94":1,"95":0,"96":0,"111":1,"112":0,"113":0,"114":0,"117":0,"133":1,"134":0,"140":0,"146":0,"153":0,"160":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/exists.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/exists.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"existsCaseSensitive","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":39}}},"2":{"name":"exists","line":51,"loc":{"start":{"line":51,"column":17},"end":{"line":51,"column":43}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":24}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":58}},"4":{"start":{"line":26,"column":0},"end":{"line":39,"column":1}},"5":{"start":{"line":27,"column":4},"end":{"line":27,"column":26}},"6":{"start":{"line":29,"column":4},"end":{"line":36,"column":5}},"7":{"start":{"line":30,"column":8},"end":{"line":30,"column":47}},"8":{"start":{"line":31,"column":8},"end":{"line":31,"column":39}},"9":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"10":{"start":{"line":34,"column":12},"end":{"line":34,"column":24}},"11":{"start":{"line":38,"column":4},"end":{"line":38,"column":15}},"12":{"start":{"line":51,"column":0},"end":{"line":65,"column":1}},"13":{"start":{"line":52,"column":4},"end":{"line":64,"column":5}},"14":{"start":{"line":53,"column":8},"end":{"line":53,"column":67}},"15":{"start":{"line":54,"column":8},"end":{"line":57,"column":9}},"16":{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},"17":{"start":{"line":61,"column":12},"end":{"line":61,"column":24}},"18":{"start":{"line":63,"column":8},"end":{"line":63,"column":19}}},"branchMap":{"1":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":11},"end":{"line":29,"column":25}},{"start":{"line":29,"column":29},"end":{"line":29,"column":48}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":33,"column":8}},{"start":{"line":33,"column":8},"end":{"line":33,"column":8}}]},"3":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":12},"end":{"line":55,"column":46}},{"start":{"line":56,"column":12},"end":{"line":56,"column":45}}]},"4":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2015 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const fs = require(\"fs\")","const path = require(\"path\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","const ROOT = /^(?:[/.]|\\.\\.|[A-Z]:\\\\|\\\\\\\\)(?:[/\\\\]\\.\\.)*$/","","/**"," * Check whether the file exists or not."," * @param {string} filePath The file path to check."," * @returns {boolean} `true` if the file exists."," */","function existsCaseSensitive(filePath) {","    let dirPath = filePath","","    while (dirPath !== \"\" && !ROOT.test(dirPath)) {","        const fileName = path.basename(dirPath)","        dirPath = path.dirname(dirPath)","","        if (fs.readdirSync(dirPath).indexOf(fileName) === -1) {","            return false","        }","    }","","    return true","}","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * Checks whether or not the file of a given path exists."," *"," * @param {string} filePath - A file path to check."," * @returns {boolean} `true` if the file of a given path exists."," */","module.exports = function exists(filePath) {","    try {","        const relativePath = path.relative(process.cwd(), filePath)","        return (","            fs.statSync(relativePath).isFile() &&","            existsCaseSensitive(relativePath)","        )","    }","    catch (error) {","        if (error.code === \"ENOENT\") {","            return false","        }","        throw error","    }","}",""],"l":{"12":1,"13":1,"19":1,"26":1,"27":0,"29":0,"30":0,"31":0,"33":0,"34":0,"38":0,"51":1,"52":0,"53":0,"54":0,"60":0,"61":0,"63":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/strip-import-path-params.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/strip-import-path-params.js","s":{"1":1,"2":0,"3":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"stripImportPathParams","line":12,"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":54}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":15,"column":1}},"2":{"start":{"line":13,"column":4},"end":{"line":13,"column":31}},"3":{"start":{"line":14,"column":4},"end":{"line":14,"column":45}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":22},"end":{"line":14,"column":26}},{"start":{"line":14,"column":29},"end":{"line":14,"column":45}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","module.exports = function stripImportPathParams(path) {","    const i = path.indexOf(\"!\")","    return i === -1 ? path : path.slice(0, i)","}",""],"l":{"12":1,"13":0,"14":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/get-import-export-targets.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/get-import-export-targets.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"getImportExportTargets","line":38,"loc":{"start":{"line":38,"column":17},"end":{"line":38,"column":84}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":28}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":34}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":56}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":47}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":67}},"6":{"start":{"line":22,"column":0},"end":{"line":22,"column":73}},"7":{"start":{"line":38,"column":0},"end":{"line":58,"column":1}},"8":{"start":{"line":39,"column":4},"end":{"line":39,"column":19}},"9":{"start":{"line":40,"column":4},"end":{"line":40,"column":69}},"10":{"start":{"line":41,"column":4},"end":{"line":41,"column":48}},"11":{"start":{"line":43,"column":4},"end":{"line":55,"column":5}},"12":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":20}},"14":{"start":{"line":50,"column":8},"end":{"line":50,"column":37}},"15":{"start":{"line":51,"column":8},"end":{"line":51,"column":62}},"16":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"17":{"start":{"line":53,"column":12},"end":{"line":53,"column":72}},"18":{"start":{"line":57,"column":4},"end":{"line":57,"column":15}}},"branchMap":{"1":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"2":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":21},"end":{"line":51,"column":25}},{"start":{"line":51,"column":29},"end":{"line":51,"column":62}}]},"3":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"4":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":12},"end":{"line":52,"column":16}},{"start":{"line":52,"column":21},"end":{"line":52,"column":32}},{"start":{"line":52,"column":36},"end":{"line":52,"column":57}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const path = require(\"path\")","const resolve = require(\"resolve\")","const getTryExtensions = require(\"./get-try-extensions\")","const ImportTarget = require(\"./import-target\")","const stripImportPathParams = require(\"./strip-import-path-params\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","const MODULE_TYPE = /^(?:Import|Export(?:Named|Default|All))Declaration$/","","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","/**"," * Gets a list of `import`/`export` declaration targets."," *"," * Core modules of Node.js (e.g. `fs`, `http`) are excluded."," *"," * @param {RuleContext} context - The rule context."," * @param {ASTNode} programNode - The node of Program."," * @param {boolean} includeCore - The flag to include core modules."," * @returns {ImportTarget[]} A list of found target's information."," */","module.exports = function getImportExportTargets(context, programNode, includeCore) {","    const retv = []","    const basedir = path.dirname(path.resolve(context.getFilename()))","    const extensions = getTryExtensions(context)","","    for (const statement of programNode.body) {","        // Skip if it's not a module declaration.","        if (!MODULE_TYPE.test(statement.type)) {","            continue","        }","","        // Gets the target module.","        const node = statement.source","        const name = node && stripImportPathParams(node.value)","        if (name && (includeCore || !resolve.isCore(name))) {","            retv.push(new ImportTarget(node, name, basedir, extensions))","        }","    }","","    return retv","}",""],"l":{"12":1,"13":1,"14":1,"15":1,"16":1,"22":1,"38":1,"39":0,"40":0,"41":0,"43":0,"45":0,"46":0,"50":0,"51":0,"52":0,"53":0,"57":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/no-missing-import.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/no-missing-import.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"create","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":25}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":22},"end":{"line":34,"column":29}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":57}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":60}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":75}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"5":{"start":{"line":27,"column":0},"end":{"line":42,"column":1}},"6":{"start":{"line":28,"column":4},"end":{"line":28,"column":42}},"7":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"8":{"start":{"line":30,"column":8},"end":{"line":30,"column":17}},"9":{"start":{"line":33,"column":4},"end":{"line":41,"column":5}},"10":{"start":{"line":35,"column":12},"end":{"line":39,"column":13}},"11":{"start":{"line":48,"column":0},"end":{"line":68,"column":1}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2015 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const checkExistence = require(\"../util/check-existence\")","const getAllowModules = require(\"../util/get-allow-modules\")","const getImportExportTargets = require(\"../util/get-import-export-targets\")","const getTryExtensions = require(\"../util/get-try-extensions\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","/**"," * The definition of this rule."," *"," * @param {RuleContext} context - The rule context to check."," * @returns {object} The definition of this rule."," */","function create(context) {","    const filePath = context.getFilename()","    if (filePath === \"<input>\") {","        return {}","    }","","    return {","        \"Program:exit\"(node) {","            checkExistence(","                context,","                filePath,","                getImportExportTargets(context, node)","            )","        },","    }","}","","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create,","    meta: {","        docs: {","            description: \"disallow import declarations for files that don't exist\",","            category: \"Possible Errors\",","            recommended: false,","        },","        fixable: false,","        schema: [","            {","                type: \"object\",","                properties: {","                    allowModules: getAllowModules.schema,","                    tryExtensions: getTryExtensions.schema,","                },","                additionalProperties: false,","            },","        ],","    },","}",""],"l":{"12":1,"13":1,"14":1,"15":1,"27":1,"28":0,"29":0,"30":0,"33":0,"35":0,"48":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/check-existence.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/check-existence.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"checkForExistence","line":33,"loc":{"start":{"line":33,"column":17},"end":{"line":33,"column":72}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":54}},"5":{"start":{"line":33,"column":0},"end":{"line":64,"column":1}},"6":{"start":{"line":34,"column":4},"end":{"line":34,"column":44}},"7":{"start":{"line":35,"column":4},"end":{"line":35,"column":64}},"8":{"start":{"line":37,"column":4},"end":{"line":63,"column":5}},"9":{"start":{"line":39,"column":8},"end":{"line":55,"column":9}},"10":{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},"11":{"start":{"line":41,"column":16},"end":{"line":41,"column":24}},"12":{"start":{"line":44,"column":13},"end":{"line":55,"column":9}},"13":{"start":{"line":45,"column":12},"end":{"line":45,"column":20}},"14":{"start":{"line":48,"column":12},"end":{"line":54,"column":13}},"15":{"start":{"line":49,"column":16},"end":{"line":49,"column":47}},"16":{"start":{"line":50,"column":16},"end":{"line":50,"column":24}},"17":{"start":{"line":57,"column":8},"end":{"line":62,"column":10}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":8}},{"start":{"line":39,"column":8},"end":{"line":39,"column":8}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":12},"end":{"line":40,"column":12}},{"start":{"line":40,"column":12},"end":{"line":40,"column":12}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":13},"end":{"line":44,"column":13}},{"start":{"line":44,"column":13},"end":{"line":44,"column":13}}]}},"code":["/**"," * @fileoverview Rule to check whether or not `require()` is valid."," * @author Toru Nagashima"," * @copyright 2015 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const path = require(\"path\")","const resolve = require(\"resolve\")","const exists = require(\"./exists\")","const getAllowModules = require(\"./get-allow-modules\")","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * Checks whether or not each requirement target exists."," *"," * It looks up the target according to the logic of Node.js."," * See Also: https://nodejs.org/api/modules.html"," *"," * @param {RuleContext} context - A context to report."," * @param {string} filePath - The current file path."," * @param {ImportTarget[]} targets - A list of target information to check."," * @returns {void}"," */","module.exports = function checkForExistence(context, filePath, targets) {","    const allowed = getAllowModules(context)","    const opts = {basedir: path.dirname(path.resolve(filePath))}","","    for (const target of targets) {","        // Workaround for https://github.com/substack/node-resolve/issues/78","        if (target.filePath) {","            if (exists(target.filePath)) {","                continue","            }","        }","        else if (allowed.indexOf(target.moduleName) !== -1) {","            continue","        }","        else {","            try {","                resolve.sync(target.name, opts)","                continue","            }","            catch (_err) {","                // ignore.","            }","        }","","        context.report({","            node: target.node,","            loc: target.node.loc,","            message: \"\\\"{{name}}\\\" is not found.\",","            data: target,","        })","    }","}",""],"l":{"13":1,"14":1,"15":1,"16":1,"33":1,"34":0,"35":0,"37":0,"39":0,"40":0,"41":0,"44":0,"45":0,"48":0,"49":0,"50":0,"57":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/get-allow-modules.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/get-allow-modules.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"get","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":21}}},"2":{"name":"getAllowModules","line":41,"loc":{"start":{"line":41,"column":17},"end":{"line":41,"column":51}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":39}},"2":{"start":{"line":20,"column":0},"end":{"line":25,"column":1}},"3":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"4":{"start":{"line":22,"column":8},"end":{"line":22,"column":46}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":15}},"6":{"start":{"line":41,"column":0},"end":{"line":47,"column":1}},"7":{"start":{"line":42,"column":4},"end":{"line":46,"column":5}},"8":{"start":{"line":49,"column":0},"end":{"line":56,"column":1}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":14}},{"start":{"line":21,"column":18},"end":{"line":21,"column":37}},{"start":{"line":21,"column":41},"end":{"line":21,"column":75}}]},"3":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":50}},{"start":{"line":44,"column":8},"end":{"line":44,"column":54}},{"start":{"line":45,"column":8},"end":{"line":45,"column":21}}]},"4":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":12},"end":{"line":43,"column":27}},{"start":{"line":43,"column":31},"end":{"line":43,"column":49}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":12},"end":{"line":44,"column":28}},{"start":{"line":44,"column":32},"end":{"line":44,"column":53}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","const DEFAULT_VALUE = Object.freeze([])","","/**"," * Gets `allowModules` property from a given option object."," *"," * @param {object|undefined} option - An option object to get."," * @returns {string[]|null} The `allowModules` value, or `null`."," */","function get(option) {","    if (option && option.allowModules && Array.isArray(option.allowModules)) {","        return option.allowModules.map(String)","    }","    return null","}","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * Gets \"allowModules\" setting."," *"," * 1. This checks `options` property, then returns it if exists."," * 2. This checks `settings.node` property, then returns it if exists."," * 3. This returns `[]`."," *"," * @param {RuleContext} context - The rule context."," * @returns {string[]} A list of extensions."," */","module.exports = function getAllowModules(context) {","    return (","        get(context.options && context.options[0]) ||","        get(context.settings && context.settings.node) ||","        DEFAULT_VALUE","    )","}","","module.exports.schema = {","    type: \"array\",","    items: {","        type: \"string\",","        pattern: \"^(?:@[a-zA-Z0-9_\\\\-.]+/)?[a-zA-Z0-9_\\\\-.]+$\",","    },","    uniqueItems: true,","}",""],"l":{"12":1,"20":1,"21":0,"22":0,"24":0,"41":1,"42":0,"49":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/no-missing-require.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/no-missing-require.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"create","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":25}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":22},"end":{"line":34,"column":25}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":57}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":60}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":64}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"5":{"start":{"line":27,"column":0},"end":{"line":42,"column":1}},"6":{"start":{"line":28,"column":4},"end":{"line":28,"column":42}},"7":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"8":{"start":{"line":30,"column":8},"end":{"line":30,"column":17}},"9":{"start":{"line":33,"column":4},"end":{"line":41,"column":5}},"10":{"start":{"line":35,"column":12},"end":{"line":39,"column":13}},"11":{"start":{"line":48,"column":0},"end":{"line":68,"column":1}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2015 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const checkExistence = require(\"../util/check-existence\")","const getAllowModules = require(\"../util/get-allow-modules\")","const getRequireTargets = require(\"../util/get-require-targets\")","const getTryExtensions = require(\"../util/get-try-extensions\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","/**"," * The definition of this rule."," *"," * @param {RuleContext} context - The rule context to check."," * @returns {object} The definition of this rule."," */","function create(context) {","    const filePath = context.getFilename()","    if (filePath === \"<input>\") {","        return {}","    }","","    return {","        \"Program:exit\"() {","            checkExistence(","                context,","                filePath,","                getRequireTargets(context)","            )","        },","    }","}","","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create,","    meta: {","        docs: {","            description: \"disallow `require()` expressions for files that don't exist\",","            category: \"Possible Errors\",","            recommended: false,","        },","        fixable: false,","        schema: [","            {","                type: \"object\",","                properties: {","                    allowModules: getAllowModules.schema,","                    tryExtensions: getTryExtensions.schema,","                },","                additionalProperties: false,","            },","        ],","    },","}",""],"l":{"12":1,"13":1,"14":1,"15":1,"27":1,"28":0,"29":0,"30":0,"33":0,"35":0,"48":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/no-unpublished-bin.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/no-unpublished-bin.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"isBinFile","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":48}}},"2":{"name":"create","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":25}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":15},"end":{"line":47,"column":22}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":28}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":58}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":58}},"5":{"start":{"line":29,"column":0},"end":{"line":37,"column":1}},"6":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"7":{"start":{"line":31,"column":8},"end":{"line":31,"column":20}},"8":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"9":{"start":{"line":34,"column":8},"end":{"line":34,"column":59}},"10":{"start":{"line":36,"column":4},"end":{"line":36,"column":95}},"11":{"start":{"line":36,"column":45},"end":{"line":36,"column":94}},"12":{"start":{"line":45,"column":0},"end":{"line":89,"column":1}},"13":{"start":{"line":46,"column":4},"end":{"line":88,"column":5}},"14":{"start":{"line":49,"column":12},"end":{"line":49,"column":51}},"15":{"start":{"line":50,"column":12},"end":{"line":52,"column":13}},"16":{"start":{"line":51,"column":16},"end":{"line":51,"column":22}},"17":{"start":{"line":53,"column":12},"end":{"line":53,"column":51}},"18":{"start":{"line":56,"column":12},"end":{"line":56,"column":49}},"19":{"start":{"line":57,"column":12},"end":{"line":59,"column":13}},"20":{"start":{"line":58,"column":16},"end":{"line":58,"column":22}},"21":{"start":{"line":62,"column":12},"end":{"line":62,"column":52}},"22":{"start":{"line":63,"column":12},"end":{"line":65,"column":13}},"23":{"start":{"line":66,"column":12},"end":{"line":66,"column":61}},"24":{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},"25":{"start":{"line":70,"column":16},"end":{"line":70,"column":22}},"26":{"start":{"line":74,"column":12},"end":{"line":74,"column":52}},"27":{"start":{"line":75,"column":12},"end":{"line":77,"column":13}},"28":{"start":{"line":76,"column":16},"end":{"line":76,"column":22}},"29":{"start":{"line":80,"column":12},"end":{"line":86,"column":14}},"30":{"start":{"line":95,"column":0},"end":{"line":113,"column":1}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"3":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":12}},{"start":{"line":50,"column":12},"end":{"line":50,"column":12}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":12}},{"start":{"line":57,"column":12},"end":{"line":57,"column":12}}]},"5":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":69,"column":12}},{"start":{"line":69,"column":12},"end":{"line":69,"column":12}}]},"6":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":12},"end":{"line":75,"column":12}},{"start":{"line":75,"column":12},"end":{"line":75,"column":12}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const path = require(\"path\")","const getConvertPath = require(\"../util/get-convert-path\")","const getNpmignore = require(\"../util/get-npmignore\")","const getPackageJson = require(\"../util/get-package-json\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","/**"," * Checks whether or not a given path is a `bin` file."," *"," * @param {string} filePath - A file path to check."," * @param {string|object|undefined} binField - A value of the `bin` field of `package.json`."," * @param {string} basedir - A directory path that `package.json` exists."," * @returns {boolean} `true` if the file is a `bin` file."," */","function isBinFile(filePath, binField, basedir) {","    if (!binField) {","        return false","    }","    if (typeof binField === \"string\") {","        return filePath === path.resolve(basedir, binField)","    }","    return Object.keys(binField).some(key => filePath === path.resolve(basedir, binField[key]))","}","","/**"," * The definition of this rule."," *"," * @param {RuleContext} context - The rule context to check."," * @returns {object} The definition of this rule."," */","function create(context) {","    return {","        Program(node) {","            // Check file path.","            let rawFilePath = context.getFilename()","            if (rawFilePath === \"<input>\") {","                return","            }","            rawFilePath = path.resolve(rawFilePath)","","            // Find package.json","            const p = getPackageJson(rawFilePath)","            if (!p) {","                return","            }","","            // Convert by convertPath option","            const basedir = path.dirname(p.filePath)","            const relativePath = getConvertPath(context)(","                path.relative(basedir, rawFilePath).replace(/\\\\/g, \"/\")","            )","            const filePath = path.join(basedir, relativePath)","","            // Check this file is bin.","            if (!isBinFile(filePath, p.bin, basedir)) {","                return","            }","","            // Check ignored or not","            const npmignore = getNpmignore(filePath)","            if (!npmignore.match(relativePath)) {","                return","            }","","            // Report.","            context.report({","                node,","                message:","                    \"npm ignores '{{name}}'. \" +","                    \"Check 'files' field of 'package.json' or '.npmignore'.\",","                data: {name: relativePath},","            })","        },","    }","}","","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create,","    meta: {","        docs: {","            description: \"disallow 'bin' files that npm ignores\",","            category: \"Possible Errors\",","            recommended: false,","        },","        fixable: false,","        schema: [","            {","                type: \"object\",","                properties: { //","                    convertPath: getConvertPath.schema,","                },","            },","        ],","    },","}",""],"l":{"12":1,"13":1,"14":1,"15":1,"29":1,"30":0,"31":0,"33":0,"34":0,"36":0,"45":1,"46":0,"49":0,"50":0,"51":0,"53":0,"56":0,"57":0,"58":0,"62":0,"63":0,"66":0,"69":0,"70":0,"74":0,"75":0,"76":0,"80":0,"95":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/get-convert-path.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/get-convert-path.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"identity","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":21}}},"2":{"name":"normalizeValue","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":27}}},"3":{"name":"toStringArray","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":26}}},"4":{"name":"createMatch","line":64,"loc":{"start":{"line":64,"column":0},"end":{"line":64,"column":55}}},"5":{"name":"defineConvert","line":80,"loc":{"start":{"line":80,"column":0},"end":{"line":80,"column":42}}},"6":{"name":"combine","line":92,"loc":{"start":{"line":92,"column":0},"end":{"line":92,"column":29}}},"7":{"name":"parse","line":109,"loc":{"start":{"line":109,"column":0},"end":{"line":109,"column":23}}},"8":{"name":"getConvertPath","line":147,"loc":{"start":{"line":147,"column":17},"end":{"line":147,"column":50}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":48}},"2":{"start":{"line":22,"column":0},"end":{"line":24,"column":1}},"3":{"start":{"line":23,"column":4},"end":{"line":23,"column":12}},"4":{"start":{"line":32,"column":0},"end":{"line":42,"column":1}},"5":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"6":{"start":{"line":34,"column":8},"end":{"line":34,"column":16}},"7":{"start":{"line":37,"column":4},"end":{"line":41,"column":7}},"8":{"start":{"line":37,"column":42},"end":{"line":41,"column":5}},"9":{"start":{"line":50,"column":0},"end":{"line":55,"column":1}},"10":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"11":{"start":{"line":52,"column":8},"end":{"line":52,"column":28}},"12":{"start":{"line":54,"column":4},"end":{"line":54,"column":13}},"13":{"start":{"line":64,"column":0},"end":{"line":71,"column":1}},"14":{"start":{"line":65,"column":4},"end":{"line":65,"column":74}},"15":{"start":{"line":65,"column":51},"end":{"line":65,"column":73}},"16":{"start":{"line":66,"column":4},"end":{"line":66,"column":74}},"17":{"start":{"line":66,"column":51},"end":{"line":66,"column":73}},"18":{"start":{"line":68,"column":4},"end":{"line":70,"column":45}},"19":{"start":{"line":69,"column":8},"end":{"line":70,"column":45}},"20":{"start":{"line":69,"column":26},"end":{"line":69,"column":43}},"21":{"start":{"line":70,"column":27},"end":{"line":70,"column":44}},"22":{"start":{"line":80,"column":0},"end":{"line":83,"column":1}},"23":{"start":{"line":81,"column":4},"end":{"line":82,"column":43}},"24":{"start":{"line":82,"column":8},"end":{"line":82,"column":43}},"25":{"start":{"line":92,"column":0},"end":{"line":101,"column":1}},"26":{"start":{"line":93,"column":4},"end":{"line":100,"column":5}},"27":{"start":{"line":94,"column":8},"end":{"line":98,"column":9}},"28":{"start":{"line":95,"column":12},"end":{"line":97,"column":13}},"29":{"start":{"line":96,"column":16},"end":{"line":96,"column":50}},"30":{"start":{"line":99,"column":8},"end":{"line":99,"column":23}},"31":{"start":{"line":109,"column":0},"end":{"line":131,"column":1}},"32":{"start":{"line":110,"column":4},"end":{"line":115,"column":5}},"33":{"start":{"line":114,"column":8},"end":{"line":114,"column":19}},"34":{"start":{"line":117,"column":4},"end":{"line":117,"column":25}},"35":{"start":{"line":118,"column":4},"end":{"line":128,"column":5}},"36":{"start":{"line":119,"column":8},"end":{"line":119,"column":54}},"37":{"start":{"line":120,"column":8},"end":{"line":120,"column":54}},"38":{"start":{"line":121,"column":8},"end":{"line":121,"column":65}},"39":{"start":{"line":122,"column":8},"end":{"line":122,"column":48}},"40":{"start":{"line":124,"column":8},"end":{"line":127,"column":10}},"41":{"start":{"line":130,"column":4},"end":{"line":130,"column":30}},"42":{"start":{"line":147,"column":0},"end":{"line":153,"column":1}},"43":{"start":{"line":148,"column":4},"end":{"line":152,"column":5}},"44":{"start":{"line":158,"column":0},"end":{"line":202,"column":1}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"2":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"3":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":44}},{"start":{"line":70,"column":8},"end":{"line":70,"column":45}}]},"4":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":12},"end":{"line":95,"column":12}},{"start":{"line":95,"column":12},"end":{"line":95,"column":12}}]},"5":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":110,"column":4}},{"start":{"line":110,"column":4},"end":{"line":110,"column":4}}]},"6":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":8},"end":{"line":110,"column":15}},{"start":{"line":111,"column":8},"end":{"line":111,"column":27}},{"start":{"line":112,"column":8},"end":{"line":112,"column":46}}]},"7":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":8},"end":{"line":149,"column":52}},{"start":{"line":150,"column":8},"end":{"line":150,"column":56}},{"start":{"line":151,"column":8},"end":{"line":151,"column":16}}]},"8":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":14},"end":{"line":149,"column":29}},{"start":{"line":149,"column":33},"end":{"line":149,"column":51}}]},"9":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":14},"end":{"line":150,"column":30}},{"start":{"line":150,"column":34},"end":{"line":150,"column":55}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const Minimatch = require(\"minimatch\").Minimatch","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","/**"," * @param {any} x - An any value."," * @returns {any} Always `x`."," */","function identity(x) {","    return x","}","","/**"," * Converts old-style value to new-style value."," *"," * @param {any} x - The value to convert."," * @returns {({include: string[], exclude: string[], replace: string[]})[]} Normalized value."," */","function normalizeValue(x) {","    if (Array.isArray(x)) {","        return x","    }","","    return Object.keys(x).map(pattern => ({","        include: [pattern],","        exclude: [],","        replace: x[pattern],","    }))","}","","/**"," * Ensures the given value is a string array."," *"," * @param {any} x - The value to ensure."," * @returns {string[]} The string array."," */","function toStringArray(x) {","    if (Array.isArray(x)) {","        return x.map(String)","    }","    return []","}","","/**"," * Creates the function which checks whether a file path is matched with the given pattern or not."," *"," * @param {string[]} includePatterns - The glob patterns to include files."," * @param {string[]} excludePatterns - The glob patterns to exclude files."," * @returns {function} Created predicate function."," */","function createMatch(includePatterns, excludePatterns) {","    const include = includePatterns.map(pattern => new Minimatch(pattern))","    const exclude = excludePatterns.map(pattern => new Minimatch(pattern))","","    return (filePath) =>","        include.some(m => m.match(filePath)) &&","        !exclude.some(m => m.match(filePath))","}","","/**"," * Creates a function which replaces a given path."," *"," * @param {RegExp} fromRegexp - A `RegExp` object to replace."," * @param {string} toStr - A new string to replace."," * @returns {function} A function which replaces a given path."," */","function defineConvert(fromRegexp, toStr) {","    return (filePath) =>","        filePath.replace(fromRegexp, toStr)","}","","/**"," * Combines given converters."," * The result function converts a given path with the first matched converter."," *"," * @param {{match: function, convert: function}} converters - A list of converters to combine."," * @returns {function} A function which replaces a given path."," */","function combine(converters) {","    return (filePath) => {","        for (const converter of converters) {","            if (converter.match(filePath)) {","                return converter.convert(filePath)","            }","        }","        return filePath","    }","}","","/**"," * Parses `convertPath` property from a given option object."," *"," * @param {object|undefined} option - An option object to get."," * @returns {function|null} A function which converts a path., or `null`."," */","function parse(option) {","    if (!option ||","        !option.convertPath ||","        typeof option.convertPath !== \"object\"","    ) {","        return null","    }","","    const converters = []","    for (const pattern of normalizeValue(option.convertPath)) {","        const include = toStringArray(pattern.include)","        const exclude = toStringArray(pattern.exclude)","        const fromRegexp = new RegExp(String(pattern.replace[0]))","        const toStr = String(pattern.replace[1])","","        converters.push({","            match: createMatch(include, exclude),","            convert: defineConvert(fromRegexp, toStr),","        })","    }","","    return combine(converters)","}","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * Gets \"convertPath\" setting."," *"," * 1. This checks `options` property, then returns it if exists."," * 2. This checks `settings.node` property, then returns it if exists."," * 3. This returns a function of identity."," *"," * @param {RuleContext} context - The rule context."," * @returns {function} A function which converts a path."," */","module.exports = function getConvertPath(context) {","    return (","        parse(context.options && context.options[0]) ||","        parse(context.settings && context.settings.node) ||","        identity","    )","}","","/**"," * JSON Schema for `convertPath` option."," */","module.exports.schema = {","    anyOf: [","        {","            type: \"object\",","            properties: {},","            patternProperties: {","                \"^.+$\": {","                    type: \"array\",","                    items: {type: \"string\"},","                    minItems: 2,","                    maxItems: 2,","                },","            },","            additionalProperties: false,","        },","        {","            type: \"array\",","            items: {","                type: \"object\",","                properties: {","                    include: {","                        type: \"array\",","                        items: {type: \"string\"},","                        minItems: 1,","                        uniqueItems: true,","                    },","                    exclude: {","                        type: \"array\",","                        items: {type: \"string\"},","                        uniqueItems: true,","                    },","                    replace: {","                        type: \"array\",","                        items: {type: \"string\"},","                        minItems: 2,","                        maxItems: 2,","                    },","                },","                additionalProperties: false,","                required: [\"include\", \"replace\"],","            },","            minItems: 1,","        },","    ],","}",""],"l":{"12":1,"22":1,"23":0,"32":1,"33":0,"34":0,"37":0,"50":1,"51":0,"52":0,"54":0,"64":1,"65":0,"66":0,"68":0,"69":0,"70":0,"80":1,"81":0,"82":0,"92":1,"93":0,"94":0,"95":0,"96":0,"99":0,"109":1,"110":0,"114":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"124":0,"130":0,"147":1,"148":0,"158":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/get-npmignore.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/get-npmignore.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":1,"14":0,"15":0,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0},"b":{"1":[0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"notAncestorFiles","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}}},"2":{"name":"and","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":19}}},"3":{"name":"or","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":21}}},"4":{"name":"not","line":63,"loc":{"start":{"line":63,"column":0},"end":{"line":63,"column":16}}},"5":{"name":"filterNeverIgnoredFiles","line":73,"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":36}}},"6":{"name":"parseWhiteList","line":90,"loc":{"start":{"line":90,"column":0},"end":{"line":90,"column":31}}},"7":{"name":"parseNpmignore","line":116,"loc":{"start":{"line":116,"column":0},"end":{"line":116,"column":51}}},"8":{"name":"getNpmignore","line":151,"loc":{"start":{"line":151,"column":17},"end":{"line":151,"column":50}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":24}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":32}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":32}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":34}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":52}},"7":{"start":{"line":23,"column":0},"end":{"line":23,"column":25}},"8":{"start":{"line":24,"column":0},"end":{"line":24,"column":43}},"9":{"start":{"line":25,"column":0},"end":{"line":25,"column":36}},"10":{"start":{"line":26,"column":0},"end":{"line":26,"column":97}},"11":{"start":{"line":36,"column":0},"end":{"line":38,"column":1}},"12":{"start":{"line":37,"column":4},"end":{"line":37,"column":46}},"13":{"start":{"line":45,"column":0},"end":{"line":47,"column":1}},"14":{"start":{"line":46,"column":4},"end":{"line":46,"column":51}},"15":{"start":{"line":46,"column":25},"end":{"line":46,"column":51}},"16":{"start":{"line":55,"column":0},"end":{"line":57,"column":1}},"17":{"start":{"line":56,"column":4},"end":{"line":56,"column":73}},"18":{"start":{"line":56,"column":25},"end":{"line":56,"column":73}},"19":{"start":{"line":63,"column":0},"end":{"line":65,"column":1}},"20":{"start":{"line":64,"column":4},"end":{"line":64,"column":37}},"21":{"start":{"line":64,"column":25},"end":{"line":64,"column":37}},"22":{"start":{"line":73,"column":0},"end":{"line":82,"column":1}},"23":{"start":{"line":74,"column":4},"end":{"line":74,"column":44}},"24":{"start":{"line":75,"column":4},"end":{"line":75,"column":89}},"25":{"start":{"line":77,"column":4},"end":{"line":81,"column":5}},"26":{"start":{"line":78,"column":8},"end":{"line":80,"column":61}},"27":{"start":{"line":90,"column":0},"end":{"line":107,"column":1}},"28":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"29":{"start":{"line":92,"column":8},"end":{"line":92,"column":19}},"30":{"start":{"line":95,"column":4},"end":{"line":95,"column":23}},"31":{"start":{"line":96,"column":4},"end":{"line":96,"column":15}},"32":{"start":{"line":98,"column":4},"end":{"line":104,"column":5}},"33":{"start":{"line":99,"column":8},"end":{"line":103,"column":9}},"34":{"start":{"line":100,"column":12},"end":{"line":100,"column":73}},"35":{"start":{"line":101,"column":12},"end":{"line":101,"column":36}},"36":{"start":{"line":102,"column":12},"end":{"line":102,"column":39}},"37":{"start":{"line":106,"column":4},"end":{"line":106,"column":33}},"38":{"start":{"line":116,"column":0},"end":{"line":132,"column":1}},"39":{"start":{"line":117,"column":4},"end":{"line":117,"column":51}},"40":{"start":{"line":118,"column":4},"end":{"line":127,"column":5}},"41":{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},"42":{"start":{"line":120,"column":12},"end":{"line":120,"column":23}},"43":{"start":{"line":123,"column":8},"end":{"line":123,"column":51}},"44":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"45":{"start":{"line":125,"column":12},"end":{"line":125,"column":23}},"46":{"start":{"line":129,"column":4},"end":{"line":129,"column":23}},"47":{"start":{"line":130,"column":4},"end":{"line":130,"column":45}},"48":{"start":{"line":131,"column":4},"end":{"line":131,"column":33}},"49":{"start":{"line":151,"column":0},"end":{"line":178,"column":1}},"50":{"start":{"line":152,"column":4},"end":{"line":152,"column":42}},"51":{"start":{"line":154,"column":4},"end":{"line":154,"column":39}},"52":{"start":{"line":155,"column":4},"end":{"line":175,"column":5}},"53":{"start":{"line":156,"column":8},"end":{"line":156,"column":42}},"54":{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},"55":{"start":{"line":158,"column":12},"end":{"line":158,"column":23}},"56":{"start":{"line":161,"column":8},"end":{"line":161,"column":51}},"57":{"start":{"line":162,"column":8},"end":{"line":162,"column":94}},"58":{"start":{"line":164,"column":8},"end":{"line":172,"column":9}},"59":{"start":{"line":165,"column":12},"end":{"line":165,"column":108}},"60":{"start":{"line":167,"column":13},"end":{"line":172,"column":9}},"61":{"start":{"line":168,"column":12},"end":{"line":168,"column":91}},"62":{"start":{"line":170,"column":13},"end":{"line":172,"column":9}},"63":{"start":{"line":171,"column":12},"end":{"line":171,"column":95}},"64":{"start":{"line":174,"column":8},"end":{"line":174,"column":35}},"65":{"start":{"line":177,"column":4},"end":{"line":177,"column":15}}},"branchMap":{"1":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":25},"end":{"line":46,"column":36}},{"start":{"line":46,"column":40},"end":{"line":46,"column":51}}]},"2":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":25},"end":{"line":56,"column":36}},{"start":{"line":56,"column":40},"end":{"line":56,"column":51}},{"start":{"line":56,"column":56},"end":{"line":56,"column":57}},{"start":{"line":56,"column":61},"end":{"line":56,"column":72}}]},"3":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":56},"end":{"line":75,"column":82}},{"start":{"line":75,"column":85},"end":{"line":75,"column":89}}]},"4":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":8},"end":{"line":78,"column":53}},{"start":{"line":79,"column":8},"end":{"line":79,"column":35}},{"start":{"line":80,"column":8},"end":{"line":80,"column":61}}]},"5":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"6":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":8},"end":{"line":91,"column":14}},{"start":{"line":91,"column":18},"end":{"line":91,"column":39}}]},"7":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":8},"end":{"line":99,"column":8}},{"start":{"line":99,"column":8},"end":{"line":99,"column":8}}]},"8":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"9":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":8},"end":{"line":119,"column":8}},{"start":{"line":119,"column":8},"end":{"line":119,"column":8}}]},"10":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":124,"column":8}},{"start":{"line":124,"column":8},"end":{"line":124,"column":8}}]},"11":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":4},"end":{"line":155,"column":4}},{"start":{"line":155,"column":4},"end":{"line":155,"column":4}}]},"12":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":157,"column":8}},{"start":{"line":157,"column":8},"end":{"line":157,"column":8}}]},"13":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":8},"end":{"line":164,"column":8}},{"start":{"line":164,"column":8},"end":{"line":164,"column":8}}]},"14":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":12},"end":{"line":164,"column":23}},{"start":{"line":164,"column":27},"end":{"line":164,"column":42}}]},"15":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":13},"end":{"line":167,"column":13}},{"start":{"line":167,"column":13},"end":{"line":167,"column":13}}]},"16":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":13},"end":{"line":170,"column":13}},{"start":{"line":170,"column":13},"end":{"line":170,"column":13}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const fs = require(\"fs\")","const path = require(\"path\")","const ignore = require(\"ignore\")","const Cache = require(\"./cache\")","const exists = require(\"./exists\")","const getPackageJson = require(\"./get-package-json\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","const cache = new Cache()","const SLASH_AT_BEGIN_END = /(?:^\\/+|\\/+$)/g","const PARENT_RELATIVE_PATH = /^\\.\\./","const NEVER_IGNORED = /^(?:readme\\.[^.]*|(?:licen[cs]e|changes|changelog|history)(?:\\.[^.]*)?)$/i","","/**"," * Checks whether or not a given file name is a relative path to a ancestor"," * directory."," *"," * @param {string} filePath - A file name to check."," * @returns {boolean} `true` if the file name is a relative path to a ancestor"," *      directory."," */","function notAncestorFiles(filePath) {","    return PARENT_RELATIVE_PATH.test(filePath)","}","","/**"," * @param {function} f - A function."," * @param {function} g - A function."," * @returns {function} A logical-and function of `f` and `g`."," */","function and(f, g) {","    return (filePath) => f(filePath) && g(filePath)","}","","/**"," * @param {function} f - A function."," * @param {function} g - A function."," * @param {function|null} h - A function."," * @returns {function} A logical-or function of `f`, `g`, and `h`."," */","function or(f, g, h) {","    return (filePath) => f(filePath) || g(filePath) || (h && h(filePath))","}","","/**"," * @param {function} f - A function."," * @returns {function} A logical-not function of `f`."," */","function not(f) {","    return (filePath) => !f(filePath)","}","","/**"," * Creates a function which checks whether or not a given file is ignoreable."," *"," * @param {object} p - An object of package.json."," * @returns {function} A function which checks whether or not a given file is ignoreable."," */","function filterNeverIgnoredFiles(p) {","    const basedir = path.dirname(p.filePath)","    const mainFilePath = (typeof p.main === \"string\") ? path.join(basedir, p.main) : null","","    return (filePath) => (","        path.join(basedir, filePath) !== mainFilePath &&","        filePath !== \"package.json\" &&","        !NEVER_IGNORED.test(path.relative(basedir, filePath))","    )","}","","/**"," * Creates a function which checks whether or not a given file should be ignored."," *"," * @param {string[]|null} files - File names of whitelist."," * @returns {function|null} A function which checks whether or not a given file should be ignored."," */","function parseWhiteList(files) {","    if (!files || !Array.isArray(files)) {","        return null","    }","","    const ig = ignore()","    ig.add(\"*\")","","    for (const file of files) {","        if (typeof file === \"string\") {","            const normalized = `/${file.replace(SLASH_AT_BEGIN_END, \"\")}`","            ig.add(`!${normalized}`)","            ig.add(`!${normalized}/**`)","        }","    }","","    return not(ig.createFilter())","}","","/**"," * Creates a function which checks whether or not a given file should be ignored."," *"," * @param {string} basedir - The directory path \"package.json\" exists."," * @param {boolean} filesFieldExists - `true` if `files` field of `package.json` exists."," * @returns {function|null} A function which checks whether or not a given file should be ignored."," */","function parseNpmignore(basedir, filesFieldExists) {","    let filePath = path.join(basedir, \".npmignore\")","    if (!exists(filePath)) {","        if (filesFieldExists) {","            return null","        }","","        filePath = path.join(basedir, \".gitignore\")","        if (!exists(filePath)) {","            return null","        }","    }","","    const ig = ignore()","    ig.add(fs.readFileSync(filePath, \"utf8\"))","    return not(ig.createFilter())","}","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * Gets an object to check whther or not a given path should be ignored."," * The object is created from:"," *"," * - `files` field of `package.json`"," * - `.npmignore`"," *"," * @param {string} startPath - A file path to lookup."," * @returns {object}"," *      An object to check whther or not a given path should be ignored."," *      The object has a method `match`."," *      `match` returns `true` if a given file path should be ignored."," */","module.exports = function getNpmignore(startPath) {","    const retv = {match: notAncestorFiles}","","    const p = getPackageJson(startPath)","    if (p) {","        const data = cache.get(p.filePath)","        if (data) {","            return data","        }","","        const filesIgnore = parseWhiteList(p.files)","        const npmignoreIgnore = parseNpmignore(path.dirname(p.filePath), Boolean(filesIgnore))","","        if (filesIgnore && npmignoreIgnore) {","            retv.match = and(filterNeverIgnoredFiles(p), or(notAncestorFiles, filesIgnore, npmignoreIgnore))","        }","        else if (filesIgnore) {","            retv.match = and(filterNeverIgnoredFiles(p), or(notAncestorFiles, filesIgnore))","        }","        else if (npmignoreIgnore) {","            retv.match = and(filterNeverIgnoredFiles(p), or(notAncestorFiles, npmignoreIgnore))","        }","","        cache.put(p.filePath, retv)","    }","","    return retv","}",""],"l":{"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"23":1,"24":1,"25":1,"26":1,"36":1,"37":0,"45":1,"46":0,"55":1,"56":0,"63":1,"64":0,"73":1,"74":0,"75":0,"77":0,"78":0,"90":1,"91":0,"92":0,"95":0,"96":0,"98":0,"99":0,"100":0,"101":0,"102":0,"106":0,"116":1,"117":0,"118":0,"119":0,"120":0,"123":0,"124":0,"125":0,"129":0,"130":0,"131":0,"151":1,"152":0,"154":0,"155":0,"156":0,"157":0,"158":0,"161":0,"162":0,"164":0,"165":0,"167":0,"168":0,"170":0,"171":0,"174":0,"177":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/no-unpublished-import.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/no-unpublished-import.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"create","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":25}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":22},"end":{"line":35,"column":29}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":53}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":60}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":58}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":75}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"6":{"start":{"line":28,"column":0},"end":{"line":43,"column":1}},"7":{"start":{"line":29,"column":4},"end":{"line":29,"column":42}},"8":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"9":{"start":{"line":31,"column":8},"end":{"line":31,"column":17}},"10":{"start":{"line":34,"column":4},"end":{"line":42,"column":5}},"11":{"start":{"line":36,"column":12},"end":{"line":40,"column":13}},"12":{"start":{"line":49,"column":0},"end":{"line":70,"column":1}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const checkPublish = require(\"../util/check-publish\")","const getAllowModules = require(\"../util/get-allow-modules\")","const getConvertPath = require(\"../util/get-convert-path\")","const getImportExportTargets = require(\"../util/get-import-export-targets\")","const getTryExtensions = require(\"../util/get-try-extensions\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","/**"," * The definition of this rule."," *"," * @param {RuleContext} context - The rule context to check."," * @returns {object} The definition of this rule."," */","function create(context) {","    const filePath = context.getFilename()","    if (filePath === \"<input>\") {","        return {}","    }","","    return {","        \"Program:exit\"(node) {","            checkPublish(","                context,","                filePath,","                getImportExportTargets(context, node)","            )","        },","    }","}","","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create,","    meta: {","        docs: {","            description: \"disallow import declarations for files that npm ignores\",","            category: \"Possible Errors\",","            recommended: false,","        },","        fixable: false,","        schema: [","            {","                type: \"object\",","                properties: {","                    allowModules: getAllowModules.schema,","                    convertPath: getConvertPath.schema,","                    tryExtensions: getTryExtensions.schema,","                },","                additionalProperties: false,","            },","        ],","    },","}",""],"l":{"12":1,"13":1,"14":1,"15":1,"16":1,"28":1,"29":0,"30":0,"31":0,"34":0,"36":0,"49":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/check-publish.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/check-publish.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"checkForPublish","line":34,"loc":{"start":{"line":34,"column":17},"end":{"line":34,"column":70}}},"2":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":43,"column":23},"end":{"line":43,"column":42}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":39}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":54}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":52}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":47}},"6":{"start":{"line":18,"column":0},"end":{"line":18,"column":52}},"7":{"start":{"line":34,"column":0},"end":{"line":97,"column":1}},"8":{"start":{"line":35,"column":4},"end":{"line":35,"column":48}},"9":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"10":{"start":{"line":37,"column":8},"end":{"line":37,"column":14}},"11":{"start":{"line":40,"column":4},"end":{"line":40,"column":44}},"12":{"start":{"line":41,"column":4},"end":{"line":41,"column":47}},"13":{"start":{"line":42,"column":4},"end":{"line":42,"column":54}},"14":{"start":{"line":43,"column":4},"end":{"line":46,"column":5}},"15":{"start":{"line":44,"column":8},"end":{"line":44,"column":73}},"16":{"start":{"line":45,"column":8},"end":{"line":45,"column":32}},"17":{"start":{"line":47,"column":4},"end":{"line":47,"column":44}},"18":{"start":{"line":48,"column":4},"end":{"line":52,"column":5}},"19":{"start":{"line":53,"column":4},"end":{"line":56,"column":5}},"20":{"start":{"line":57,"column":4},"end":{"line":57,"column":13}},"21":{"start":{"line":58,"column":4},"end":{"line":58,"column":21}},"22":{"start":{"line":60,"column":4},"end":{"line":96,"column":5}},"23":{"start":{"line":62,"column":8},"end":{"line":77,"column":9}},"24":{"start":{"line":63,"column":12},"end":{"line":63,"column":31}},"25":{"start":{"line":65,"column":12},"end":{"line":76,"column":13}},"26":{"start":{"line":70,"column":16},"end":{"line":75,"column":18}},"27":{"start":{"line":81,"column":8},"end":{"line":95,"column":9}},"28":{"start":{"line":82,"column":12},"end":{"line":82,"column":31}},"29":{"start":{"line":84,"column":12},"end":{"line":94,"column":13}},"30":{"start":{"line":88,"column":16},"end":{"line":93,"column":18}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"2":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":36}},{"start":{"line":50,"column":40},"end":{"line":50,"column":42}}]},"3":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":32}},{"start":{"line":51,"column":36},"end":{"line":51,"column":38}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},{"start":{"line":55,"column":39},"end":{"line":55,"column":41}}]},"5":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"6":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":12},"end":{"line":65,"column":12}},{"start":{"line":65,"column":12},"end":{"line":65,"column":12}}]},"7":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":16},"end":{"line":65,"column":33}},{"start":{"line":66,"column":16},"end":{"line":66,"column":48}},{"start":{"line":67,"column":16},"end":{"line":67,"column":51}},{"start":{"line":68,"column":16},"end":{"line":68,"column":57}}]},"8":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":12},"end":{"line":84,"column":12}},{"start":{"line":84,"column":12},"end":{"line":84,"column":12}}]},"9":{"line":84,"type":"cond-expr","locations":[{"start":{"line":85,"column":17},"end":{"line":85,"column":94}},{"start":{"line":86,"column":16},"end":{"line":86,"column":60}}]},"10":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":17},"end":{"line":85,"column":49}},{"start":{"line":85,"column":53},"end":{"line":85,"column":94}}]},"11":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":33},"end":{"line":92,"column":50}},{"start":{"line":92,"column":54},"end":{"line":92,"column":65}}]}},"code":["/**"," * @fileoverview Rule to check whether or not `require()` is valid."," * @author Toru Nagashima"," * @copyright 2015 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const path = require(\"path\")","const assign = require(\"object-assign\")","const getAllowModules = require(\"./get-allow-modules\")","const getConvertPath = require(\"./get-convert-path\")","const getNpmignore = require(\"./get-npmignore\")","const getPackageJson = require(\"./get-package-json\")","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * Checks whether or not each requirement target is published via package.json."," *"," * It reads package.json and checks the target exists in `dependencies`."," *"," * @param {RuleContext} context - A context to report."," * @param {string} filePath - The current file path."," * @param {ImportTarget[]} targets - A list of target information to check."," * @returns {void}"," */","module.exports = function checkForPublish(context, filePath, targets) {","    const packageInfo = getPackageJson(filePath)","    if (!packageInfo) {","        return","    }","","    const allowed = getAllowModules(context)","    const convertPath = getConvertPath(context)","    const basedir = path.dirname(packageInfo.filePath)","    const toRelative = function(fullPath) { // eslint-disable-line func-style","        const retv = path.relative(basedir, fullPath).replace(/\\\\/g, \"/\")","        return convertPath(retv)","    }","    const npmignore = getNpmignore(filePath)","    const dependencies = assign(","        Object.create(null),","        packageInfo.peerDependencies || {},","        packageInfo.dependencies || {}","    )","    const devDependencies = assign(","        Object.create(null),","        packageInfo.devDependencies || {}","    )","    let i = 0","    let target = null","","    if (npmignore.match(toRelative(filePath))) {","        // This file is private, so this can import private files.","        for (i = 0; i < targets.length; ++i) {","            target = targets[i]","","            if (target.moduleName &&","                !dependencies[target.moduleName] &&","                !devDependencies[target.moduleName] &&","                allowed.indexOf(target.moduleName) === -1","            ) {","                context.report({","                    node: target.node,","                    loc: target.node.loc,","                    message: \"\\\"{{name}}\\\" is not published.\",","                    data: {name: target.moduleName},","                })","            }","        }","    }","    else {","        // This file is published, so this cannot import private files.","        for (i = 0; i < targets.length; ++i) {","            target = targets[i]","","            if (target.moduleName ?","                (!dependencies[target.moduleName] && allowed.indexOf(target.moduleName) === -1) :","                npmignore.match(toRelative(target.filePath))","            ) {","                context.report({","                    node: target.node,","                    loc: target.node.loc,","                    message: \"\\\"{{name}}\\\" is not published.\",","                    data: {name: target.moduleName || target.name},","                })","            }","        }","    }","}",""],"l":{"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"34":1,"35":0,"36":0,"37":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"47":0,"48":0,"53":0,"57":0,"58":0,"60":0,"62":0,"63":0,"65":0,"70":0,"81":0,"82":0,"84":0,"88":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/no-unpublished-require.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/no-unpublished-require.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"create","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":25}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":22},"end":{"line":35,"column":25}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":53}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":60}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":58}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":64}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"6":{"start":{"line":28,"column":0},"end":{"line":43,"column":1}},"7":{"start":{"line":29,"column":4},"end":{"line":29,"column":42}},"8":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"9":{"start":{"line":31,"column":8},"end":{"line":31,"column":17}},"10":{"start":{"line":34,"column":4},"end":{"line":42,"column":5}},"11":{"start":{"line":36,"column":12},"end":{"line":40,"column":13}},"12":{"start":{"line":49,"column":0},"end":{"line":70,"column":1}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const checkPublish = require(\"../util/check-publish\")","const getAllowModules = require(\"../util/get-allow-modules\")","const getConvertPath = require(\"../util/get-convert-path\")","const getRequireTargets = require(\"../util/get-require-targets\")","const getTryExtensions = require(\"../util/get-try-extensions\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","/**"," * The definition of this rule."," *"," * @param {RuleContext} context - The rule context to check."," * @returns {object} The definition of this rule."," */","function create(context) {","    const filePath = context.getFilename()","    if (filePath === \"<input>\") {","        return {}","    }","","    return {","        \"Program:exit\"() {","            checkPublish(","                context,","                filePath,","                getRequireTargets(context)","            )","        },","    }","}","","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create,","    meta: {","        docs: {","            description: \"disallow `require()` expressions for files that npm ignores\",","            category: \"Possible Errors\",","            recommended: false,","        },","        fixable: false,","        schema: [","            {","                type: \"object\",","                properties: {","                    allowModules: getAllowModules.schema,","                    convertPath: getConvertPath.schema,","                    tryExtensions: getTryExtensions.schema,","                },","                additionalProperties: false,","            },","        ],","    },","}",""],"l":{"12":1,"13":1,"14":1,"15":1,"16":1,"28":1,"29":0,"30":0,"31":0,"34":0,"36":0,"49":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/no-unsupported-features.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/no-unsupported-features.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":1,"40":98,"41":229,"42":98,"43":98,"44":1,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":1,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":1,"98":0,"99":1,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0,0,0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0,0,0],"77":[0,0],"78":[0,0]},"f":{"1":0,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0},"fnMap":{"1":{"name":"parseVersion","line":68,"loc":{"start":{"line":68,"column":0},"end":{"line":68,"column":34}}},"2":{"name":"getDefaultVersion","line":87,"loc":{"start":{"line":87,"column":0},"end":{"line":87,"column":37}}},"3":{"name":"getIgnoresEnum","line":122,"loc":{"start":{"line":122,"column":0},"end":{"line":122,"column":26}}},"4":{"name":"isIgnored","line":142,"loc":{"start":{"line":142,"column":0},"end":{"line":142,"column":33}}},"5":{"name":"parseOptions","line":156,"loc":{"start":{"line":156,"column":0},"end":{"line":156,"column":47}}},"6":{"name":"checkSpecialLexicalEnvironment","line":218,"loc":{"start":{"line":218,"column":0},"end":{"line":218,"column":49}}},"7":{"name":"getIdentifierName","line":233,"loc":{"start":{"line":233,"column":0},"end":{"line":233,"column":33}}},"8":{"name":"hasUnicodeCodePointEscape","line":243,"loc":{"start":{"line":243,"column":0},"end":{"line":243,"column":40}}},"9":{"name":"create","line":262,"loc":{"start":{"line":262,"column":0},"end":{"line":262,"column":25}}},"10":{"name":"getReferences","line":276,"loc":{"start":{"line":276,"column":4},"end":{"line":276,"column":35}}},"11":{"name":"isStrict","line":294,"loc":{"start":{"line":294,"column":4},"end":{"line":294,"column":24}}},"12":{"name":"hasTrailingCommaForFunction","line":308,"loc":{"start":{"line":308,"column":4},"end":{"line":308,"column":47}}},"13":{"name":"hasTrailingCommaForCall","line":323,"loc":{"start":{"line":323,"column":4},"end":{"line":323,"column":43}}},"14":{"name":"extendsNull","line":336,"loc":{"start":{"line":336,"column":4},"end":{"line":336,"column":31}}},"15":{"name":"report","line":351,"loc":{"start":{"line":351,"column":4},"end":{"line":351,"column":31}}},"16":{"name":"(anonymous_16)","line":387,"loc":{"start":{"line":387,"column":22},"end":{"line":387,"column":25}}},"17":{"name":"(anonymous_17)","line":429,"loc":{"start":{"line":429,"column":33},"end":{"line":429,"column":40}}},"18":{"name":"(anonymous_18)","line":439,"loc":{"start":{"line":439,"column":27},"end":{"line":439,"column":34}}},"19":{"name":"(anonymous_19)","line":445,"loc":{"start":{"line":445,"column":29},"end":{"line":445,"column":36}}},"20":{"name":"(anonymous_20)","line":461,"loc":{"start":{"line":461,"column":28},"end":{"line":461,"column":35}}},"21":{"name":"(anonymous_21)","line":473,"loc":{"start":{"line":473,"column":22},"end":{"line":473,"column":29}}},"22":{"name":"(anonymous_22)","line":481,"loc":{"start":{"line":481,"column":21},"end":{"line":481,"column":28}}},"23":{"name":"(anonymous_23)","line":491,"loc":{"start":{"line":491,"column":26},"end":{"line":491,"column":33}}},"24":{"name":"(anonymous_24)","line":499,"loc":{"start":{"line":499,"column":25},"end":{"line":499,"column":32}}},"25":{"name":"(anonymous_25)","line":511,"loc":{"start":{"line":511,"column":24},"end":{"line":511,"column":31}}},"26":{"name":"(anonymous_26)","line":515,"loc":{"start":{"line":515,"column":29},"end":{"line":515,"column":36}}},"27":{"name":"(anonymous_27)","line":528,"loc":{"start":{"line":528,"column":22},"end":{"line":528,"column":29}}},"28":{"name":"(anonymous_28)","line":534,"loc":{"start":{"line":534,"column":30},"end":{"line":534,"column":37}}},"29":{"name":"(anonymous_29)","line":540,"loc":{"start":{"line":540,"column":25},"end":{"line":540,"column":32}}},"30":{"name":"(anonymous_30)","line":544,"loc":{"start":{"line":544,"column":26},"end":{"line":544,"column":33}}},"31":{"name":"(anonymous_31)","line":550,"loc":{"start":{"line":550,"column":24},"end":{"line":550,"column":31}}},"32":{"name":"(anonymous_32)","line":556,"loc":{"start":{"line":556,"column":20},"end":{"line":556,"column":27}}},"33":{"name":"(anonymous_33)","line":563,"loc":{"start":{"line":563,"column":17},"end":{"line":563,"column":24}}},"34":{"name":"(anonymous_34)","line":587,"loc":{"start":{"line":587,"column":23},"end":{"line":587,"column":30}}},"35":{"name":"(anonymous_35)","line":606,"loc":{"start":{"line":606,"column":23},"end":{"line":606,"column":30}}},"36":{"name":"(anonymous_36)","line":612,"loc":{"start":{"line":612,"column":18},"end":{"line":612,"column":25}}},"37":{"name":"(anonymous_37)","line":625,"loc":{"start":{"line":625,"column":23},"end":{"line":625,"column":30}}},"38":{"name":"(anonymous_38)","line":629,"loc":{"start":{"line":629,"column":25},"end":{"line":629,"column":32}}},"39":{"name":"(anonymous_39)","line":637,"loc":{"start":{"line":637,"column":30},"end":{"line":637,"column":37}}},"40":{"name":"(anonymous_40)","line":641,"loc":{"start":{"line":641,"column":34},"end":{"line":641,"column":41}}},"41":{"name":"(anonymous_41)","line":645,"loc":{"start":{"line":645,"column":32},"end":{"line":645,"column":39}}},"42":{"name":"(anonymous_42)","line":649,"loc":{"start":{"line":649,"column":27},"end":{"line":649,"column":34}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":44}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":58}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":63}},"5":{"start":{"line":21,"column":0},"end":{"line":21,"column":46}},"6":{"start":{"line":22,"column":0},"end":{"line":22,"column":37}},"7":{"start":{"line":23,"column":0},"end":{"line":23,"column":66}},"8":{"start":{"line":24,"column":0},"end":{"line":24,"column":54}},"9":{"start":{"line":25,"column":0},"end":{"line":25,"column":140}},"10":{"start":{"line":26,"column":0},"end":{"line":26,"column":58}},"11":{"start":{"line":27,"column":0},"end":{"line":27,"column":30}},"12":{"start":{"line":28,"column":0},"end":{"line":28,"column":29}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":46}},"14":{"start":{"line":30,"column":0},"end":{"line":30,"column":32}},"15":{"start":{"line":31,"column":0},"end":{"line":35,"column":1}},"16":{"start":{"line":36,"column":0},"end":{"line":39,"column":1}},"17":{"start":{"line":40,"column":0},"end":{"line":60,"column":1}},"18":{"start":{"line":68,"column":0},"end":{"line":76,"column":1}},"19":{"start":{"line":69,"column":4},"end":{"line":69,"column":41}},"20":{"start":{"line":70,"column":4},"end":{"line":70,"column":41}},"21":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"22":{"start":{"line":73,"column":8},"end":{"line":73,"column":46}},"23":{"start":{"line":75,"column":4},"end":{"line":75,"column":15}},"24":{"start":{"line":87,"column":0},"end":{"line":115,"column":1}},"25":{"start":{"line":88,"column":4},"end":{"line":88,"column":41}},"26":{"start":{"line":89,"column":4},"end":{"line":89,"column":65}},"27":{"start":{"line":91,"column":4},"end":{"line":112,"column":5}},"28":{"start":{"line":92,"column":8},"end":{"line":92,"column":51}},"29":{"start":{"line":93,"column":8},"end":{"line":93,"column":71}},"30":{"start":{"line":94,"column":8},"end":{"line":104,"column":9}},"31":{"start":{"line":96,"column":16},"end":{"line":96,"column":46}},"32":{"start":{"line":98,"column":16},"end":{"line":100,"column":17}},"33":{"start":{"line":99,"column":20},"end":{"line":99,"column":73}},"34":{"start":{"line":101,"column":16},"end":{"line":101,"column":33}},"35":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"36":{"start":{"line":107,"column":12},"end":{"line":107,"column":26}},"37":{"start":{"line":114,"column":4},"end":{"line":114,"column":15}},"38":{"start":{"line":122,"column":0},"end":{"line":133,"column":1}},"39":{"start":{"line":123,"column":4},"end":{"line":132,"column":6}},"40":{"start":{"line":125,"column":12},"end":{"line":127,"column":13}},"41":{"start":{"line":126,"column":16},"end":{"line":126,"column":34}},"42":{"start":{"line":128,"column":12},"end":{"line":128,"column":28}},"43":{"start":{"line":129,"column":12},"end":{"line":129,"column":23}},"44":{"start":{"line":142,"column":0},"end":{"line":147,"column":1}},"45":{"start":{"line":143,"column":4},"end":{"line":146,"column":5}},"46":{"start":{"line":145,"column":42},"end":{"line":145,"column":71}},"47":{"start":{"line":156,"column":0},"end":{"line":209,"column":1}},"48":{"start":{"line":157,"column":4},"end":{"line":157,"column":19}},"49":{"start":{"line":158,"column":4},"end":{"line":158,"column":22}},"50":{"start":{"line":160,"column":4},"end":{"line":171,"column":5}},"51":{"start":{"line":161,"column":8},"end":{"line":161,"column":43}},"52":{"start":{"line":162,"column":8},"end":{"line":162,"column":20}},"53":{"start":{"line":164,"column":9},"end":{"line":171,"column":5}},"54":{"start":{"line":165,"column":8},"end":{"line":165,"column":51}},"55":{"start":{"line":166,"column":8},"end":{"line":166,"column":39}},"56":{"start":{"line":169,"column":8},"end":{"line":169,"column":32}},"57":{"start":{"line":170,"column":8},"end":{"line":170,"column":20}},"58":{"start":{"line":173,"column":4},"end":{"line":208,"column":6}},"59":{"start":{"line":177,"column":16},"end":{"line":177,"column":45}},"60":{"start":{"line":179,"column":16},"end":{"line":202,"column":17}},"61":{"start":{"line":180,"column":20},"end":{"line":185,"column":22}},"62":{"start":{"line":187,"column":21},"end":{"line":202,"column":17}},"63":{"start":{"line":188,"column":20},"end":{"line":193,"column":22}},"64":{"start":{"line":196,"column":20},"end":{"line":201,"column":22}},"65":{"start":{"line":204,"column":16},"end":{"line":204,"column":27}},"66":{"start":{"line":218,"column":0},"end":{"line":225,"column":1}},"67":{"start":{"line":219,"column":4},"end":{"line":219,"column":47}},"68":{"start":{"line":220,"column":4},"end":{"line":220,"column":51}},"69":{"start":{"line":221,"column":4},"end":{"line":224,"column":5}},"70":{"start":{"line":233,"column":0},"end":{"line":235,"column":1}},"71":{"start":{"line":234,"column":4},"end":{"line":234,"column":20}},"72":{"start":{"line":243,"column":0},"end":{"line":254,"column":1}},"73":{"start":{"line":244,"column":4},"end":{"line":244,"column":20}},"74":{"start":{"line":246,"column":4},"end":{"line":246,"column":29}},"75":{"start":{"line":247,"column":4},"end":{"line":251,"column":5}},"76":{"start":{"line":248,"column":8},"end":{"line":250,"column":9}},"77":{"start":{"line":249,"column":12},"end":{"line":249,"column":23}},"78":{"start":{"line":253,"column":4},"end":{"line":253,"column":16}},"79":{"start":{"line":262,"column":0},"end":{"line":653,"column":1}},"80":{"start":{"line":263,"column":4},"end":{"line":263,"column":46}},"81":{"start":{"line":264,"column":4},"end":{"line":267,"column":5}},"82":{"start":{"line":268,"column":4},"end":{"line":268,"column":80}},"83":{"start":{"line":276,"column":4},"end":{"line":286,"column":5}},"84":{"start":{"line":277,"column":8},"end":{"line":277,"column":46}},"85":{"start":{"line":279,"column":8},"end":{"line":285,"column":9}},"86":{"start":{"line":280,"column":12},"end":{"line":280,"column":54}},"87":{"start":{"line":282,"column":12},"end":{"line":284,"column":13}},"88":{"start":{"line":283,"column":16},"end":{"line":283,"column":42}},"89":{"start":{"line":294,"column":4},"end":{"line":300,"column":5}},"90":{"start":{"line":295,"column":8},"end":{"line":295,"column":38}},"91":{"start":{"line":296,"column":8},"end":{"line":298,"column":9}},"92":{"start":{"line":297,"column":12},"end":{"line":297,"column":40}},"93":{"start":{"line":299,"column":8},"end":{"line":299,"column":29}},"94":{"start":{"line":308,"column":4},"end":{"line":315,"column":5}},"95":{"start":{"line":309,"column":8},"end":{"line":309,"column":41}},"96":{"start":{"line":311,"column":8},"end":{"line":314,"column":9}},"97":{"start":{"line":323,"column":4},"end":{"line":328,"column":5}},"98":{"start":{"line":324,"column":8},"end":{"line":327,"column":9}},"99":{"start":{"line":336,"column":4},"end":{"line":342,"column":5}},"100":{"start":{"line":337,"column":8},"end":{"line":341,"column":9}},"101":{"start":{"line":351,"column":4},"end":{"line":380,"column":5}},"102":{"start":{"line":352,"column":8},"end":{"line":352,"column":43}},"103":{"start":{"line":353,"column":8},"end":{"line":353,"column":49}},"104":{"start":{"line":354,"column":8},"end":{"line":356,"column":9}},"105":{"start":{"line":355,"column":12},"end":{"line":355,"column":18}},"106":{"start":{"line":358,"column":8},"end":{"line":379,"column":9}},"107":{"start":{"line":359,"column":12},"end":{"line":367,"column":14}},"108":{"start":{"line":369,"column":13},"end":{"line":379,"column":9}},"109":{"start":{"line":370,"column":12},"end":{"line":378,"column":14}},"110":{"start":{"line":382,"column":4},"end":{"line":652,"column":5}},"111":{"start":{"line":389,"column":12},"end":{"line":393,"column":13}},"112":{"start":{"line":390,"column":16},"end":{"line":392,"column":17}},"113":{"start":{"line":391,"column":20},"end":{"line":391,"column":54}},"114":{"start":{"line":396,"column":12},"end":{"line":411,"column":13}},"115":{"start":{"line":397,"column":16},"end":{"line":397,"column":49}},"116":{"start":{"line":398,"column":16},"end":{"line":398,"column":46}},"117":{"start":{"line":399,"column":16},"end":{"line":403,"column":17}},"118":{"start":{"line":402,"column":20},"end":{"line":402,"column":28}},"119":{"start":{"line":405,"column":16},"end":{"line":405,"column":44}},"120":{"start":{"line":406,"column":16},"end":{"line":406,"column":68}},"121":{"start":{"line":407,"column":16},"end":{"line":407,"column":118}},"122":{"start":{"line":408,"column":16},"end":{"line":410,"column":17}},"123":{"start":{"line":409,"column":20},"end":{"line":409,"column":71}},"124":{"start":{"line":414,"column":12},"end":{"line":422,"column":13}},"125":{"start":{"line":415,"column":16},"end":{"line":415,"column":49}},"126":{"start":{"line":416,"column":16},"end":{"line":416,"column":46}},"127":{"start":{"line":417,"column":16},"end":{"line":421,"column":17}},"128":{"start":{"line":420,"column":20},"end":{"line":420,"column":55}},"129":{"start":{"line":430,"column":12},"end":{"line":430,"column":42}},"130":{"start":{"line":431,"column":12},"end":{"line":433,"column":13}},"131":{"start":{"line":432,"column":16},"end":{"line":432,"column":42}},"132":{"start":{"line":434,"column":12},"end":{"line":436,"column":13}},"133":{"start":{"line":435,"column":16},"end":{"line":435,"column":62}},"134":{"start":{"line":440,"column":12},"end":{"line":442,"column":13}},"135":{"start":{"line":441,"column":16},"end":{"line":441,"column":49}},"136":{"start":{"line":446,"column":12},"end":{"line":446,"column":50}},"137":{"start":{"line":447,"column":12},"end":{"line":449,"column":13}},"138":{"start":{"line":448,"column":16},"end":{"line":448,"column":52}},"139":{"start":{"line":450,"column":12},"end":{"line":452,"column":13}},"140":{"start":{"line":451,"column":16},"end":{"line":451,"column":50}},"141":{"start":{"line":453,"column":12},"end":{"line":455,"column":13}},"142":{"start":{"line":454,"column":16},"end":{"line":454,"column":42}},"143":{"start":{"line":456,"column":12},"end":{"line":458,"column":13}},"144":{"start":{"line":457,"column":16},"end":{"line":457,"column":62}},"145":{"start":{"line":462,"column":12},"end":{"line":464,"column":13}},"146":{"start":{"line":463,"column":16},"end":{"line":463,"column":50}},"147":{"start":{"line":465,"column":12},"end":{"line":467,"column":13}},"148":{"start":{"line":466,"column":16},"end":{"line":466,"column":42}},"149":{"start":{"line":468,"column":12},"end":{"line":470,"column":13}},"150":{"start":{"line":469,"column":16},"end":{"line":469,"column":62}},"151":{"start":{"line":474,"column":12},"end":{"line":474,"column":52}},"152":{"start":{"line":475,"column":12},"end":{"line":475,"column":64}},"153":{"start":{"line":476,"column":12},"end":{"line":478,"column":13}},"154":{"start":{"line":477,"column":16},"end":{"line":477,"column":42}},"155":{"start":{"line":482,"column":12},"end":{"line":484,"column":13}},"156":{"start":{"line":483,"column":16},"end":{"line":483,"column":46}},"157":{"start":{"line":492,"column":12},"end":{"line":492,"column":35}},"158":{"start":{"line":494,"column":12},"end":{"line":496,"column":13}},"159":{"start":{"line":495,"column":16},"end":{"line":495,"column":43}},"160":{"start":{"line":500,"column":12},"end":{"line":500,"column":35}},"161":{"start":{"line":502,"column":12},"end":{"line":504,"column":13}},"162":{"start":{"line":503,"column":16},"end":{"line":503,"column":43}},"163":{"start":{"line":512,"column":12},"end":{"line":512,"column":33}},"164":{"start":{"line":516,"column":12},"end":{"line":521,"column":13}},"165":{"start":{"line":517,"column":16},"end":{"line":517,"column":37}},"166":{"start":{"line":519,"column":17},"end":{"line":521,"column":13}},"167":{"start":{"line":520,"column":16},"end":{"line":520,"column":35}},"168":{"start":{"line":529,"column":12},"end":{"line":531,"column":13}},"169":{"start":{"line":530,"column":16},"end":{"line":530,"column":45}},"170":{"start":{"line":535,"column":12},"end":{"line":537,"column":13}},"171":{"start":{"line":536,"column":16},"end":{"line":536,"column":52}},"172":{"start":{"line":541,"column":12},"end":{"line":541,"column":38}},"173":{"start":{"line":545,"column":12},"end":{"line":547,"column":13}},"174":{"start":{"line":546,"column":16},"end":{"line":546,"column":52}},"175":{"start":{"line":551,"column":12},"end":{"line":553,"column":13}},"176":{"start":{"line":552,"column":16},"end":{"line":552,"column":62}},"177":{"start":{"line":557,"column":12},"end":{"line":557,"column":48}},"178":{"start":{"line":558,"column":12},"end":{"line":560,"column":13}},"179":{"start":{"line":559,"column":16},"end":{"line":559,"column":55}},"180":{"start":{"line":564,"column":12},"end":{"line":584,"column":13}},"181":{"start":{"line":565,"column":16},"end":{"line":570,"column":17}},"182":{"start":{"line":566,"column":20},"end":{"line":566,"column":56}},"183":{"start":{"line":568,"column":21},"end":{"line":570,"column":17}},"184":{"start":{"line":569,"column":20},"end":{"line":569,"column":55}},"185":{"start":{"line":572,"column":17},"end":{"line":584,"column":13}},"186":{"start":{"line":573,"column":16},"end":{"line":575,"column":17}},"187":{"start":{"line":574,"column":20},"end":{"line":574,"column":59}},"188":{"start":{"line":577,"column":17},"end":{"line":584,"column":13}},"189":{"start":{"line":578,"column":16},"end":{"line":580,"column":17}},"190":{"start":{"line":579,"column":20},"end":{"line":579,"column":43}},"191":{"start":{"line":581,"column":16},"end":{"line":583,"column":17}},"192":{"start":{"line":582,"column":20},"end":{"line":582,"column":43}},"193":{"start":{"line":588,"column":12},"end":{"line":600,"column":13}},"194":{"start":{"line":594,"column":16},"end":{"line":596,"column":17}},"195":{"start":{"line":595,"column":20},"end":{"line":595,"column":43}},"196":{"start":{"line":597,"column":16},"end":{"line":599,"column":17}},"197":{"start":{"line":598,"column":20},"end":{"line":598,"column":43}},"198":{"start":{"line":601,"column":12},"end":{"line":603,"column":13}},"199":{"start":{"line":602,"column":16},"end":{"line":602,"column":62}},"200":{"start":{"line":607,"column":12},"end":{"line":609,"column":13}},"201":{"start":{"line":608,"column":16},"end":{"line":608,"column":45}},"202":{"start":{"line":613,"column":12},"end":{"line":622,"column":13}},"203":{"start":{"line":616,"column":16},"end":{"line":621,"column":17}},"204":{"start":{"line":617,"column":20},"end":{"line":617,"column":67}},"205":{"start":{"line":620,"column":20},"end":{"line":620,"column":59}},"206":{"start":{"line":626,"column":12},"end":{"line":626,"column":46}},"207":{"start":{"line":630,"column":12},"end":{"line":630,"column":43}},"208":{"start":{"line":638,"column":12},"end":{"line":638,"column":35}},"209":{"start":{"line":642,"column":12},"end":{"line":642,"column":35}},"210":{"start":{"line":646,"column":12},"end":{"line":646,"column":35}},"211":{"start":{"line":650,"column":12},"end":{"line":650,"column":35}},"212":{"start":{"line":659,"column":0},"end":{"line":688,"column":1}}},"branchMap":{"1":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"2":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":8},"end":{"line":72,"column":18}},{"start":{"line":72,"column":22},"end":{"line":72,"column":33}}]},"3":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":24},"end":{"line":89,"column":28}},{"start":{"line":89,"column":32},"end":{"line":89,"column":44}},{"start":{"line":89,"column":48},"end":{"line":89,"column":65}}]},"4":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":16},"end":{"line":98,"column":16}},{"start":{"line":98,"column":16},"end":{"line":98,"column":16}}]},"5":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":20},"end":{"line":98,"column":29}},{"start":{"line":98,"column":33},"end":{"line":98,"column":43}},{"start":{"line":98,"column":47},"end":{"line":98,"column":58}}]},"6":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":106,"column":8}},{"start":{"line":106,"column":8},"end":{"line":106,"column":8}}]},"7":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":8},"end":{"line":144,"column":35}},{"start":{"line":145,"column":8},"end":{"line":145,"column":72}}]},"8":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":160,"column":4}},{"start":{"line":160,"column":4},"end":{"line":160,"column":4}}]},"9":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":18},"end":{"line":161,"column":25}},{"start":{"line":161,"column":29},"end":{"line":161,"column":43}}]},"10":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":9},"end":{"line":164,"column":9}},{"start":{"line":164,"column":9},"end":{"line":164,"column":9}}]},"11":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":18},"end":{"line":165,"column":33}},{"start":{"line":165,"column":37},"end":{"line":165,"column":51}}]},"12":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":18},"end":{"line":166,"column":33}},{"start":{"line":166,"column":37},"end":{"line":166,"column":39}}]},"13":{"line":174,"type":"cond-expr","locations":[{"start":{"line":174,"column":31},"end":{"line":174,"column":49}},{"start":{"line":174,"column":52},"end":{"line":174,"column":67}}]},"14":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":16},"end":{"line":179,"column":16}},{"start":{"line":179,"column":16},"end":{"line":179,"column":16}}]},"15":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":21},"end":{"line":187,"column":21}},{"start":{"line":187,"column":21},"end":{"line":187,"column":21}}]},"16":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":8},"end":{"line":222,"column":45}},{"start":{"line":223,"column":9},"end":{"line":223,"column":21}},{"start":{"line":223,"column":25},"end":{"line":223,"column":50}}]},"17":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":8},"end":{"line":248,"column":8}},{"start":{"line":248,"column":8},"end":{"line":248,"column":8}}]},"18":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":12},"end":{"line":282,"column":12}},{"start":{"line":282,"column":12},"end":{"line":282,"column":12}}]},"19":{"line":282,"type":"binary-expr","locations":[{"start":{"line":282,"column":16},"end":{"line":282,"column":24}},{"start":{"line":282,"column":28},"end":{"line":282,"column":54}}]},"20":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":8},"end":{"line":296,"column":8}},{"start":{"line":296,"column":8},"end":{"line":296,"column":8}}]},"21":{"line":296,"type":"binary-expr","locations":[{"start":{"line":296,"column":12},"end":{"line":296,"column":35}},{"start":{"line":296,"column":39},"end":{"line":296,"column":67}}]},"22":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":12},"end":{"line":312,"column":23}},{"start":{"line":313,"column":12},"end":{"line":313,"column":75}}]},"23":{"line":325,"type":"binary-expr","locations":[{"start":{"line":325,"column":12},"end":{"line":325,"column":38}},{"start":{"line":326,"column":12},"end":{"line":326,"column":58}}]},"24":{"line":338,"type":"binary-expr","locations":[{"start":{"line":338,"column":12},"end":{"line":338,"column":35}},{"start":{"line":339,"column":12},"end":{"line":339,"column":46}},{"start":{"line":340,"column":12},"end":{"line":340,"column":42}}]},"25":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":8},"end":{"line":354,"column":8}},{"start":{"line":354,"column":8},"end":{"line":354,"column":8}}]},"26":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":8},"end":{"line":358,"column":8}},{"start":{"line":358,"column":8},"end":{"line":358,"column":8}}]},"27":{"line":364,"type":"cond-expr","locations":[{"start":{"line":364,"column":43},"end":{"line":364,"column":47}},{"start":{"line":364,"column":50},"end":{"line":364,"column":55}}]},"28":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":13},"end":{"line":369,"column":13}},{"start":{"line":369,"column":13},"end":{"line":369,"column":13}}]},"29":{"line":375,"type":"cond-expr","locations":[{"start":{"line":375,"column":43},"end":{"line":375,"column":47}},{"start":{"line":375,"column":50},"end":{"line":375,"column":55}}]},"30":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":16},"end":{"line":399,"column":16}},{"start":{"line":399,"column":16},"end":{"line":399,"column":16}}]},"31":{"line":399,"type":"binary-expr","locations":[{"start":{"line":399,"column":20},"end":{"line":399,"column":58}},{"start":{"line":400,"column":20},"end":{"line":400,"column":46}}]},"32":{"line":407,"type":"cond-expr","locations":[{"start":{"line":407,"column":60},"end":{"line":407,"column":76}},{"start":{"line":407,"column":79},"end":{"line":407,"column":96}}]},"33":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":16},"end":{"line":408,"column":16}},{"start":{"line":408,"column":16},"end":{"line":408,"column":16}}]},"34":{"line":408,"type":"binary-expr","locations":[{"start":{"line":408,"column":20},"end":{"line":408,"column":32}},{"start":{"line":408,"column":36},"end":{"line":408,"column":75}}]},"35":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":16},"end":{"line":417,"column":16}},{"start":{"line":417,"column":16},"end":{"line":417,"column":16}}]},"36":{"line":417,"type":"binary-expr","locations":[{"start":{"line":417,"column":20},"end":{"line":417,"column":52}},{"start":{"line":418,"column":20},"end":{"line":418,"column":50}}]},"37":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":12},"end":{"line":431,"column":12}},{"start":{"line":431,"column":12},"end":{"line":431,"column":12}}]},"38":{"line":434,"type":"if","locations":[{"start":{"line":434,"column":12},"end":{"line":434,"column":12}},{"start":{"line":434,"column":12},"end":{"line":434,"column":12}}]},"39":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":12},"end":{"line":440,"column":12}},{"start":{"line":440,"column":12},"end":{"line":440,"column":12}}]},"40":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":12},"end":{"line":447,"column":12}},{"start":{"line":447,"column":12},"end":{"line":447,"column":12}}]},"41":{"line":450,"type":"if","locations":[{"start":{"line":450,"column":12},"end":{"line":450,"column":12}},{"start":{"line":450,"column":12},"end":{"line":450,"column":12}}]},"42":{"line":453,"type":"if","locations":[{"start":{"line":453,"column":12},"end":{"line":453,"column":12}},{"start":{"line":453,"column":12},"end":{"line":453,"column":12}}]},"43":{"line":456,"type":"if","locations":[{"start":{"line":456,"column":12},"end":{"line":456,"column":12}},{"start":{"line":456,"column":12},"end":{"line":456,"column":12}}]},"44":{"line":462,"type":"if","locations":[{"start":{"line":462,"column":12},"end":{"line":462,"column":12}},{"start":{"line":462,"column":12},"end":{"line":462,"column":12}}]},"45":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":12},"end":{"line":465,"column":12}},{"start":{"line":465,"column":12},"end":{"line":465,"column":12}}]},"46":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":12},"end":{"line":468,"column":12}},{"start":{"line":468,"column":12},"end":{"line":468,"column":12}}]},"47":{"line":474,"type":"binary-expr","locations":[{"start":{"line":474,"column":25},"end":{"line":474,"column":39}},{"start":{"line":474,"column":43},"end":{"line":474,"column":52}}]},"48":{"line":475,"type":"binary-expr","locations":[{"start":{"line":475,"column":29},"end":{"line":475,"column":47}},{"start":{"line":475,"column":51},"end":{"line":475,"column":64}}]},"49":{"line":476,"type":"if","locations":[{"start":{"line":476,"column":12},"end":{"line":476,"column":12}},{"start":{"line":476,"column":12},"end":{"line":476,"column":12}}]},"50":{"line":476,"type":"binary-expr","locations":[{"start":{"line":476,"column":16},"end":{"line":476,"column":30}},{"start":{"line":476,"column":34},"end":{"line":476,"column":55}}]},"51":{"line":482,"type":"if","locations":[{"start":{"line":482,"column":12},"end":{"line":482,"column":12}},{"start":{"line":482,"column":12},"end":{"line":482,"column":12}}]},"52":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":12},"end":{"line":494,"column":12}},{"start":{"line":494,"column":12},"end":{"line":494,"column":12}}]},"53":{"line":502,"type":"if","locations":[{"start":{"line":502,"column":12},"end":{"line":502,"column":12}},{"start":{"line":502,"column":12},"end":{"line":502,"column":12}}]},"54":{"line":516,"type":"if","locations":[{"start":{"line":516,"column":12},"end":{"line":516,"column":12}},{"start":{"line":516,"column":12},"end":{"line":516,"column":12}}]},"55":{"line":519,"type":"if","locations":[{"start":{"line":519,"column":17},"end":{"line":519,"column":17}},{"start":{"line":519,"column":17},"end":{"line":519,"column":17}}]},"56":{"line":529,"type":"if","locations":[{"start":{"line":529,"column":12},"end":{"line":529,"column":12}},{"start":{"line":529,"column":12},"end":{"line":529,"column":12}}]},"57":{"line":535,"type":"if","locations":[{"start":{"line":535,"column":12},"end":{"line":535,"column":12}},{"start":{"line":535,"column":12},"end":{"line":535,"column":12}}]},"58":{"line":545,"type":"if","locations":[{"start":{"line":545,"column":12},"end":{"line":545,"column":12}},{"start":{"line":545,"column":12},"end":{"line":545,"column":12}}]},"59":{"line":551,"type":"if","locations":[{"start":{"line":551,"column":12},"end":{"line":551,"column":12}},{"start":{"line":551,"column":12},"end":{"line":551,"column":12}}]},"60":{"line":558,"type":"if","locations":[{"start":{"line":558,"column":12},"end":{"line":558,"column":12}},{"start":{"line":558,"column":12},"end":{"line":558,"column":12}}]},"61":{"line":564,"type":"if","locations":[{"start":{"line":564,"column":12},"end":{"line":564,"column":12}},{"start":{"line":564,"column":12},"end":{"line":564,"column":12}}]},"62":{"line":565,"type":"if","locations":[{"start":{"line":565,"column":16},"end":{"line":565,"column":16}},{"start":{"line":565,"column":16},"end":{"line":565,"column":16}}]},"63":{"line":568,"type":"if","locations":[{"start":{"line":568,"column":21},"end":{"line":568,"column":21}},{"start":{"line":568,"column":21},"end":{"line":568,"column":21}}]},"64":{"line":572,"type":"if","locations":[{"start":{"line":572,"column":17},"end":{"line":572,"column":17}},{"start":{"line":572,"column":17},"end":{"line":572,"column":17}}]},"65":{"line":573,"type":"if","locations":[{"start":{"line":573,"column":16},"end":{"line":573,"column":16}},{"start":{"line":573,"column":16},"end":{"line":573,"column":16}}]},"66":{"line":577,"type":"if","locations":[{"start":{"line":577,"column":17},"end":{"line":577,"column":17}},{"start":{"line":577,"column":17},"end":{"line":577,"column":17}}]},"67":{"line":578,"type":"if","locations":[{"start":{"line":578,"column":16},"end":{"line":578,"column":16}},{"start":{"line":578,"column":16},"end":{"line":578,"column":16}}]},"68":{"line":581,"type":"if","locations":[{"start":{"line":581,"column":16},"end":{"line":581,"column":16}},{"start":{"line":581,"column":16},"end":{"line":581,"column":16}}]},"69":{"line":588,"type":"if","locations":[{"start":{"line":588,"column":12},"end":{"line":588,"column":12}},{"start":{"line":588,"column":12},"end":{"line":588,"column":12}}]},"70":{"line":588,"type":"binary-expr","locations":[{"start":{"line":588,"column":16},"end":{"line":588,"column":49}},{"start":{"line":589,"column":16},"end":{"line":589,"column":45}},{"start":{"line":590,"column":16},"end":{"line":590,"column":43}},{"start":{"line":591,"column":16},"end":{"line":591,"column":52}},{"start":{"line":592,"column":16},"end":{"line":592,"column":59}}]},"71":{"line":594,"type":"if","locations":[{"start":{"line":594,"column":16},"end":{"line":594,"column":16}},{"start":{"line":594,"column":16},"end":{"line":594,"column":16}}]},"72":{"line":597,"type":"if","locations":[{"start":{"line":597,"column":16},"end":{"line":597,"column":16}},{"start":{"line":597,"column":16},"end":{"line":597,"column":16}}]},"73":{"line":601,"type":"if","locations":[{"start":{"line":601,"column":12},"end":{"line":601,"column":12}},{"start":{"line":601,"column":12},"end":{"line":601,"column":12}}]},"74":{"line":607,"type":"if","locations":[{"start":{"line":607,"column":12},"end":{"line":607,"column":12}},{"start":{"line":607,"column":12},"end":{"line":607,"column":12}}]},"75":{"line":613,"type":"if","locations":[{"start":{"line":613,"column":12},"end":{"line":613,"column":12}},{"start":{"line":613,"column":12},"end":{"line":613,"column":12}}]},"76":{"line":613,"type":"binary-expr","locations":[{"start":{"line":613,"column":16},"end":{"line":613,"column":55}},{"start":{"line":614,"column":17},"end":{"line":614,"column":30}},{"start":{"line":614,"column":34},"end":{"line":614,"column":48}},{"start":{"line":614,"column":52},"end":{"line":614,"column":63}}]},"77":{"line":616,"type":"if","locations":[{"start":{"line":616,"column":16},"end":{"line":616,"column":16}},{"start":{"line":616,"column":16},"end":{"line":616,"column":16}}]},"78":{"line":616,"type":"binary-expr","locations":[{"start":{"line":616,"column":20},"end":{"line":616,"column":34}},{"start":{"line":616,"column":38},"end":{"line":616,"column":68}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2015 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const semver = require(\"semver\")","const features = require(\"../util/features\")","const getPackageJson = require(\"../util/get-package-json\")","const getValueIfString = require(\"../util/get-value-if-string\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","const VERSIONS = [0.10, 0.12, 4, 5, 6, 7, 7.6]","const OPTIONS = Object.keys(features)","const FUNC_TYPE = /^(?:Arrow)?Function(?:Declaration|Expression)$/","const CLASS_TYPE = /^Class(?:Declaration|Expression)$/","const DESTRUCTURING_PARENT_TYPE = /^(?:Function(?:Declaration|Expression)|ArrowFunctionExpression|AssignmentExpression|VariableDeclarator)$/","const TOPLEVEL_SCOPE_TYPE = /^(?:global|function|module)$/","const BINARY_NUMBER = /^0[bB]/","const OCTAL_NUMBER = /^0[oO]/","const UNICODE_ESC = /(\\\\+)u\\{[0-9a-fA-F]+?\\}/g","const GET_OR_SET = /^(?:g|s)et$/","const NEW_BUILTIN_TYPES = [","    \"Int8Array\", \"Uint8Array\", \"Uint8ClampedArray\", \"Int16Array\", \"Uint16Array\",","    \"Int32Array\", \"Uint32Array\", \"Float32Array\", \"Float64Array\", \"DataView\",","    \"Map\", \"Set\", \"WeakMap\", \"WeakSet\", \"Proxy\", \"Reflect\", \"Promise\", \"Symbol\",","]","const SUBCLASSING_TEST_TARGETS = [","    \"Array\", \"RegExp\", \"Function\", \"Promise\", \"Boolean\", \"Number\", \"String\",","    \"Map\", \"Set\",","]","const PROPERTY_TEST_TARGETS = {","    Object: [","        \"assign\", \"is\", \"getOwnPropertySymbols\", \"setPrototypeOf\", \"values\",","        \"entries\", \"getOwnPropertyDescriptors\",","    ],","    String: [\"raw\", \"fromCodePoint\"],","    Array: [\"from\", \"of\"],","    Number: [","        \"isFinite\", \"isInteger\", \"isSafeInteger\", \"isNaN\", \"EPSILON\",","        \"MIN_SAFE_INTEGER\", \"MAX_SAFE_INTEGER\",","    ],","    Math: [","        \"clz32\", \"imul\", \"sign\", \"log10\", \"log2\", \"log1p\", \"expm1\", \"cosh\",","        \"sinh\", \"tanh\", \"acosh\", \"asinh\", \"atanh\", \"trunc\", \"fround\", \"cbrt\",","        \"hypot\",","    ],","    Symbol: [","        \"hasInstance\", \"isConcatSpreadablec\", \"iterator\", \"species\", \"replace\",","        \"search\", \"split\", \"match\", \"toPrimitive\", \"toStringTag\", \"unscopables\",","    ],","}","","/**"," * Gets major version of 'semver.Comparator'."," *"," * @param {semver.Comparator} comparator - A comparator to get."," * @returns {number} The major version of the comparator."," */","function parseVersion(comparator) {","    const major = comparator.semver.major","    const minor = comparator.semver.minor","","    if (major >= 1 || minor >= 10) {","        return parseFloat(`${major}.${minor}`)","    }","    return 0.10","}","","/**"," * Gets default version configuration of this rule."," *"," * This finds and reads 'package.json' file, then parses 'engines.node' field."," * If it's nothing, this returns '0.10'."," *"," * @param {string} filename - The file name of the current linting file."," * @returns {number} The default version configuration."," */","function getDefaultVersion(filename) {","    const info = getPackageJson(filename)","    const nodeVersion = info && info.engines && info.engines.node","","    try {","        const range = new semver.Range(nodeVersion)","        const comparators = Array.prototype.concat.apply([], range.set)","        const version = comparators.reduce(","            (minVersion, comparator) => {","                const op = comparator.operator","","                if (op === \"\" || op === \">\" || op === \">=\") {","                    return Math.min(minVersion, parseVersion(comparator))","                }","                return minVersion","            },","            Number.POSITIVE_INFINITY","        )","","        if (Number.isFinite(version)) {","            return version","        }","    }","    catch (_err) {","        // ignore","    }","","    return 0.10","}","","/**"," * Gets values of the `ignores` option."," *"," * @returns {string[]} Values of the `ignores` option."," */","function getIgnoresEnum() {","    return Object.keys(OPTIONS.reduce(","        (retv, key) => {","            for (const alias of features[key].alias) {","                retv[alias] = true","            }","            retv[key] = true","            return retv","        },","        Object.create(null)","    ))","}","","/**"," * Checks whether a given key should be ignored or not."," *"," * @param {string} key - A key to check."," * @param {string[]} ignores - An array of keys and aliases to be ignored."," * @returns {boolean} `true` if the key should be ignored."," */","function isIgnored(key, ignores) {","    return (","        ignores.indexOf(key) !== -1 ||","        features[key].alias.some(alias => ignores.indexOf(alias) !== -1)","    )","}","","/**"," * Parses the options."," *"," * @param {object} options - An option object to parse."," * @param {number} defaultVersion - The default version to use if the version option was omitted."," * @returns {object} Parsed value."," */","function parseOptions(options, defaultVersion) {","    let version = 0","    let ignores = null","","    if (typeof options === \"number\") {","        version = options || defaultVersion","        ignores = []","    }","    else if (typeof options === \"object\") {","        version = options.version || defaultVersion","        ignores = options.ignores || []","    }","    else {","        version = defaultVersion","        ignores = []","    }","","    return Object.freeze({","        version: version < 1 ? version.toFixed(2) : String(version),","        features: Object.freeze(OPTIONS.reduce(","            (retv, key) => {","                const feature = features[key]","","                if (isIgnored(key, ignores)) {","                    retv[key] = Object.freeze({","                        name: feature.name,","                        singular: Boolean(feature.singular),","                        supported: true,","                        supportedInStrict: true,","                    })","                }","                else if (typeof feature.node === \"number\") {","                    retv[key] = Object.freeze({","                        name: feature.name,","                        singular: Boolean(feature.singular),","                        supported: version >= feature.node,","                        supportedInStrict: version >= feature.node,","                    })","                }","                else {","                    retv[key] = Object.freeze({","                        name: feature.name,","                        singular: Boolean(feature.singular),","                        supported: version >= feature.node.sloppy,","                        supportedInStrict: version >= feature.node.strict,","                    })","                }","","                return retv","            },","            Object.create(null)","        )),","    })","}","","/**"," * Checks whether or not the current configure has a special lexical environment."," * If it's modules or globalReturn then it has a special lexical environment."," *"," * @param {RuleContext} context - A context to check."," * @returns {boolean} `true` if the current configure is modules or globalReturn."," */","function checkSpecialLexicalEnvironment(context) {","    const parserOptions = context.parserOptions","    const ecmaFeatures = parserOptions.ecmaFeatures","    return Boolean(","        parserOptions.sourceType === \"module\" ||","        (ecmaFeatures && ecmaFeatures.globalReturn)","    )","}","","/**"," * Gets the name of a given node."," *"," * @param {ASTNode} node - An Identifier node to get."," * @returns {string} The name of the node."," */","function getIdentifierName(node) {","    return node.name","}","","/**"," * Checks whether the given string has `\\u{90ABCDEF}`-like escapes."," *"," * @param {string} raw - The string to check."," * @returns {boolean} `true` if the string has Unicode code point escapes."," */","function hasUnicodeCodePointEscape(raw) {","    let match = null","","    UNICODE_ESC.lastIndex = 0","    while ((match = UNICODE_ESC.exec(raw)) != null) {","        if (match[1].length % 2 === 1) {","            return true","        }","    }","","    return false","}","","/**"," * The definition of this rule."," *"," * @param {RuleContext} context - The rule context to check."," * @returns {object} The definition of this rule."," */","function create(context) {","    const sourceCode = context.getSourceCode()","    const supportInfo = parseOptions(","        context.options[0],","        getDefaultVersion(context.getFilename())","    )","    const hasSpecialLexicalEnvironment = checkSpecialLexicalEnvironment(context)","","    /**","     * Gets the references of the specified global variables.","     *","     * @param {string[]} names - Variable names to get.","     * @returns {void}","     */","    function* getReferences(names) {","        const globalScope = context.getScope()","","        for (const name of names) {","            const variable = globalScope.set.get(name)","","            if (variable && variable.defs.length === 0) {","                yield* variable.references","            }","        }","    }","","    /**","     * Checks whether or not the current scope is strict mode.","     *","     * @returns {boolean}","     *      `true` if the current scope is strict mode. Otherwise `false`.","     */","    function isStrict() {","        let scope = context.getScope()","        if (scope.type === \"global\" && hasSpecialLexicalEnvironment) {","            scope = scope.childScopes[0]","        }","        return scope.isStrict","    }","","    /**","     * Checks whether the given function has trailing commas or not.","     *","     * @param {ASTNode} node - The function node to check.","     * @returns {boolean} `true` if the function has trailing commas.","     */","    function hasTrailingCommaForFunction(node) {","        const length = node.params.length","","        return (","            length >= 1 &&","            sourceCode.getTokenAfter(node.params[length - 1]).value === \",\"","        )","    }","","    /**","     * Checks whether the given call expression has trailing commas or not.","     *","     * @param {ASTNode} node - The call expression node to check.","     * @returns {boolean} `true` if the call expression has trailing commas.","     */","    function hasTrailingCommaForCall(node) {","        return (","            node.arguments.length >= 1 &&","            sourceCode.getLastToken(node, 1).value === \",\"","        )","    }","","    /**","     * Checks whether the given class extends from null or not.","     *","     * @param {ASTNode} node - The class node to check.","     * @returns {boolean} `true` if the class extends from null.","     */","    function extendsNull(node) {","        return (","            node.superClass != null &&","            node.superClass.type === \"Literal\" &&","            node.superClass.value === null","        )","    }","","    /**","     * Reports a given node if the specified feature is not supported.","     *","     * @param {ASTNode} node - A node to be reported.","     * @param {string} key - A feature name to report.","     * @returns {void}","     */","    function report(node, key) {","        const version = supportInfo.version","        const feature = supportInfo.features[key]","        if (feature.supported) {","            return","        }","","        if (!feature.supportedInStrict) {","            context.report({","                node,","                message: \"{{feature}} {{be}} not supported yet on Node v{{version}}.\",","                data: {","                    feature: feature.name,","                    be: feature.singular ? \"is\" : \"are\",","                    version,","                },","            })","        }","        else if (!isStrict()) {","            context.report({","                node,","                message: \"{{feature}} {{be}} not supported yet on Node v{{version}}.\",","                data: {","                    feature: `${feature.name} in non-strict mode`,","                    be: feature.singular ? \"is\" : \"are\",","                    version,","                },","            })","        }","    }","","    return {","        //----------------------------------------------------------------------","        // Program","        //----------------------------------------------------------------------","","        \"Program:exit\"() {","            // Check new global variables.","            for (const name of NEW_BUILTIN_TYPES) {","                for (const reference of getReferences([name])) {","                    report(reference.identifier, name)","                }","            }","","            // Check static methods.","            for (const reference of getReferences(Object.keys(PROPERTY_TEST_TARGETS))) {","                const node = reference.identifier","                const parentNode = node.parent","                if (parentNode.type !== \"MemberExpression\" ||","                    parentNode.object !== node","                ) {","                    continue","                }","","                const objectName = node.name","                const properties = PROPERTY_TEST_TARGETS[objectName]","                const propertyName = (parentNode.computed ? getValueIfString : getIdentifierName)(parentNode.property)","                if (propertyName && properties.indexOf(propertyName) !== -1) {","                    report(parentNode, `${objectName}.${propertyName}`)","                }","            }","","            // Check subclassing","            for (const reference of getReferences(SUBCLASSING_TEST_TARGETS)) {","                const node = reference.identifier","                const parentNode = node.parent","                if (CLASS_TYPE.test(parentNode.type) &&","                    parentNode.superClass === node","                ) {","                    report(node, `extends${node.name}`)","                }","            }","        },","","        //----------------------------------------------------------------------","        // Functions","        //----------------------------------------------------------------------","","        \"ArrowFunctionExpression\"(node) {","            report(node, \"arrowFunctions\")","            if (node.async) {","                report(node, \"asyncAwait\")","            }","            if (hasTrailingCommaForFunction(node)) {","                report(node, \"trailingCommasInFunctionSyntax\")","            }","        },","","        \"AssignmentPattern\"(node) {","            if (FUNC_TYPE.test(node.parent.type)) {","                report(node, \"defaultParameters\")","            }","        },","","        \"FunctionDeclaration\"(node) {","            const scope = context.getScope().upper","            if (!TOPLEVEL_SCOPE_TYPE.test(scope.type)) {","                report(node, \"blockScopedFunctions\")","            }","            if (node.generator) {","                report(node, \"generatorFunctions\")","            }","            if (node.async) {","                report(node, \"asyncAwait\")","            }","            if (hasTrailingCommaForFunction(node)) {","                report(node, \"trailingCommasInFunctionSyntax\")","            }","        },","","        \"FunctionExpression\"(node) {","            if (node.generator) {","                report(node, \"generatorFunctions\")","            }","            if (node.async) {","                report(node, \"asyncAwait\")","            }","            if (hasTrailingCommaForFunction(node)) {","                report(node, \"trailingCommasInFunctionSyntax\")","            }","        },","","        \"MetaProperty\"(node) {","            const meta = node.meta.name || node.meta","            const property = node.property.name || node.property","            if (meta === \"new\" && property === \"target\") {","                report(node, \"new.target\")","            }","        },","","        \"RestElement\"(node) {","            if (FUNC_TYPE.test(node.parent.type)) {","                report(node, \"restParameters\")","            }","        },","","        //----------------------------------------------------------------------","        // Classes","        //----------------------------------------------------------------------","","        \"ClassDeclaration\"(node) {","            report(node, \"classes\")","","            if (extendsNull(node)) {","                report(node, \"extendsNull\")","            }","        },","","        \"ClassExpression\"(node) {","            report(node, \"classes\")","","            if (extendsNull(node)) {","                report(node, \"extendsNull\")","            }","        },","","        //----------------------------------------------------------------------","        // Statements","        //----------------------------------------------------------------------","","        \"ForOfStatement\"(node) {","            report(node, \"forOf\")","        },","","        \"VariableDeclaration\"(node) {","            if (node.kind === \"const\") {","                report(node, \"const\")","            }","            else if (node.kind === \"let\") {","                report(node, \"let\")","            }","        },","","        //----------------------------------------------------------------------","        // Expressions","        //----------------------------------------------------------------------","","        \"ArrayPattern\"(node) {","            if (DESTRUCTURING_PARENT_TYPE.test(node.parent.type)) {","                report(node, \"destructuring\")","            }","        },","","        \"AssignmentExpression\"(node) {","            if (node.operator === \"**=\") {","                report(node, \"exponentialOperators\")","            }","        },","","        \"AwaitExpression\"(node) {","            report(node, \"asyncAwait\")","        },","","        \"BinaryExpression\"(node) {","            if (node.operator === \"**\") {","                report(node, \"exponentialOperators\")","            }","        },","","        \"CallExpression\"(node) {","            if (hasTrailingCommaForCall(node)) {","                report(node, \"trailingCommasInFunctionSyntax\")","            }","        },","","        \"Identifier\"(node) {","            const raw = sourceCode.getText(node)","            if (hasUnicodeCodePointEscape(raw)) {","                report(node, \"unicodeCodePointEscapes\")","            }","        },","","        \"Literal\"(node) {","            if (typeof node.value === \"number\") {","                if (BINARY_NUMBER.test(node.raw)) {","                    report(node, \"binaryNumberLiterals\")","                }","                else if (OCTAL_NUMBER.test(node.raw)) {","                    report(node, \"octalNumberLiterals\")","                }","            }","            else if (typeof node.value === \"string\") {","                if (hasUnicodeCodePointEscape(node.raw)) {","                    report(node, \"unicodeCodePointEscapes\")","                }","            }","            else if (node.regex) {","                if (node.regex.flags.indexOf(\"y\") !== -1) {","                    report(node, \"regexpY\")","                }","                if (node.regex.flags.indexOf(\"u\") !== -1) {","                    report(node, \"regexpU\")","                }","            }","        },","","        \"NewExpression\"(node) {","            if (node.callee.type === \"Identifier\" &&","                node.callee.name === \"RegExp\" &&","                node.arguments.length === 2 &&","                node.arguments[1].type === \"Literal\" &&","                typeof node.arguments[1].value === \"string\"","            ) {","                if (node.arguments[1].value.indexOf(\"y\") !== -1) {","                    report(node, \"regexpY\")","                }","                if (node.arguments[1].value.indexOf(\"u\") !== -1) {","                    report(node, \"regexpU\")","                }","            }","            if (hasTrailingCommaForCall(node)) {","                report(node, \"trailingCommasInFunctionSyntax\")","            }","        },","","        \"ObjectPattern\"(node) {","            if (DESTRUCTURING_PARENT_TYPE.test(node.parent.type)) {","                report(node, \"destructuring\")","            }","        },","","        \"Property\"(node) {","            if (node.parent.type === \"ObjectExpression\" &&","                (node.computed || node.shorthand || node.method)","            ) {","                if (node.shorthand && GET_OR_SET.test(node.key.name)) {","                    report(node, \"objectPropertyShorthandOfGetSet\")","                }","                else {","                    report(node, \"objectLiteralExtensions\")","                }","            }","        },","","        \"SpreadElement\"(node) {","            report(node, \"spreadOperators\", 5)","        },","","        \"TemplateLiteral\"(node) {","            report(node, \"templateStrings\")","        },","","        //----------------------------------------------------------------------","        // Modules","        //----------------------------------------------------------------------","","        \"ExportAllDeclaration\"(node) {","            report(node, \"modules\")","        },","","        \"ExportDefaultDeclaration\"(node) {","            report(node, \"modules\")","        },","","        \"ExportNamedDeclaration\"(node) {","            report(node, \"modules\")","        },","","        \"ImportDeclaration\"(node) {","            report(node, \"modules\")","        },","    }","}","","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create,","    meta: {","        docs: {","            description: \"disallow unsupported ECMAScript features on the specified version\",","            category: \"Possible Errors\",","            recommended: false,","        },","        fixable: false,","        schema: [","            {","                oneOf: [","                    {enum: VERSIONS},","                    {","                        type: \"object\",","                        properties: {","                            version: {enum: VERSIONS},","                            ignores: {","                                type: \"array\",","                                items: {enum: getIgnoresEnum()},","                                uniqueItems: true,","                            },","                        },","                        additionalProperties: false,","                    },","                ],","            },","        ],","    },","}",""],"l":{"12":1,"13":1,"14":1,"15":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"36":1,"40":1,"68":1,"69":0,"70":0,"72":0,"73":0,"75":0,"87":1,"88":0,"89":0,"91":0,"92":0,"93":0,"94":0,"96":0,"98":0,"99":0,"101":0,"106":0,"107":0,"114":0,"122":1,"123":1,"125":98,"126":229,"128":98,"129":98,"142":1,"143":0,"145":0,"156":1,"157":0,"158":0,"160":0,"161":0,"162":0,"164":0,"165":0,"166":0,"169":0,"170":0,"173":0,"177":0,"179":0,"180":0,"187":0,"188":0,"196":0,"204":0,"218":1,"219":0,"220":0,"221":0,"233":1,"234":0,"243":1,"244":0,"246":0,"247":0,"248":0,"249":0,"253":0,"262":1,"263":0,"264":0,"268":0,"276":1,"277":0,"279":0,"280":0,"282":0,"283":0,"294":1,"295":0,"296":0,"297":0,"299":0,"308":1,"309":0,"311":0,"323":1,"324":0,"336":1,"337":0,"351":1,"352":0,"353":0,"354":0,"355":0,"358":0,"359":0,"369":0,"370":0,"382":0,"389":0,"390":0,"391":0,"396":0,"397":0,"398":0,"399":0,"402":0,"405":0,"406":0,"407":0,"408":0,"409":0,"414":0,"415":0,"416":0,"417":0,"420":0,"430":0,"431":0,"432":0,"434":0,"435":0,"440":0,"441":0,"446":0,"447":0,"448":0,"450":0,"451":0,"453":0,"454":0,"456":0,"457":0,"462":0,"463":0,"465":0,"466":0,"468":0,"469":0,"474":0,"475":0,"476":0,"477":0,"482":0,"483":0,"492":0,"494":0,"495":0,"500":0,"502":0,"503":0,"512":0,"516":0,"517":0,"519":0,"520":0,"529":0,"530":0,"535":0,"536":0,"541":0,"545":0,"546":0,"551":0,"552":0,"557":0,"558":0,"559":0,"564":0,"565":0,"566":0,"568":0,"569":0,"572":0,"573":0,"574":0,"577":0,"578":0,"579":0,"581":0,"582":0,"588":0,"594":0,"595":0,"597":0,"598":0,"601":0,"602":0,"607":0,"608":0,"613":0,"616":0,"617":0,"620":0,"626":0,"630":0,"638":0,"642":0,"646":0,"650":0,"659":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/features.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/util/features.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":605,"column":1}}},"branchMap":{},"code":["/**"," * @author Toru Nagashima"," * @copyright 2015 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","module.exports = {","    //--------------------------------------------------------------------------","    // Syntax","    //--------------------------------------------------------------------------","","    \"defaultParameters\": {","        alias: [\"syntax\"],","        name: \"Default Parameters\",","        node: 6,","    },","    \"restParameters\": {","        alias: [\"syntax\"],","        name: \"Rest Parameters\",","        node: 6,","    },","    \"spreadOperators\": {","        alias: [\"syntax\"],","        name: \"Spread Operators\",","        node: 5,","    },","    \"objectLiteralExtensions\": {","        alias: [\"syntax\"],","        name: \"Object Literal Extensions\",","        node: 4,","    },","    \"objectPropertyShorthandOfGetSet\": {","        alias: [\"syntax\", \"objectLiteralExtensions\"],","        name: \"Property Shorthand of 'get' and 'set'\",","        node: 6,","    },","    \"forOf\": {","        alias: [\"syntax\"],","        name: \"'for..of' Loops\",","        node: 0.12,","    },","    \"binaryNumberLiterals\": {","        alias: [\"syntax\"],","        name: \"Binary Number Literals\",","        node: 4,","    },","    \"octalNumberLiterals\": {","        alias: [\"syntax\"],","        name: \"Octal Number Literals\",","        node: 4,","    },","    \"templateStrings\": {","        alias: [\"syntax\"],","        name: \"Template Strings\",","        node: 4,","    },","    \"regexpY\": {","        alias: [\"syntax\"],","        name: \"RegExp 'y' Flags\",","        node: 6,","    },","    \"regexpU\": {","        alias: [\"syntax\"],","        name: \"RegExp 'u' Flags\",","        node: 6,","    },","    \"destructuring\": {","        alias: [\"syntax\"],","        name: \"Destructuring\",","        node: 6,","    },","    \"unicodeCodePointEscapes\": {","        alias: [\"syntax\"],","        name: \"Unicode Code Point Escapes\",","        node: 4,","    },","    \"new.target\": {","        alias: [\"syntax\"],","        name: \"'new.target'\",","        node: 5,","    },","    \"const\": {","        alias: [\"syntax\"],","        name: \"'const' Declarations\",","        node: {","            sloppy: 6,","            strict: 4,","        },","    },","    \"let\": {","        alias: [\"syntax\"],","        name: \"'let' Declarations\",","        node: {","            sloppy: 6,","            strict: 4,","        },","    },","    \"blockScopedFunctions\": {","        alias: [\"syntax\"],","        name: \"Block-Scoped Functions\",","        node: {","            sloppy: 6,","            strict: 4,","        },","    },","    \"arrowFunctions\": {","        alias: [\"syntax\"],","        name: \"Arrow Functions\",","        node: 4,","    },","    \"generatorFunctions\": {","        alias: [\"syntax\"],","        name: \"Generator Functions\",","        node: 4,","    },","    \"classes\": {","        alias: [\"syntax\"],","        name: \"Classes\",","        node: {","            sloppy: 6,","            strict: 4,","        },","    },","    \"modules\": {","        alias: [\"syntax\"],","        name: \"Import and Export Declarations\",","        node: NaN,","    },","    \"exponentialOperators\": {","        alias: [\"syntax\"],","        name: \"Exponential Operators (**)\",","        node: 7,","    },","    \"asyncAwait\": {","        alias: [\"syntax\"],","        name: \"Async Functions\",","        node: 7.6,","    },","    \"trailingCommasInFunctionSyntax\": {","        alias: [\"syntax\"],","        name: \"Trailing Commas in Function Syntax\",","        node: NaN,","    },","","    //--------------------------------------------------------------------------","    // Runtime","    //--------------------------------------------------------------------------","","    \"Int8Array\": {","        alias: [\"runtime\", \"globalObjects\", \"typedArrays\"],","        name: \"'Int8Array'\",","        singular: true,","        node: 0.12,","    },","    \"Uint8Array\": {","        alias: [\"runtime\", \"globalObjects\", \"typedArrays\"],","        name: \"'Uint8Array'\",","        singular: true,","        node: 0.12,","    },","    \"Uint8ClampedArray\": {","        alias: [\"runtime\", \"globalObjects\", \"typedArrays\"],","        name: \"'Uint8ClampedArray'\",","        singular: true,","        node: 0.12,","    },","    \"Int16Array\": {","        alias: [\"runtime\", \"globalObjects\", \"typedArrays\"],","        name: \"'Int16Array'\",","        singular: true,","        node: 0.12,","    },","    \"Uint16Array\": {","        alias: [\"runtime\", \"globalObjects\", \"typedArrays\"],","        name: \"'Uint16Array'\",","        singular: true,","        node: 0.12,","    },","    \"Int32Array\": {","        alias: [\"runtime\", \"globalObjects\", \"typedArrays\"],","        name: \"'Int32Array'\",","        singular: true,","        node: 0.12,","    },","    \"Uint32Array\": {","        alias: [\"runtime\", \"globalObjects\", \"typedArrays\"],","        name: \"'Uint32Array'\",","        singular: true,","        node: 0.12,","    },","    \"Float32Array\": {","        alias: [\"runtime\", \"globalObjects\", \"typedArrays\"],","        name: \"'Float32Array'\",","        singular: true,","        node: 0.12,","    },","    \"Float64Array\": {","        alias: [\"runtime\", \"globalObjects\", \"typedArrays\"],","        name: \"'Float64Array'\",","        singular: true,","        node: 0.12,","    },","    \"DataView\": {","        alias: [\"runtime\", \"globalObjects\", \"typedArrays\"],","        name: \"'DataView'\",","        singular: true,","        node: 0.12,","    },","    \"Map\": {","        alias: [\"runtime\", \"globalObjects\"],","        name: \"'Map'\",","        singular: true,","        node: 0.12,","    },","    \"Set\": {","        alias: [\"runtime\", \"globalObjects\"],","        name: \"'Set'\",","        singular: true,","        node: 0.12,","    },","    \"WeakMap\": {","        alias: [\"runtime\", \"globalObjects\"],","        name: \"'WeakMap'\",","        singular: true,","        node: 0.12,","    },","    \"WeakSet\": {","        alias: [\"runtime\", \"globalObjects\"],","        name: \"'WeakSet'\",","        singular: true,","        node: 0.12,","    },","    \"Proxy\": {","        alias: [\"runtime\", \"globalObjects\"],","        name: \"'Proxy'\",","        singular: true,","        node: 6,","    },","    \"Reflect\": {","        alias: [\"runtime\", \"globalObjects\"],","        name: \"'Reflect'\",","        singular: true,","        node: 6,","    },","    \"Promise\": {","        alias: [\"runtime\", \"globalObjects\"],","        name: \"'Promise'\",","        singular: true,","        node: 0.12,","    },","    \"Symbol\": {","        alias: [\"runtime\", \"globalObjects\"],","        name: \"'Symbol'\",","        singular: true,","        node: 0.12,","    },","","    \"Object.assign\": {","        alias: [\"runtime\", \"staticMethods\", \"Object.*\"],","        name: \"'Object.assign'\",","        singular: true,","        node: 4,","    },","    \"Object.is\": {","        alias: [\"runtime\", \"staticMethods\", \"Object.*\"],","        name: \"'Object.is'\",","        singular: true,","        node: 0.12,","    },","    \"Object.getOwnPropertySymbols\": {","        alias: [\"runtime\", \"staticMethods\", \"Object.*\"],","        name: \"'Object.getOwnPropertySymbols'\",","        singular: true,","        node: 0.12,","    },","    \"Object.setPrototypeOf\": {","        alias: [\"runtime\", \"staticMethods\", \"Object.*\"],","        name: \"'Object.setPrototypeOf'\",","        singular: true,","        node: 0.12,","    },","    \"Object.values\": {","        alias: [\"runtime\", \"staticMethods\", \"Object.*\"],","        name: \"'Object.values'\",","        singular: true,","        node: 7,","    },","    \"Object.entries\": {","        alias: [\"runtime\", \"staticMethods\", \"Object.*\"],","        name: \"'Object.entries'\",","        singular: true,","        node: 7,","    },","    \"Object.getOwnPropertyDescriptors\": {","        alias: [\"runtime\", \"staticMethods\", \"Object.*\"],","        name: \"'Object.getOwnPropertyDescriptors'\",","        singular: true,","        node: 7,","    },","","    \"String.raw\": {","        alias: [\"runtime\", \"staticMethods\", \"String.*\"],","        name: \"'String.raw'\",","        singular: true,","        node: 4,","    },","    \"String.fromCodePoint\": {","        alias: [\"runtime\", \"staticMethods\", \"String.*\"],","        name: \"'String.fromCodePoint'\",","        singular: true,","        node: 4,","    },","","    \"Array.from\": {","        alias: [\"runtime\", \"staticMethods\", \"Array.*\"],","        name: \"'Array.from'\",","        singular: true,","        node: 4,","    },","    \"Array.of\": {","        alias: [\"runtime\", \"staticMethods\", \"Array.*\"],","        name: \"'Array.of'\",","        singular: true,","        node: 4,","    },","","    \"Number.isFinite\": {","        alias: [\"runtime\", \"staticMethods\", \"Number.*\"],","        name: \"'Number.isFinite'\",","        singular: true,","        node: 0.10,","    },","    \"Number.isInteger\": {","        alias: [\"runtime\", \"staticMethods\", \"Number.*\"],","        name: \"'Number.isInteger'\",","        singular: true,","        node: 0.12,","    },","    \"Number.isSafeInteger\": {","        alias: [\"runtime\", \"staticMethods\", \"Number.*\"],","        name: \"'Number.isSafeInteger'\",","        singular: true,","        node: 0.12,","    },","    \"Number.isNaN\": {","        alias: [\"runtime\", \"staticMethods\", \"Number.*\"],","        name: \"'Number.isNaN'\",","        singular: true,","        node: 0.10,","    },","    \"Number.EPSILON\": {","        alias: [\"runtime\", \"staticMethods\", \"Number.*\"],","        name: \"'Number.EPSILON'\",","        singular: true,","        node: 0.12,","    },","    \"Number.MIN_SAFE_INTEGER\": {","        alias: [\"runtime\", \"staticMethods\", \"Number.*\"],","        name: \"'Number.MIN_SAFE_INTEGER'\",","        singular: true,","        node: 0.12,","    },","    \"Number.MAX_SAFE_INTEGER\": {","        alias: [\"runtime\", \"staticMethods\", \"Number.*\"],","        name: \"'Number.MAX_SAFE_INTEGER'\",","        singular: true,","        node: 0.12,","    },","","    \"Math.clz32\": {","        alias: [\"runtime\", \"staticMethods\", \"Math.*\"],","        name: \"'Math.clz32'\",","        singular: true,","        node: 0.12,","    },","    \"Math.imul\": {","        alias: [\"runtime\", \"staticMethods\", \"Math.*\"],","        name: \"'Math.imul'\",","        singular: true,","        node: 0.12,","    },","    \"Math.sign\": {","        alias: [\"runtime\", \"staticMethods\", \"Math.*\"],","        name: \"'Math.sign'\",","        singular: true,","        node: 0.12,","    },","    \"Math.log10\": {","        alias: [\"runtime\", \"staticMethods\", \"Math.*\"],","        name: \"'Math.log10'\",","        singular: true,","        node: 0.12,","    },","    \"Math.log2\": {","        alias: [\"runtime\", \"staticMethods\", \"Math.*\"],","        name: \"'Math.log2'\",","        singular: true,","        node: 0.12,","    },","    \"Math.log1p\": {","        alias: [\"runtime\", \"staticMethods\", \"Math.*\"],","        name: \"'Math.log1p'\",","        singular: true,","        node: 0.12,","    },","    \"Math.expm1\": {","        alias: [\"runtime\", \"staticMethods\", \"Math.*\"],","        name: \"'Math.expm1'\",","        singular: true,","        node: 0.12,","    },","    \"Math.cosh\": {","        alias: [\"runtime\", \"staticMethods\", \"Math.*\"],","        name: \"'Math.cosh'\",","        singular: true,","        node: 0.12,","    },","    \"Math.sinh\": {","        alias: [\"runtime\", \"staticMethods\", \"Math.*\"],","        name: \"'Math.sinh'\",","        singular: true,","        node: 0.12,","    },","    \"Math.tanh\": {","        alias: [\"runtime\", \"staticMethods\", \"Math.*\"],","        name: \"'Math.tanh'\",","        singular: true,","        node: 0.12,","    },","    \"Math.acosh\": {","        alias: [\"runtime\", \"staticMethods\", \"Math.*\"],","        name: \"'Math.acosh'\",","        singular: true,","        node: 0.12,","    },","    \"Math.asinh\": {","        alias: [\"runtime\", \"staticMethods\", \"Math.*\"],","        name: \"'Math.asinh'\",","        singular: true,","        node: 0.12,","    },","    \"Math.atanh\": {","        alias: [\"runtime\", \"staticMethods\", \"Math.*\"],","        name: \"'Math.atanh'\",","        singular: true,","        node: 0.12,","    },","    \"Math.trunc\": {","        alias: [\"runtime\", \"staticMethods\", \"Math.*\"],","        name: \"'Math.trunc'\",","        singular: true,","        node: 0.12,","    },","    \"Math.fround\": {","        alias: [\"runtime\", \"staticMethods\", \"Math.*\"],","        name: \"'Math.fround'\",","        singular: true,","        node: 0.12,","    },","    \"Math.cbrt\": {","        alias: [\"runtime\", \"staticMethods\", \"Math.*\"],","        name: \"'Math.cbrt'\",","        singular: true,","        node: 0.12,","    },","    \"Math.hypot\": {","        alias: [\"runtime\", \"staticMethods\", \"Math.*\"],","        name: \"'Math.hypot'\",","        singular: true,","        node: 0.12,","    },","","    \"Symbol.hasInstance\": {","        alias: [\"runtime\", \"staticMethods\", \"Symbol.*\"],","        name: \"'Symbol.hasInstance'\",","        singular: true,","        node: NaN,","    },","    \"Symbol.isConcatSpreadablec\": {","        alias: [\"runtime\", \"staticMethods\", \"Symbol.*\"],","        name: \"'Symbol.isConcatSpreadablec'\",","        singular: true,","        node: 6,","    },","    \"Symbol.iterator\": {","        alias: [\"runtime\", \"staticMethods\", \"Symbol.*\"],","        name: \"'Symbol.iterator'\",","        singular: true,","        node: 0.12,","    },","    \"Symbol.species\": {","        alias: [\"runtime\", \"staticMethods\", \"Symbol.*\"],","        name: \"'Symbol.species'\",","        singular: true,","        node: NaN,","    },","    \"Symbol.replace\": {","        alias: [\"runtime\", \"staticMethods\", \"Symbol.*\"],","        name: \"'Symbol.replace'\",","        singular: true,","        node: 6,","    },","    \"Symbol.search\": {","        alias: [\"runtime\", \"staticMethods\", \"Symbol.*\"],","        name: \"'Symbol.search'\",","        singular: true,","        node: 6,","    },","    \"Symbol.split\": {","        alias: [\"runtime\", \"staticMethods\", \"Symbol.*\"],","        name: \"'Symbol.split'\",","        singular: true,","        node: 6,","    },","    \"Symbol.match\": {","        alias: [\"runtime\", \"staticMethods\", \"Symbol.*\"],","        name: \"'Symbol.match'\",","        singular: true,","        node: 6,","    },","    \"Symbol.toPrimitive\": {","        alias: [\"runtime\", \"staticMethods\", \"Symbol.*\"],","        name: \"'Symbol.toPrimitive'\",","        singular: true,","        node: 6,","    },","    \"Symbol.toStringTag\": {","        alias: [\"runtime\", \"staticMethods\", \"Symbol.*\"],","        name: \"'Symbol.toStringTag'\",","        singular: true,","        node: 6,","    },","    \"Symbol.unscopables\": {","        alias: [\"runtime\", \"staticMethods\", \"Symbol.*\"],","        name: \"'Symbol.unscopables'\",","        singular: true,","        node: 4,","    },","","    \"extendsArray\": {","        alias: [\"runtime\", \"extends\"],","        name: \"Subclassing of 'Array'\",","        singular: true,","        node: 6,","    },","    \"extendsRegExp\": {","        alias: [\"runtime\", \"extends\"],","        name: \"Subclassing of 'RegExp'\",","        singular: true,","        node: 5,","    },","    \"extendsFunction\": {","        alias: [\"runtime\", \"extends\"],","        name: \"Subclassing of 'Function'\",","        singular: true,","        node: 6,","    },","    \"extendsPromise\": {","        alias: [\"runtime\", \"extends\"],","        name: \"Subclassing of 'Promise'\",","        singular: true,","        node: 5,","    },","    \"extendsBoolean\": {","        alias: [\"runtime\", \"extends\"],","        name: \"Subclassing of 'Boolean'\",","        singular: true,","        node: 4,","    },","    \"extendsNumber\": {","        alias: [\"runtime\", \"extends\"],","        name: \"Subclassing of 'Number'\",","        singular: true,","        node: 4,","    },","    \"extendsString\": {","        alias: [\"runtime\", \"extends\"],","        name: \"Subclassing of 'String'\",","        singular: true,","        node: 4,","    },","    \"extendsMap\": {","        alias: [\"runtime\", \"extends\"],","        name: \"Subclassing of 'Map'\",","        singular: true,","        node: 4,","    },","    \"extendsSet\": {","        alias: [\"runtime\", \"extends\"],","        name: \"Subclassing of 'Set'\",","        singular: true,","        node: 4,","    },","    \"extendsNull\": {","        alias: [\"runtime\", \"extends\"],","        name: \"'extends null'\",","        singular: true,","        node: NaN,","    },","}",""],"l":{"12":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/process-exit-as-throw.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/process-exit-as-throw.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":3,"7":3,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":1,"46":0},"b":{"1":[1,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0,0,0,0],"9":[0,0],"10":[0,1]},"f":{"1":3,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"safeRequire","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":33}}},"2":{"name":"forwardCurrentToHead","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":46}},"skip":true},"3":{"name":"isProcessExit","line":96,"loc":{"start":{"line":96,"column":0},"end":{"line":96,"column":29}}},"4":{"name":"overrideLeaveNode","line":116,"loc":{"start":{"line":116,"column":0},"end":{"line":116,"column":33}}},"5":{"name":"installProcessExitAsThrow","line":132,"loc":{"start":{"line":132,"column":15},"end":{"line":132,"column":52}}},"6":{"name":"restoreProcessExitAsThrow","line":135,"loc":{"start":{"line":135,"column":20},"end":{"line":135,"column":57}}},"7":{"name":"(anonymous_7)","line":155,"loc":{"start":{"line":155,"column":10},"end":{"line":155,"column":13}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":88}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":71}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":86}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":82}},"5":{"start":{"line":28,"column":0},"end":{"line":35,"column":1}},"6":{"start":{"line":29,"column":4},"end":{"line":34,"column":5}},"7":{"start":{"line":30,"column":8},"end":{"line":30,"column":34}},"8":{"start":{"line":33,"column":8},"end":{"line":33,"column":19}},"9":{"start":{"line":45,"column":0},"end":{"line":88,"column":1},"skip":true},"10":{"start":{"line":46,"column":4},"end":{"line":46,"column":38},"skip":true},"11":{"start":{"line":47,"column":4},"end":{"line":47,"column":45},"skip":true},"12":{"start":{"line":48,"column":4},"end":{"line":48,"column":49},"skip":true},"13":{"start":{"line":49,"column":4},"end":{"line":49,"column":43},"skip":true},"14":{"start":{"line":50,"column":4},"end":{"line":50,"column":69},"skip":true},"15":{"start":{"line":51,"column":4},"end":{"line":51,"column":13},"skip":true},"16":{"start":{"line":52,"column":4},"end":{"line":52,"column":29},"skip":true},"17":{"start":{"line":53,"column":4},"end":{"line":53,"column":26},"skip":true},"18":{"start":{"line":56,"column":4},"end":{"line":68,"column":5},"skip":true},"19":{"start":{"line":57,"column":8},"end":{"line":57,"column":43},"skip":true},"20":{"start":{"line":58,"column":8},"end":{"line":58,"column":37},"skip":true},"21":{"start":{"line":60,"column":8},"end":{"line":67,"column":9},"skip":true},"22":{"start":{"line":61,"column":12},"end":{"line":66,"column":13},"skip":true},"23":{"start":{"line":62,"column":16},"end":{"line":65,"column":25},"skip":true},"24":{"start":{"line":71,"column":4},"end":{"line":71,"column":40},"skip":true},"25":{"start":{"line":74,"column":4},"end":{"line":87,"column":5},"skip":true},"26":{"start":{"line":75,"column":8},"end":{"line":75,"column":43},"skip":true},"27":{"start":{"line":76,"column":8},"end":{"line":76,"column":37},"skip":true},"28":{"start":{"line":78,"column":8},"end":{"line":86,"column":9},"skip":true},"29":{"start":{"line":79,"column":12},"end":{"line":79,"column":49},"skip":true},"30":{"start":{"line":80,"column":12},"end":{"line":85,"column":13},"skip":true},"31":{"start":{"line":81,"column":16},"end":{"line":84,"column":25},"skip":true},"32":{"start":{"line":96,"column":0},"end":{"line":106,"column":1}},"33":{"start":{"line":97,"column":4},"end":{"line":105,"column":5}},"34":{"start":{"line":116,"column":0},"end":{"line":129,"column":1}},"35":{"start":{"line":117,"column":4},"end":{"line":128,"column":5}},"36":{"start":{"line":118,"column":8},"end":{"line":118,"column":31}},"37":{"start":{"line":120,"column":8},"end":{"line":120,"column":40}},"38":{"start":{"line":121,"column":8},"end":{"line":121,"column":52}},"39":{"start":{"line":123,"column":8},"end":{"line":123,"column":37}},"40":{"start":{"line":124,"column":8},"end":{"line":124,"column":31}},"41":{"start":{"line":127,"column":8},"end":{"line":127,"column":42}},"42":{"start":{"line":131,"column":0},"end":{"line":138,"column":1}},"43":{"start":{"line":133,"column":8},"end":{"line":133,"column":64}},"44":{"start":{"line":136,"column":8},"end":{"line":136,"column":64}},"45":{"start":{"line":144,"column":0},"end":{"line":158,"column":1}},"46":{"start":{"line":156,"column":8},"end":{"line":156,"column":22}}},"branchMap":{"1":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":26},"end":{"line":20,"column":42}},{"start":{"line":20,"column":46},"end":{"line":20,"column":82}}]},"2":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8},"skip":true},{"start":{"line":60,"column":8},"end":{"line":60,"column":8},"skip":true}]},"3":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":12},"end":{"line":60,"column":42},"skip":true},{"start":{"line":60,"column":46},"end":{"line":60,"column":60},"skip":true}]},"4":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":61,"column":12},"skip":true},{"start":{"line":61,"column":12},"end":{"line":61,"column":12},"skip":true}]},"5":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":78,"column":8},"skip":true},{"start":{"line":78,"column":8},"end":{"line":78,"column":8},"skip":true}]},"6":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":12},"end":{"line":78,"column":42},"skip":true},{"start":{"line":78,"column":46},"end":{"line":78,"column":57},"skip":true}]},"7":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":12},"end":{"line":80,"column":12},"skip":true},{"start":{"line":80,"column":12},"end":{"line":80,"column":12},"skip":true}]},"8":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":8},"end":{"line":98,"column":38}},{"start":{"line":99,"column":8},"end":{"line":99,"column":47}},{"start":{"line":100,"column":8},"end":{"line":100,"column":38}},{"start":{"line":101,"column":8},"end":{"line":101,"column":48}},{"start":{"line":102,"column":8},"end":{"line":102,"column":45}},{"start":{"line":103,"column":8},"end":{"line":103,"column":50}},{"start":{"line":104,"column":8},"end":{"line":104,"column":44}}]},"9":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":117,"column":4}},{"start":{"line":117,"column":4},"end":{"line":117,"column":4}}]},"10":{"line":131,"type":"cond-expr","locations":[{"start":{"line":131,"column":43},"end":{"line":131,"column":45}},{"start":{"line":131,"column":48},"end":{"line":138,"column":1}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const CodePathAnalyzer = safeRequire(\"eslint/lib/code-path-analysis/code-path-analyzer\")","const CodePath = safeRequire(\"eslint/lib/code-path-analysis/code-path\")","const CodePathSegment = safeRequire(\"eslint/lib/code-path-analysis/code-path-segment\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","const originalLeaveNode = CodePathAnalyzer && CodePathAnalyzer.prototype.leaveNode","","/**"," * Imports a specific module."," *"," * @param {string} moduleName - A module name to import."," * @returns {object|null} The imported object, or null."," */","function safeRequire(moduleName) {","    try {","        return require(moduleName)","    }","    catch (_err) {","        return null","    }","}","","/* istanbul ignore next */","/**"," * Copied from https://github.com/eslint/eslint/blob/16fad5880bb70e9dddbeab8ed0f425ae51f5841f/lib/code-path-analysis/code-path-analyzer.js#L137"," *"," * @param {CodePathAnalyzer} analyzer - The instance."," * @param {ASTNode} node - The current AST node."," * @returns {void}"," */","function forwardCurrentToHead(analyzer, node) {","    const codePath = analyzer.codePath","    const state = CodePath.getState(codePath)","    const currentSegments = state.currentSegments","    const headSegments = state.headSegments","    const end = Math.max(currentSegments.length, headSegments.length)","    let i = 0","    let currentSegment = null","    let headSegment = null","","    // Fires leaving events.","    for (i = 0; i < end; ++i) {","        currentSegment = currentSegments[i]","        headSegment = headSegments[i]","","        if (currentSegment !== headSegment && currentSegment) {","            if (currentSegment.reachable) {","                analyzer.emitter.emit(","                    \"onCodePathSegmentEnd\",","                    currentSegment,","                    node)","            }","        }","    }","","    // Update state.","    state.currentSegments = headSegments","","    // Fires entering events.","    for (i = 0; i < end; ++i) {","        currentSegment = currentSegments[i]","        headSegment = headSegments[i]","","        if (currentSegment !== headSegment && headSegment) {","            CodePathSegment.markUsed(headSegment)","            if (headSegment.reachable) {","                analyzer.emitter.emit(","                    \"onCodePathSegmentStart\",","                    headSegment,","                    node)","            }","        }","    }","}","","/**"," * Checks whether a given node is `process.exit()` or not."," *"," * @param {ASTNode} node - A node to check."," * @returns {boolean} `true` if the node is `process.exit()`."," */","function isProcessExit(node) {","    return (","        node.type === \"CallExpression\" &&","        node.callee.type === \"MemberExpression\" &&","        node.callee.computed === false &&","        node.callee.object.type === \"Identifier\" &&","        node.callee.object.name === \"process\" &&","        node.callee.property.type === \"Identifier\" &&","        node.callee.property.name === \"exit\"","    )","}","","/**"," * The function to override `CodePathAnalyzer.prototype.leaveNode` in order to"," * address `process.exit()` as throw."," *"," * @this CodePathAnalyzer"," * @param {ASTNode} node - A node to be left."," * @returns {void}"," */","function overrideLeaveNode(node) {","    if (isProcessExit(node)) {","        this.currentNode = node","","        forwardCurrentToHead(this, node)","        CodePath.getState(this.codePath).makeThrow()","","        this.original.leaveNode(node)","        this.currentNode = null","    }","    else {","        originalLeaveNode.call(this, node)","    }","}","","const visitor = CodePathAnalyzer == null ? {} : {","    \"Program\": function installProcessExitAsThrow() {","        CodePathAnalyzer.prototype.leaveNode = overrideLeaveNode","    },","    \"Program:exit\": function restoreProcessExitAsThrow() {","        CodePathAnalyzer.prototype.leaveNode = originalLeaveNode","    },","}","","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    meta: {","        docs: {","            description: \"make the same code path as `throw` at `process.exit()`\",","            category: \"Possible Errors\",","            recommended: false,","        },","        fixable: false,","        schema: [],","        supported: CodePathAnalyzer != null,","    },","    create() {","        return visitor","    },","}",""],"l":{"12":1,"13":1,"14":1,"20":1,"28":1,"29":3,"30":3,"33":0,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"56":1,"57":1,"58":1,"60":1,"61":1,"62":1,"71":1,"74":1,"75":1,"76":1,"78":1,"79":1,"80":1,"81":1,"96":1,"97":0,"116":1,"117":0,"118":0,"120":0,"121":0,"123":0,"124":0,"127":0,"131":1,"133":0,"136":0,"144":1,"156":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/shebang.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-node/node_modules/eslint-plugin-node/lib/rules/shebang.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"isBinFile","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":48}}},"2":{"name":"getShebangInfo","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":36}}},"3":{"name":"create","line":67,"loc":{"start":{"line":67,"column":0},"end":{"line":67,"column":25}}},"4":{"name":"(anonymous_4)","line":90,"loc":{"start":{"line":90,"column":15},"end":{"line":90,"column":22}}},"5":{"name":"(anonymous_5)","line":98,"loc":{"start":{"line":98,"column":27},"end":{"line":98,"column":35}}},"6":{"name":"(anonymous_6)","line":107,"loc":{"start":{"line":107,"column":27},"end":{"line":107,"column":35}}},"7":{"name":"(anonymous_7)","line":119,"loc":{"start":{"line":119,"column":23},"end":{"line":119,"column":31}}},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":23},"end":{"line":129,"column":31}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":28}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":58}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":58}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":44}},"5":{"start":{"line":21,"column":0},"end":{"line":21,"column":42}},"6":{"start":{"line":22,"column":0},"end":{"line":22,"column":70}},"7":{"start":{"line":32,"column":0},"end":{"line":40,"column":1}},"8":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"9":{"start":{"line":34,"column":8},"end":{"line":34,"column":20}},"10":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"11":{"start":{"line":37,"column":8},"end":{"line":37,"column":59}},"12":{"start":{"line":39,"column":4},"end":{"line":39,"column":95}},"13":{"start":{"line":39,"column":45},"end":{"line":39,"column":94}},"14":{"start":{"line":50,"column":0},"end":{"line":59,"column":1}},"15":{"start":{"line":51,"column":4},"end":{"line":51,"column":51}},"16":{"start":{"line":53,"column":4},"end":{"line":58,"column":5}},"17":{"start":{"line":67,"column":0},"end":{"line":136,"column":1}},"18":{"start":{"line":68,"column":4},"end":{"line":68,"column":46}},"19":{"start":{"line":69,"column":4},"end":{"line":69,"column":40}},"20":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"21":{"start":{"line":71,"column":8},"end":{"line":71,"column":17}},"22":{"start":{"line":73,"column":4},"end":{"line":73,"column":37}},"23":{"start":{"line":75,"column":4},"end":{"line":75,"column":38}},"24":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"25":{"start":{"line":77,"column":8},"end":{"line":77,"column":17}},"26":{"start":{"line":80,"column":4},"end":{"line":80,"column":44}},"27":{"start":{"line":81,"column":4},"end":{"line":84,"column":5}},"28":{"start":{"line":86,"column":4},"end":{"line":86,"column":60}},"29":{"start":{"line":87,"column":4},"end":{"line":87,"column":43}},"30":{"start":{"line":89,"column":4},"end":{"line":135,"column":5}},"31":{"start":{"line":91,"column":12},"end":{"line":133,"column":13}},"32":{"start":{"line":94,"column":16},"end":{"line":102,"column":17}},"33":{"start":{"line":95,"column":20},"end":{"line":101,"column":22}},"34":{"start":{"line":99,"column":28},"end":{"line":99,"column":61}},"35":{"start":{"line":103,"column":16},"end":{"line":112,"column":17}},"36":{"start":{"line":104,"column":20},"end":{"line":111,"column":22}},"37":{"start":{"line":108,"column":28},"end":{"line":108,"column":71}},"38":{"start":{"line":109,"column":28},"end":{"line":109,"column":72}},"39":{"start":{"line":114,"column":17},"end":{"line":133,"column":13}},"40":{"start":{"line":116,"column":16},"end":{"line":122,"column":18}},"41":{"start":{"line":120,"column":24},"end":{"line":120,"column":86}},"42":{"start":{"line":126,"column":16},"end":{"line":132,"column":18}},"43":{"start":{"line":130,"column":24},"end":{"line":130,"column":66}},"44":{"start":{"line":142,"column":0},"end":{"line":161,"column":1}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"3":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":20},"end":{"line":55,"column":21}},{"start":{"line":55,"column":25},"end":{"line":55,"column":29}}]},"4":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":17},"end":{"line":56,"column":18}},{"start":{"line":56,"column":22},"end":{"line":56,"column":33}},{"start":{"line":56,"column":38},"end":{"line":56,"column":39}}]},"5":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":18},"end":{"line":57,"column":19}},{"start":{"line":57,"column":23},"end":{"line":57,"column":27}},{"start":{"line":57,"column":32},"end":{"line":57,"column":43}},{"start":{"line":57,"column":49},"end":{"line":57,"column":51}}]},"6":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"7":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"8":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":12},"end":{"line":91,"column":12}},{"start":{"line":91,"column":12},"end":{"line":91,"column":12}}]},"9":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":31},"end":{"line":91,"column":70}},{"start":{"line":91,"column":73},"end":{"line":91,"column":86}}]},"10":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":16},"end":{"line":94,"column":16}},{"start":{"line":94,"column":16},"end":{"line":94,"column":16}}]},"11":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":20},"end":{"line":94,"column":32}},{"start":{"line":94,"column":36},"end":{"line":94,"column":44}}]},"12":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":16},"end":{"line":103,"column":16}},{"start":{"line":103,"column":16},"end":{"line":103,"column":16}}]},"13":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":20},"end":{"line":103,"column":32}},{"start":{"line":103,"column":36},"end":{"line":103,"column":43}}]},"14":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":17},"end":{"line":114,"column":17}},{"start":{"line":114,"column":17},"end":{"line":114,"column":17}}]}},"code":["/**"," * @author Toru Nagashima"," * @copyright 2015 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const path = require(\"path\")","const getConvertPath = require(\"../util/get-convert-path\")","const getPackageJson = require(\"../util/get-package-json\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","const NODE_SHEBANG = \"#!/usr/bin/env node\\n\"","const SHEBANG_PATTERN = /^(#!.+?)?(\\r)?\\n/","const NODE_SHEBANG_PATTERN = /#!\\/usr\\/bin\\/env node(?: [^\\r\\n]+?)?\\n/","","/**"," * Checks whether or not a given path is a `bin` file."," *"," * @param {string} filePath - A file path to check."," * @param {string|object|undefined} binField - A value of the `bin` field of `package.json`."," * @param {string} basedir - A directory path that `package.json` exists."," * @returns {boolean} `true` if the file is a `bin` file."," */","function isBinFile(filePath, binField, basedir) {","    if (!binField) {","        return false","    }","    if (typeof binField === \"string\") {","        return filePath === path.resolve(basedir, binField)","    }","    return Object.keys(binField).some(key => filePath === path.resolve(basedir, binField[key]))","}","","/**"," * Gets the shebang line (includes a line ending) from a given code."," *"," * @param {SourceCode} sourceCode - A source code object to check."," * @returns {{length: number, bom: boolean, shebang: string, cr: boolean}}"," *      shebang's information."," *      `retv.shebang` is an empty string if shebang doesn't exist."," */","function getShebangInfo(sourceCode) {","    const m = SHEBANG_PATTERN.exec(sourceCode.text)","","    return {","        bom: sourceCode.hasBOM,","        cr: Boolean(m && m[2]),","        length: (m && m[0].length) || 0,","        shebang: (m && m[1] && (`${m[1]}\\n`)) || \"\",","    }","}","","/**"," * The definition of this rule."," *"," * @param {RuleContext} context - The rule context to check."," * @returns {object} The definition of this rule."," */","function create(context) {","    const sourceCode = context.getSourceCode()","    let filePath = context.getFilename()","    if (filePath === \"<input>\") {","        return {}","    }","    filePath = path.resolve(filePath)","","    const p = getPackageJson(filePath)","    if (!p) {","        return {}","    }","","    const basedir = path.dirname(p.filePath)","    filePath = path.join(","        basedir,","        getConvertPath(context)(path.relative(basedir, filePath).replace(/\\\\/g, \"/\"))","    )","","    const needsShebang = isBinFile(filePath, p.bin, basedir)","    const info = getShebangInfo(sourceCode)","","    return {","        Program(node) {","            if (needsShebang ? NODE_SHEBANG_PATTERN.test(info.shebang) : !info.shebang) {","                // Good the shebang target.","                // Checks BOM and \\r.","                if (needsShebang && info.bom) {","                    context.report({","                        node,","                        message: \"This file must not have Unicode BOM.\",","                        fix(fixer) {","                            return fixer.removeRange([-1, 0])","                        },","                    })","                }","                if (needsShebang && info.cr) {","                    context.report({","                        node,","                        message: \"This file must have Unix linebreaks (LF).\",","                        fix(fixer) {","                            const index = sourceCode.text.indexOf(\"\\r\")","                            return fixer.removeRange([index, index + 1])","                        },","                    })","                }","            }","            else if (needsShebang) {","                // Shebang is lacking.","                context.report({","                    node,","                    message: \"This file needs shebang \\\"#!/usr/bin/env node\\\".\",","                    fix(fixer) {","                        return fixer.replaceTextRange([-1, info.length], NODE_SHEBANG)","                    },","                })","            }","            else {","                // Shebang is extra.","                context.report({","                    node,","                    message: \"This file needs no shebang.\",","                    fix(fixer) {","                        return fixer.removeRange([0, info.length])","                    },","                })","            }","        },","    }","}","","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create,","    meta: {","        docs: {","            description: \"enforce the correct usage of shebang\",","            category: \"Possible Errors\",","            recommended: false,","        },","        fixable: \"code\",","        schema: [","            {","                type: \"object\",","                properties: { //","                    convertPath: getConvertPath.schema,","                },","                additionalProperties: false,","            },","        ],","    },","}",""],"l":{"12":1,"13":1,"14":1,"20":1,"21":1,"22":1,"32":1,"33":0,"34":0,"36":0,"37":0,"39":0,"50":1,"51":0,"53":0,"67":1,"68":0,"69":0,"70":0,"71":0,"73":0,"75":0,"76":0,"77":0,"80":0,"81":0,"86":0,"87":0,"89":0,"91":0,"94":0,"95":0,"99":0,"103":0,"104":0,"108":0,"109":0,"114":0,"116":0,"120":0,"126":0,"130":0,"142":1}}}